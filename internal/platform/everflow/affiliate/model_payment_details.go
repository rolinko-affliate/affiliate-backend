/*
Everflow Affiliates API

API for managing affiliates in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate

import (
	"encoding/json"
)

// checks if the PaymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaymentDetails{}

// PaymentDetails struct for PaymentDetails
type PaymentDetails struct {
	// The affiliate's paxum id (when payment_type is paxum)
	PaxumId *string `json:"paxum_id,omitempty"`
	// Reception method for PayPal
	PaypalReceptionMethod *string `json:"paypal_reception_method,omitempty"`
	// PayPal reception identifier
	ReceptionIdentifier *string `json:"reception_identifier,omitempty"`
	// Email for payoneer or veem
	Email *string `json:"email,omitempty"`
	// Whether to assign existing payee id (tipalti)
	IsExistingPayee *bool `json:"is_existing_payee,omitempty"`
	// Payee's IDAP (Payee ID) for tipalti
	Idap *string `json:"idap,omitempty"`
	// First name for veem
	FirstName *string `json:"first_name,omitempty"`
	// Last name for veem
	LastName *string `json:"last_name,omitempty"`
	// Phone number in international format (veem)
	Phone *string `json:"phone,omitempty"`
	// Country ISO code (veem)
	CountryIso *string `json:"country_iso,omitempty"`
	// Bank name (wire/direct_deposit)
	BankName *string `json:"bank_name,omitempty"`
	// Bank address (wire/direct_deposit)
	BankAddress *string `json:"bank_address,omitempty"`
	// Bank account name (wire/direct_deposit)
	AccountName *string `json:"account_name,omitempty"`
	// Bank account number (wire/direct_deposit)
	AccountNumber *string `json:"account_number,omitempty"`
	// Bank routing number (wire/direct_deposit)
	RoutingNumber *string `json:"routing_number,omitempty"`
	// SWIFT code (wire/direct_deposit)
	SwiftCode *string `json:"swift_code,omitempty"`
}

// NewPaymentDetails instantiates a new PaymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentDetails() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// NewPaymentDetailsWithDefaults instantiates a new PaymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentDetailsWithDefaults() *PaymentDetails {
	this := PaymentDetails{}
	return &this
}

// GetPaxumId returns the PaxumId field value if set, zero value otherwise.
func (o *PaymentDetails) GetPaxumId() string {
	if o == nil || IsNil(o.PaxumId) {
		var ret string
		return ret
	}
	return *o.PaxumId
}

// GetPaxumIdOk returns a tuple with the PaxumId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetPaxumIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaxumId) {
		return nil, false
	}
	return o.PaxumId, true
}

// HasPaxumId returns a boolean if a field has been set.
func (o *PaymentDetails) HasPaxumId() bool {
	if o != nil && !IsNil(o.PaxumId) {
		return true
	}

	return false
}

// SetPaxumId gets a reference to the given string and assigns it to the PaxumId field.
func (o *PaymentDetails) SetPaxumId(v string) {
	o.PaxumId = &v
}

// GetPaypalReceptionMethod returns the PaypalReceptionMethod field value if set, zero value otherwise.
func (o *PaymentDetails) GetPaypalReceptionMethod() string {
	if o == nil || IsNil(o.PaypalReceptionMethod) {
		var ret string
		return ret
	}
	return *o.PaypalReceptionMethod
}

// GetPaypalReceptionMethodOk returns a tuple with the PaypalReceptionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetPaypalReceptionMethodOk() (*string, bool) {
	if o == nil || IsNil(o.PaypalReceptionMethod) {
		return nil, false
	}
	return o.PaypalReceptionMethod, true
}

// HasPaypalReceptionMethod returns a boolean if a field has been set.
func (o *PaymentDetails) HasPaypalReceptionMethod() bool {
	if o != nil && !IsNil(o.PaypalReceptionMethod) {
		return true
	}

	return false
}

// SetPaypalReceptionMethod gets a reference to the given string and assigns it to the PaypalReceptionMethod field.
func (o *PaymentDetails) SetPaypalReceptionMethod(v string) {
	o.PaypalReceptionMethod = &v
}

// GetReceptionIdentifier returns the ReceptionIdentifier field value if set, zero value otherwise.
func (o *PaymentDetails) GetReceptionIdentifier() string {
	if o == nil || IsNil(o.ReceptionIdentifier) {
		var ret string
		return ret
	}
	return *o.ReceptionIdentifier
}

// GetReceptionIdentifierOk returns a tuple with the ReceptionIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetReceptionIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ReceptionIdentifier) {
		return nil, false
	}
	return o.ReceptionIdentifier, true
}

// HasReceptionIdentifier returns a boolean if a field has been set.
func (o *PaymentDetails) HasReceptionIdentifier() bool {
	if o != nil && !IsNil(o.ReceptionIdentifier) {
		return true
	}

	return false
}

// SetReceptionIdentifier gets a reference to the given string and assigns it to the ReceptionIdentifier field.
func (o *PaymentDetails) SetReceptionIdentifier(v string) {
	o.ReceptionIdentifier = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *PaymentDetails) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *PaymentDetails) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *PaymentDetails) SetEmail(v string) {
	o.Email = &v
}

// GetIsExistingPayee returns the IsExistingPayee field value if set, zero value otherwise.
func (o *PaymentDetails) GetIsExistingPayee() bool {
	if o == nil || IsNil(o.IsExistingPayee) {
		var ret bool
		return ret
	}
	return *o.IsExistingPayee
}

// GetIsExistingPayeeOk returns a tuple with the IsExistingPayee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetIsExistingPayeeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExistingPayee) {
		return nil, false
	}
	return o.IsExistingPayee, true
}

// HasIsExistingPayee returns a boolean if a field has been set.
func (o *PaymentDetails) HasIsExistingPayee() bool {
	if o != nil && !IsNil(o.IsExistingPayee) {
		return true
	}

	return false
}

// SetIsExistingPayee gets a reference to the given bool and assigns it to the IsExistingPayee field.
func (o *PaymentDetails) SetIsExistingPayee(v bool) {
	o.IsExistingPayee = &v
}

// GetIdap returns the Idap field value if set, zero value otherwise.
func (o *PaymentDetails) GetIdap() string {
	if o == nil || IsNil(o.Idap) {
		var ret string
		return ret
	}
	return *o.Idap
}

// GetIdapOk returns a tuple with the Idap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetIdapOk() (*string, bool) {
	if o == nil || IsNil(o.Idap) {
		return nil, false
	}
	return o.Idap, true
}

// HasIdap returns a boolean if a field has been set.
func (o *PaymentDetails) HasIdap() bool {
	if o != nil && !IsNil(o.Idap) {
		return true
	}

	return false
}

// SetIdap gets a reference to the given string and assigns it to the Idap field.
func (o *PaymentDetails) SetIdap(v string) {
	o.Idap = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *PaymentDetails) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *PaymentDetails) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *PaymentDetails) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *PaymentDetails) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *PaymentDetails) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *PaymentDetails) SetLastName(v string) {
	o.LastName = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *PaymentDetails) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *PaymentDetails) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *PaymentDetails) SetPhone(v string) {
	o.Phone = &v
}

// GetCountryIso returns the CountryIso field value if set, zero value otherwise.
func (o *PaymentDetails) GetCountryIso() string {
	if o == nil || IsNil(o.CountryIso) {
		var ret string
		return ret
	}
	return *o.CountryIso
}

// GetCountryIsoOk returns a tuple with the CountryIso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetCountryIsoOk() (*string, bool) {
	if o == nil || IsNil(o.CountryIso) {
		return nil, false
	}
	return o.CountryIso, true
}

// HasCountryIso returns a boolean if a field has been set.
func (o *PaymentDetails) HasCountryIso() bool {
	if o != nil && !IsNil(o.CountryIso) {
		return true
	}

	return false
}

// SetCountryIso gets a reference to the given string and assigns it to the CountryIso field.
func (o *PaymentDetails) SetCountryIso(v string) {
	o.CountryIso = &v
}

// GetBankName returns the BankName field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankName() string {
	if o == nil || IsNil(o.BankName) {
		var ret string
		return ret
	}
	return *o.BankName
}

// GetBankNameOk returns a tuple with the BankName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankNameOk() (*string, bool) {
	if o == nil || IsNil(o.BankName) {
		return nil, false
	}
	return o.BankName, true
}

// HasBankName returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankName() bool {
	if o != nil && !IsNil(o.BankName) {
		return true
	}

	return false
}

// SetBankName gets a reference to the given string and assigns it to the BankName field.
func (o *PaymentDetails) SetBankName(v string) {
	o.BankName = &v
}

// GetBankAddress returns the BankAddress field value if set, zero value otherwise.
func (o *PaymentDetails) GetBankAddress() string {
	if o == nil || IsNil(o.BankAddress) {
		var ret string
		return ret
	}
	return *o.BankAddress
}

// GetBankAddressOk returns a tuple with the BankAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetBankAddressOk() (*string, bool) {
	if o == nil || IsNil(o.BankAddress) {
		return nil, false
	}
	return o.BankAddress, true
}

// HasBankAddress returns a boolean if a field has been set.
func (o *PaymentDetails) HasBankAddress() bool {
	if o != nil && !IsNil(o.BankAddress) {
		return true
	}

	return false
}

// SetBankAddress gets a reference to the given string and assigns it to the BankAddress field.
func (o *PaymentDetails) SetBankAddress(v string) {
	o.BankAddress = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *PaymentDetails) GetAccountName() string {
	if o == nil || IsNil(o.AccountName) {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetAccountNameOk() (*string, bool) {
	if o == nil || IsNil(o.AccountName) {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *PaymentDetails) HasAccountName() bool {
	if o != nil && !IsNil(o.AccountName) {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *PaymentDetails) SetAccountName(v string) {
	o.AccountName = &v
}

// GetAccountNumber returns the AccountNumber field value if set, zero value otherwise.
func (o *PaymentDetails) GetAccountNumber() string {
	if o == nil || IsNil(o.AccountNumber) {
		var ret string
		return ret
	}
	return *o.AccountNumber
}

// GetAccountNumberOk returns a tuple with the AccountNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetAccountNumberOk() (*string, bool) {
	if o == nil || IsNil(o.AccountNumber) {
		return nil, false
	}
	return o.AccountNumber, true
}

// HasAccountNumber returns a boolean if a field has been set.
func (o *PaymentDetails) HasAccountNumber() bool {
	if o != nil && !IsNil(o.AccountNumber) {
		return true
	}

	return false
}

// SetAccountNumber gets a reference to the given string and assigns it to the AccountNumber field.
func (o *PaymentDetails) SetAccountNumber(v string) {
	o.AccountNumber = &v
}

// GetRoutingNumber returns the RoutingNumber field value if set, zero value otherwise.
func (o *PaymentDetails) GetRoutingNumber() string {
	if o == nil || IsNil(o.RoutingNumber) {
		var ret string
		return ret
	}
	return *o.RoutingNumber
}

// GetRoutingNumberOk returns a tuple with the RoutingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetRoutingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingNumber) {
		return nil, false
	}
	return o.RoutingNumber, true
}

// HasRoutingNumber returns a boolean if a field has been set.
func (o *PaymentDetails) HasRoutingNumber() bool {
	if o != nil && !IsNil(o.RoutingNumber) {
		return true
	}

	return false
}

// SetRoutingNumber gets a reference to the given string and assigns it to the RoutingNumber field.
func (o *PaymentDetails) SetRoutingNumber(v string) {
	o.RoutingNumber = &v
}

// GetSwiftCode returns the SwiftCode field value if set, zero value otherwise.
func (o *PaymentDetails) GetSwiftCode() string {
	if o == nil || IsNil(o.SwiftCode) {
		var ret string
		return ret
	}
	return *o.SwiftCode
}

// GetSwiftCodeOk returns a tuple with the SwiftCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaymentDetails) GetSwiftCodeOk() (*string, bool) {
	if o == nil || IsNil(o.SwiftCode) {
		return nil, false
	}
	return o.SwiftCode, true
}

// HasSwiftCode returns a boolean if a field has been set.
func (o *PaymentDetails) HasSwiftCode() bool {
	if o != nil && !IsNil(o.SwiftCode) {
		return true
	}

	return false
}

// SetSwiftCode gets a reference to the given string and assigns it to the SwiftCode field.
func (o *PaymentDetails) SetSwiftCode(v string) {
	o.SwiftCode = &v
}

func (o PaymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaxumId) {
		toSerialize["paxum_id"] = o.PaxumId
	}
	if !IsNil(o.PaypalReceptionMethod) {
		toSerialize["paypal_reception_method"] = o.PaypalReceptionMethod
	}
	if !IsNil(o.ReceptionIdentifier) {
		toSerialize["reception_identifier"] = o.ReceptionIdentifier
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.IsExistingPayee) {
		toSerialize["is_existing_payee"] = o.IsExistingPayee
	}
	if !IsNil(o.Idap) {
		toSerialize["idap"] = o.Idap
	}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.CountryIso) {
		toSerialize["country_iso"] = o.CountryIso
	}
	if !IsNil(o.BankName) {
		toSerialize["bank_name"] = o.BankName
	}
	if !IsNil(o.BankAddress) {
		toSerialize["bank_address"] = o.BankAddress
	}
	if !IsNil(o.AccountName) {
		toSerialize["account_name"] = o.AccountName
	}
	if !IsNil(o.AccountNumber) {
		toSerialize["account_number"] = o.AccountNumber
	}
	if !IsNil(o.RoutingNumber) {
		toSerialize["routing_number"] = o.RoutingNumber
	}
	if !IsNil(o.SwiftCode) {
		toSerialize["swift_code"] = o.SwiftCode
	}
	return toSerialize, nil
}

type NullablePaymentDetails struct {
	value *PaymentDetails
	isSet bool
}

func (v NullablePaymentDetails) Get() *PaymentDetails {
	return v.value
}

func (v *NullablePaymentDetails) Set(val *PaymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentDetails(val *PaymentDetails) *NullablePaymentDetails {
	return &NullablePaymentDetails{value: val, isSet: true}
}

func (v NullablePaymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
