/*
Everflow Network API - Advertisers

API for managing advertisers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package advertiser

import (
	"encoding/json"
)

// checks if the Employee type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Employee{}

// Employee struct for Employee
type Employee struct {
	FirstName                  *string `json:"first_name,omitempty"`
	LastName                   *string `json:"last_name,omitempty"`
	Email                      *string `json:"email,omitempty"`
	WorkPhone                  *string `json:"work_phone,omitempty"`
	CellPhone                  *string `json:"cell_phone,omitempty"`
	InstantMessagingId         *int32  `json:"instant_messaging_id,omitempty"`
	InstantMessagingIdentifier *string `json:"instant_messaging_identifier,omitempty"`
}

// NewEmployee instantiates a new Employee object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmployee() *Employee {
	this := Employee{}
	return &this
}

// NewEmployeeWithDefaults instantiates a new Employee object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmployeeWithDefaults() *Employee {
	this := Employee{}
	return &this
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Employee) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Employee) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Employee) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Employee) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Employee) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Employee) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Employee) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Employee) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Employee) SetEmail(v string) {
	o.Email = &v
}

// GetWorkPhone returns the WorkPhone field value if set, zero value otherwise.
func (o *Employee) GetWorkPhone() string {
	if o == nil || IsNil(o.WorkPhone) {
		var ret string
		return ret
	}
	return *o.WorkPhone
}

// GetWorkPhoneOk returns a tuple with the WorkPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetWorkPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.WorkPhone) {
		return nil, false
	}
	return o.WorkPhone, true
}

// HasWorkPhone returns a boolean if a field has been set.
func (o *Employee) HasWorkPhone() bool {
	if o != nil && !IsNil(o.WorkPhone) {
		return true
	}

	return false
}

// SetWorkPhone gets a reference to the given string and assigns it to the WorkPhone field.
func (o *Employee) SetWorkPhone(v string) {
	o.WorkPhone = &v
}

// GetCellPhone returns the CellPhone field value if set, zero value otherwise.
func (o *Employee) GetCellPhone() string {
	if o == nil || IsNil(o.CellPhone) {
		var ret string
		return ret
	}
	return *o.CellPhone
}

// GetCellPhoneOk returns a tuple with the CellPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetCellPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.CellPhone) {
		return nil, false
	}
	return o.CellPhone, true
}

// HasCellPhone returns a boolean if a field has been set.
func (o *Employee) HasCellPhone() bool {
	if o != nil && !IsNil(o.CellPhone) {
		return true
	}

	return false
}

// SetCellPhone gets a reference to the given string and assigns it to the CellPhone field.
func (o *Employee) SetCellPhone(v string) {
	o.CellPhone = &v
}

// GetInstantMessagingId returns the InstantMessagingId field value if set, zero value otherwise.
func (o *Employee) GetInstantMessagingId() int32 {
	if o == nil || IsNil(o.InstantMessagingId) {
		var ret int32
		return ret
	}
	return *o.InstantMessagingId
}

// GetInstantMessagingIdOk returns a tuple with the InstantMessagingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetInstantMessagingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstantMessagingId) {
		return nil, false
	}
	return o.InstantMessagingId, true
}

// HasInstantMessagingId returns a boolean if a field has been set.
func (o *Employee) HasInstantMessagingId() bool {
	if o != nil && !IsNil(o.InstantMessagingId) {
		return true
	}

	return false
}

// SetInstantMessagingId gets a reference to the given int32 and assigns it to the InstantMessagingId field.
func (o *Employee) SetInstantMessagingId(v int32) {
	o.InstantMessagingId = &v
}

// GetInstantMessagingIdentifier returns the InstantMessagingIdentifier field value if set, zero value otherwise.
func (o *Employee) GetInstantMessagingIdentifier() string {
	if o == nil || IsNil(o.InstantMessagingIdentifier) {
		var ret string
		return ret
	}
	return *o.InstantMessagingIdentifier
}

// GetInstantMessagingIdentifierOk returns a tuple with the InstantMessagingIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Employee) GetInstantMessagingIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.InstantMessagingIdentifier) {
		return nil, false
	}
	return o.InstantMessagingIdentifier, true
}

// HasInstantMessagingIdentifier returns a boolean if a field has been set.
func (o *Employee) HasInstantMessagingIdentifier() bool {
	if o != nil && !IsNil(o.InstantMessagingIdentifier) {
		return true
	}

	return false
}

// SetInstantMessagingIdentifier gets a reference to the given string and assigns it to the InstantMessagingIdentifier field.
func (o *Employee) SetInstantMessagingIdentifier(v string) {
	o.InstantMessagingIdentifier = &v
}

func (o Employee) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Employee) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FirstName) {
		toSerialize["first_name"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["last_name"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.WorkPhone) {
		toSerialize["work_phone"] = o.WorkPhone
	}
	if !IsNil(o.CellPhone) {
		toSerialize["cell_phone"] = o.CellPhone
	}
	if !IsNil(o.InstantMessagingId) {
		toSerialize["instant_messaging_id"] = o.InstantMessagingId
	}
	if !IsNil(o.InstantMessagingIdentifier) {
		toSerialize["instant_messaging_identifier"] = o.InstantMessagingIdentifier
	}
	return toSerialize, nil
}

type NullableEmployee struct {
	value *Employee
	isSet bool
}

func (v NullableEmployee) Get() *Employee {
	return v.value
}

func (v *NullableEmployee) Set(val *Employee) {
	v.value = val
	v.isSet = true
}

func (v NullableEmployee) IsSet() bool {
	return v.isSet
}

func (v *NullableEmployee) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmployee(val *Employee) *NullableEmployee {
	return &NullableEmployee{value: val, isSet: true}
}

func (v NullableEmployee) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmployee) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
