/*
Everflow Affiliates API

API for managing affiliates in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate

import (
	"encoding/json"
)

// checks if the BillingDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BillingDetails{}

// BillingDetails struct for BillingDetails
type BillingDetails struct {
	// Day of the week (0-6) for weekly billing
	DayOfWeek *int32 `json:"day_of_week,omitempty"`
	// First day of month for bimonthly billing
	DayOfMonthOne *int32 `json:"day_of_month_one,omitempty"`
	// Second day of month for bimonthly billing
	DayOfMonthTwo *int32 `json:"day_of_month_two,omitempty"`
	// Day of month for monthly/quarterly billing
	DayOfMonth *int32 `json:"day_of_month,omitempty"`
	// Starting month for quarterly billing
	StartingMonth *int32 `json:"starting_month,omitempty"`
}

// NewBillingDetails instantiates a new BillingDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBillingDetails() *BillingDetails {
	this := BillingDetails{}
	return &this
}

// NewBillingDetailsWithDefaults instantiates a new BillingDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBillingDetailsWithDefaults() *BillingDetails {
	this := BillingDetails{}
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *BillingDetails) GetDayOfWeek() int32 {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret int32
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDetails) GetDayOfWeekOk() (*int32, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *BillingDetails) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given int32 and assigns it to the DayOfWeek field.
func (o *BillingDetails) SetDayOfWeek(v int32) {
	o.DayOfWeek = &v
}

// GetDayOfMonthOne returns the DayOfMonthOne field value if set, zero value otherwise.
func (o *BillingDetails) GetDayOfMonthOne() int32 {
	if o == nil || IsNil(o.DayOfMonthOne) {
		var ret int32
		return ret
	}
	return *o.DayOfMonthOne
}

// GetDayOfMonthOneOk returns a tuple with the DayOfMonthOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDetails) GetDayOfMonthOneOk() (*int32, bool) {
	if o == nil || IsNil(o.DayOfMonthOne) {
		return nil, false
	}
	return o.DayOfMonthOne, true
}

// HasDayOfMonthOne returns a boolean if a field has been set.
func (o *BillingDetails) HasDayOfMonthOne() bool {
	if o != nil && !IsNil(o.DayOfMonthOne) {
		return true
	}

	return false
}

// SetDayOfMonthOne gets a reference to the given int32 and assigns it to the DayOfMonthOne field.
func (o *BillingDetails) SetDayOfMonthOne(v int32) {
	o.DayOfMonthOne = &v
}

// GetDayOfMonthTwo returns the DayOfMonthTwo field value if set, zero value otherwise.
func (o *BillingDetails) GetDayOfMonthTwo() int32 {
	if o == nil || IsNil(o.DayOfMonthTwo) {
		var ret int32
		return ret
	}
	return *o.DayOfMonthTwo
}

// GetDayOfMonthTwoOk returns a tuple with the DayOfMonthTwo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDetails) GetDayOfMonthTwoOk() (*int32, bool) {
	if o == nil || IsNil(o.DayOfMonthTwo) {
		return nil, false
	}
	return o.DayOfMonthTwo, true
}

// HasDayOfMonthTwo returns a boolean if a field has been set.
func (o *BillingDetails) HasDayOfMonthTwo() bool {
	if o != nil && !IsNil(o.DayOfMonthTwo) {
		return true
	}

	return false
}

// SetDayOfMonthTwo gets a reference to the given int32 and assigns it to the DayOfMonthTwo field.
func (o *BillingDetails) SetDayOfMonthTwo(v int32) {
	o.DayOfMonthTwo = &v
}

// GetDayOfMonth returns the DayOfMonth field value if set, zero value otherwise.
func (o *BillingDetails) GetDayOfMonth() int32 {
	if o == nil || IsNil(o.DayOfMonth) {
		var ret int32
		return ret
	}
	return *o.DayOfMonth
}

// GetDayOfMonthOk returns a tuple with the DayOfMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDetails) GetDayOfMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.DayOfMonth) {
		return nil, false
	}
	return o.DayOfMonth, true
}

// HasDayOfMonth returns a boolean if a field has been set.
func (o *BillingDetails) HasDayOfMonth() bool {
	if o != nil && !IsNil(o.DayOfMonth) {
		return true
	}

	return false
}

// SetDayOfMonth gets a reference to the given int32 and assigns it to the DayOfMonth field.
func (o *BillingDetails) SetDayOfMonth(v int32) {
	o.DayOfMonth = &v
}

// GetStartingMonth returns the StartingMonth field value if set, zero value otherwise.
func (o *BillingDetails) GetStartingMonth() int32 {
	if o == nil || IsNil(o.StartingMonth) {
		var ret int32
		return ret
	}
	return *o.StartingMonth
}

// GetStartingMonthOk returns a tuple with the StartingMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BillingDetails) GetStartingMonthOk() (*int32, bool) {
	if o == nil || IsNil(o.StartingMonth) {
		return nil, false
	}
	return o.StartingMonth, true
}

// HasStartingMonth returns a boolean if a field has been set.
func (o *BillingDetails) HasStartingMonth() bool {
	if o != nil && !IsNil(o.StartingMonth) {
		return true
	}

	return false
}

// SetStartingMonth gets a reference to the given int32 and assigns it to the StartingMonth field.
func (o *BillingDetails) SetStartingMonth(v int32) {
	o.StartingMonth = &v
}

func (o BillingDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BillingDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["day_of_week"] = o.DayOfWeek
	}
	if !IsNil(o.DayOfMonthOne) {
		toSerialize["day_of_month_one"] = o.DayOfMonthOne
	}
	if !IsNil(o.DayOfMonthTwo) {
		toSerialize["day_of_month_two"] = o.DayOfMonthTwo
	}
	if !IsNil(o.DayOfMonth) {
		toSerialize["day_of_month"] = o.DayOfMonth
	}
	if !IsNil(o.StartingMonth) {
		toSerialize["starting_month"] = o.StartingMonth
	}
	return toSerialize, nil
}

type NullableBillingDetails struct {
	value *BillingDetails
	isSet bool
}

func (v NullableBillingDetails) Get() *BillingDetails {
	return v.value
}

func (v *NullableBillingDetails) Set(val *BillingDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableBillingDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableBillingDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBillingDetails(val *BillingDetails) *NullableBillingDetails {
	return &NullableBillingDetails{value: val, isSet: true}
}

func (v NullableBillingDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBillingDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
