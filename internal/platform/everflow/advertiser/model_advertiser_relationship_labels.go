/*
Everflow Network API - Advertisers

API for managing advertisers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package advertiser

import (
	"encoding/json"
)

// checks if the AdvertiserRelationshipLabels type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdvertiserRelationshipLabels{}

// AdvertiserRelationshipLabels struct for AdvertiserRelationshipLabels
type AdvertiserRelationshipLabels struct {
	Total *int32 `json:"total,omitempty"`
	Entries []string `json:"entries,omitempty"`
}

// NewAdvertiserRelationshipLabels instantiates a new AdvertiserRelationshipLabels object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvertiserRelationshipLabels() *AdvertiserRelationshipLabels {
	this := AdvertiserRelationshipLabels{}
	return &this
}

// NewAdvertiserRelationshipLabelsWithDefaults instantiates a new AdvertiserRelationshipLabels object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvertiserRelationshipLabelsWithDefaults() *AdvertiserRelationshipLabels {
	this := AdvertiserRelationshipLabels{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *AdvertiserRelationshipLabels) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvertiserRelationshipLabels) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *AdvertiserRelationshipLabels) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *AdvertiserRelationshipLabels) SetTotal(v int32) {
	o.Total = &v
}

// GetEntries returns the Entries field value if set, zero value otherwise.
func (o *AdvertiserRelationshipLabels) GetEntries() []string {
	if o == nil || IsNil(o.Entries) {
		var ret []string
		return ret
	}
	return o.Entries
}

// GetEntriesOk returns a tuple with the Entries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdvertiserRelationshipLabels) GetEntriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Entries) {
		return nil, false
	}
	return o.Entries, true
}

// HasEntries returns a boolean if a field has been set.
func (o *AdvertiserRelationshipLabels) HasEntries() bool {
	if o != nil && !IsNil(o.Entries) {
		return true
	}

	return false
}

// SetEntries gets a reference to the given []string and assigns it to the Entries field.
func (o *AdvertiserRelationshipLabels) SetEntries(v []string) {
	o.Entries = v
}

func (o AdvertiserRelationshipLabels) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdvertiserRelationshipLabels) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Entries) {
		toSerialize["entries"] = o.Entries
	}
	return toSerialize, nil
}

type NullableAdvertiserRelationshipLabels struct {
	value *AdvertiserRelationshipLabels
	isSet bool
}

func (v NullableAdvertiserRelationshipLabels) Get() *AdvertiserRelationshipLabels {
	return v.value
}

func (v *NullableAdvertiserRelationshipLabels) Set(val *AdvertiserRelationshipLabels) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvertiserRelationshipLabels) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvertiserRelationshipLabels) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvertiserRelationshipLabels(val *AdvertiserRelationshipLabels) *NullableAdvertiserRelationshipLabels {
	return &NullableAdvertiserRelationshipLabels{value: val, isSet: true}
}

func (v NullableAdvertiserRelationshipLabels) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvertiserRelationshipLabels) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


