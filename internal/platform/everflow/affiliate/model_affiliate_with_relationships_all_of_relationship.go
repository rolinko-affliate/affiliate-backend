/*
Everflow Affiliates API

API for managing affiliates in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate

import (
	"encoding/json"
)

// checks if the AffiliateWithRelationshipsAllOfRelationship type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffiliateWithRelationshipsAllOfRelationship{}

// AffiliateWithRelationshipsAllOfRelationship Additional relationship data based on requested relationships
type AffiliateWithRelationshipsAllOfRelationship struct {
	Labels *AffiliateWithRelationshipsAllOfRelationshipLabels `json:"labels,omitempty"`
	AccountManager *AffiliateWithRelationshipsAllOfRelationshipAccountManager `json:"account_manager,omitempty"`
	// Encoded affiliate ID
	EncodedValue *string `json:"encoded_value,omitempty"`
}

// NewAffiliateWithRelationshipsAllOfRelationship instantiates a new AffiliateWithRelationshipsAllOfRelationship object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateWithRelationshipsAllOfRelationship() *AffiliateWithRelationshipsAllOfRelationship {
	this := AffiliateWithRelationshipsAllOfRelationship{}
	return &this
}

// NewAffiliateWithRelationshipsAllOfRelationshipWithDefaults instantiates a new AffiliateWithRelationshipsAllOfRelationship object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateWithRelationshipsAllOfRelationshipWithDefaults() *AffiliateWithRelationshipsAllOfRelationship {
	this := AffiliateWithRelationshipsAllOfRelationship{}
	return &this
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetLabels() AffiliateWithRelationshipsAllOfRelationshipLabels {
	if o == nil || IsNil(o.Labels) {
		var ret AffiliateWithRelationshipsAllOfRelationshipLabels
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetLabelsOk() (*AffiliateWithRelationshipsAllOfRelationshipLabels, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given AffiliateWithRelationshipsAllOfRelationshipLabels and assigns it to the Labels field.
func (o *AffiliateWithRelationshipsAllOfRelationship) SetLabels(v AffiliateWithRelationshipsAllOfRelationshipLabels) {
	o.Labels = &v
}

// GetAccountManager returns the AccountManager field value if set, zero value otherwise.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetAccountManager() AffiliateWithRelationshipsAllOfRelationshipAccountManager {
	if o == nil || IsNil(o.AccountManager) {
		var ret AffiliateWithRelationshipsAllOfRelationshipAccountManager
		return ret
	}
	return *o.AccountManager
}

// GetAccountManagerOk returns a tuple with the AccountManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetAccountManagerOk() (*AffiliateWithRelationshipsAllOfRelationshipAccountManager, bool) {
	if o == nil || IsNil(o.AccountManager) {
		return nil, false
	}
	return o.AccountManager, true
}

// HasAccountManager returns a boolean if a field has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) HasAccountManager() bool {
	if o != nil && !IsNil(o.AccountManager) {
		return true
	}

	return false
}

// SetAccountManager gets a reference to the given AffiliateWithRelationshipsAllOfRelationshipAccountManager and assigns it to the AccountManager field.
func (o *AffiliateWithRelationshipsAllOfRelationship) SetAccountManager(v AffiliateWithRelationshipsAllOfRelationshipAccountManager) {
	o.AccountManager = &v
}

// GetEncodedValue returns the EncodedValue field value if set, zero value otherwise.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetEncodedValue() string {
	if o == nil || IsNil(o.EncodedValue) {
		var ret string
		return ret
	}
	return *o.EncodedValue
}

// GetEncodedValueOk returns a tuple with the EncodedValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) GetEncodedValueOk() (*string, bool) {
	if o == nil || IsNil(o.EncodedValue) {
		return nil, false
	}
	return o.EncodedValue, true
}

// HasEncodedValue returns a boolean if a field has been set.
func (o *AffiliateWithRelationshipsAllOfRelationship) HasEncodedValue() bool {
	if o != nil && !IsNil(o.EncodedValue) {
		return true
	}

	return false
}

// SetEncodedValue gets a reference to the given string and assigns it to the EncodedValue field.
func (o *AffiliateWithRelationshipsAllOfRelationship) SetEncodedValue(v string) {
	o.EncodedValue = &v
}

func (o AffiliateWithRelationshipsAllOfRelationship) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffiliateWithRelationshipsAllOfRelationship) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.AccountManager) {
		toSerialize["account_manager"] = o.AccountManager
	}
	if !IsNil(o.EncodedValue) {
		toSerialize["encoded_value"] = o.EncodedValue
	}
	return toSerialize, nil
}

type NullableAffiliateWithRelationshipsAllOfRelationship struct {
	value *AffiliateWithRelationshipsAllOfRelationship
	isSet bool
}

func (v NullableAffiliateWithRelationshipsAllOfRelationship) Get() *AffiliateWithRelationshipsAllOfRelationship {
	return v.value
}

func (v *NullableAffiliateWithRelationshipsAllOfRelationship) Set(val *AffiliateWithRelationshipsAllOfRelationship) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateWithRelationshipsAllOfRelationship) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateWithRelationshipsAllOfRelationship) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateWithRelationshipsAllOfRelationship(val *AffiliateWithRelationshipsAllOfRelationship) *NullableAffiliateWithRelationshipsAllOfRelationship {
	return &NullableAffiliateWithRelationshipsAllOfRelationship{value: val, isSet: true}
}

func (v NullableAffiliateWithRelationshipsAllOfRelationship) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateWithRelationshipsAllOfRelationship) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


