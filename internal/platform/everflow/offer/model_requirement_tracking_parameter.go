/*
Everflow Network API - Offers

API for managing offers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package offer

import (
	"encoding/json"
)

// checks if the RequirementTrackingParameter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequirementTrackingParameter{}

// RequirementTrackingParameter struct for RequirementTrackingParameter
type RequirementTrackingParameter struct {
	// Tracking parameter name
	TrackingParameter *string `json:"tracking_parameter,omitempty"`
	// Parameter value
	Value *string `json:"value,omitempty"`
}

// NewRequirementTrackingParameter instantiates a new RequirementTrackingParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequirementTrackingParameter() *RequirementTrackingParameter {
	this := RequirementTrackingParameter{}
	return &this
}

// NewRequirementTrackingParameterWithDefaults instantiates a new RequirementTrackingParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequirementTrackingParameterWithDefaults() *RequirementTrackingParameter {
	this := RequirementTrackingParameter{}
	return &this
}

// GetTrackingParameter returns the TrackingParameter field value if set, zero value otherwise.
func (o *RequirementTrackingParameter) GetTrackingParameter() string {
	if o == nil || IsNil(o.TrackingParameter) {
		var ret string
		return ret
	}
	return *o.TrackingParameter
}

// GetTrackingParameterOk returns a tuple with the TrackingParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequirementTrackingParameter) GetTrackingParameterOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingParameter) {
		return nil, false
	}
	return o.TrackingParameter, true
}

// HasTrackingParameter returns a boolean if a field has been set.
func (o *RequirementTrackingParameter) HasTrackingParameter() bool {
	if o != nil && !IsNil(o.TrackingParameter) {
		return true
	}

	return false
}

// SetTrackingParameter gets a reference to the given string and assigns it to the TrackingParameter field.
func (o *RequirementTrackingParameter) SetTrackingParameter(v string) {
	o.TrackingParameter = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RequirementTrackingParameter) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequirementTrackingParameter) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RequirementTrackingParameter) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RequirementTrackingParameter) SetValue(v string) {
	o.Value = &v
}

func (o RequirementTrackingParameter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequirementTrackingParameter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrackingParameter) {
		toSerialize["tracking_parameter"] = o.TrackingParameter
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRequirementTrackingParameter struct {
	value *RequirementTrackingParameter
	isSet bool
}

func (v NullableRequirementTrackingParameter) Get() *RequirementTrackingParameter {
	return v.value
}

func (v *NullableRequirementTrackingParameter) Set(val *RequirementTrackingParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableRequirementTrackingParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableRequirementTrackingParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequirementTrackingParameter(val *RequirementTrackingParameter) *NullableRequirementTrackingParameter {
	return &NullableRequirementTrackingParameter{value: val, isSet: true}
}

func (v NullableRequirementTrackingParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequirementTrackingParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


