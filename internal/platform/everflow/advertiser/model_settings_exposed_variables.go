/*
Everflow Network API - Advertisers

API for managing advertisers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package advertiser

import (
	"encoding/json"
)

// checks if the SettingsExposedVariables type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SettingsExposedVariables{}

// SettingsExposedVariables Variables exposed in the Advertiser UI
type SettingsExposedVariables struct {
	// Whether to expose affiliate id variable
	AffiliateId *bool `json:"affiliate_id,omitempty"`
	// Whether to expose affiliate variables (name and id)
	Affiliate *bool `json:"affiliate,omitempty"`
	// Whether to expose Sub1 variable
	Sub1 *bool `json:"sub1,omitempty"`
	// Whether to expose Sub2 variable
	Sub2 *bool `json:"sub2,omitempty"`
	// Whether to expose Sub3 variable
	Sub3 *bool `json:"sub3,omitempty"`
	// Whether to expose Sub4 variable
	Sub4 *bool `json:"sub4,omitempty"`
	// Whether to expose Sub5 variable
	Sub5 *bool `json:"sub5,omitempty"`
	// Whether to expose Source ID variable
	SourceId *bool `json:"source_id,omitempty"`
	// Whether to expose offer URL variable
	OfferUrl *bool `json:"offer_url,omitempty"`
}

// NewSettingsExposedVariables instantiates a new SettingsExposedVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSettingsExposedVariables() *SettingsExposedVariables {
	this := SettingsExposedVariables{}
	return &this
}

// NewSettingsExposedVariablesWithDefaults instantiates a new SettingsExposedVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSettingsExposedVariablesWithDefaults() *SettingsExposedVariables {
	this := SettingsExposedVariables{}
	return &this
}

// GetAffiliateId returns the AffiliateId field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetAffiliateId() bool {
	if o == nil || IsNil(o.AffiliateId) {
		var ret bool
		return ret
	}
	return *o.AffiliateId
}

// GetAffiliateIdOk returns a tuple with the AffiliateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetAffiliateIdOk() (*bool, bool) {
	if o == nil || IsNil(o.AffiliateId) {
		return nil, false
	}
	return o.AffiliateId, true
}

// HasAffiliateId returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasAffiliateId() bool {
	if o != nil && !IsNil(o.AffiliateId) {
		return true
	}

	return false
}

// SetAffiliateId gets a reference to the given bool and assigns it to the AffiliateId field.
func (o *SettingsExposedVariables) SetAffiliateId(v bool) {
	o.AffiliateId = &v
}

// GetAffiliate returns the Affiliate field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetAffiliate() bool {
	if o == nil || IsNil(o.Affiliate) {
		var ret bool
		return ret
	}
	return *o.Affiliate
}

// GetAffiliateOk returns a tuple with the Affiliate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetAffiliateOk() (*bool, bool) {
	if o == nil || IsNil(o.Affiliate) {
		return nil, false
	}
	return o.Affiliate, true
}

// HasAffiliate returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasAffiliate() bool {
	if o != nil && !IsNil(o.Affiliate) {
		return true
	}

	return false
}

// SetAffiliate gets a reference to the given bool and assigns it to the Affiliate field.
func (o *SettingsExposedVariables) SetAffiliate(v bool) {
	o.Affiliate = &v
}

// GetSub1 returns the Sub1 field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSub1() bool {
	if o == nil || IsNil(o.Sub1) {
		var ret bool
		return ret
	}
	return *o.Sub1
}

// GetSub1Ok returns a tuple with the Sub1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSub1Ok() (*bool, bool) {
	if o == nil || IsNil(o.Sub1) {
		return nil, false
	}
	return o.Sub1, true
}

// HasSub1 returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSub1() bool {
	if o != nil && !IsNil(o.Sub1) {
		return true
	}

	return false
}

// SetSub1 gets a reference to the given bool and assigns it to the Sub1 field.
func (o *SettingsExposedVariables) SetSub1(v bool) {
	o.Sub1 = &v
}

// GetSub2 returns the Sub2 field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSub2() bool {
	if o == nil || IsNil(o.Sub2) {
		var ret bool
		return ret
	}
	return *o.Sub2
}

// GetSub2Ok returns a tuple with the Sub2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSub2Ok() (*bool, bool) {
	if o == nil || IsNil(o.Sub2) {
		return nil, false
	}
	return o.Sub2, true
}

// HasSub2 returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSub2() bool {
	if o != nil && !IsNil(o.Sub2) {
		return true
	}

	return false
}

// SetSub2 gets a reference to the given bool and assigns it to the Sub2 field.
func (o *SettingsExposedVariables) SetSub2(v bool) {
	o.Sub2 = &v
}

// GetSub3 returns the Sub3 field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSub3() bool {
	if o == nil || IsNil(o.Sub3) {
		var ret bool
		return ret
	}
	return *o.Sub3
}

// GetSub3Ok returns a tuple with the Sub3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSub3Ok() (*bool, bool) {
	if o == nil || IsNil(o.Sub3) {
		return nil, false
	}
	return o.Sub3, true
}

// HasSub3 returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSub3() bool {
	if o != nil && !IsNil(o.Sub3) {
		return true
	}

	return false
}

// SetSub3 gets a reference to the given bool and assigns it to the Sub3 field.
func (o *SettingsExposedVariables) SetSub3(v bool) {
	o.Sub3 = &v
}

// GetSub4 returns the Sub4 field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSub4() bool {
	if o == nil || IsNil(o.Sub4) {
		var ret bool
		return ret
	}
	return *o.Sub4
}

// GetSub4Ok returns a tuple with the Sub4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSub4Ok() (*bool, bool) {
	if o == nil || IsNil(o.Sub4) {
		return nil, false
	}
	return o.Sub4, true
}

// HasSub4 returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSub4() bool {
	if o != nil && !IsNil(o.Sub4) {
		return true
	}

	return false
}

// SetSub4 gets a reference to the given bool and assigns it to the Sub4 field.
func (o *SettingsExposedVariables) SetSub4(v bool) {
	o.Sub4 = &v
}

// GetSub5 returns the Sub5 field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSub5() bool {
	if o == nil || IsNil(o.Sub5) {
		var ret bool
		return ret
	}
	return *o.Sub5
}

// GetSub5Ok returns a tuple with the Sub5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSub5Ok() (*bool, bool) {
	if o == nil || IsNil(o.Sub5) {
		return nil, false
	}
	return o.Sub5, true
}

// HasSub5 returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSub5() bool {
	if o != nil && !IsNil(o.Sub5) {
		return true
	}

	return false
}

// SetSub5 gets a reference to the given bool and assigns it to the Sub5 field.
func (o *SettingsExposedVariables) SetSub5(v bool) {
	o.Sub5 = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetSourceId() bool {
	if o == nil || IsNil(o.SourceId) {
		var ret bool
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetSourceIdOk() (*bool, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given bool and assigns it to the SourceId field.
func (o *SettingsExposedVariables) SetSourceId(v bool) {
	o.SourceId = &v
}

// GetOfferUrl returns the OfferUrl field value if set, zero value otherwise.
func (o *SettingsExposedVariables) GetOfferUrl() bool {
	if o == nil || IsNil(o.OfferUrl) {
		var ret bool
		return ret
	}
	return *o.OfferUrl
}

// GetOfferUrlOk returns a tuple with the OfferUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SettingsExposedVariables) GetOfferUrlOk() (*bool, bool) {
	if o == nil || IsNil(o.OfferUrl) {
		return nil, false
	}
	return o.OfferUrl, true
}

// HasOfferUrl returns a boolean if a field has been set.
func (o *SettingsExposedVariables) HasOfferUrl() bool {
	if o != nil && !IsNil(o.OfferUrl) {
		return true
	}

	return false
}

// SetOfferUrl gets a reference to the given bool and assigns it to the OfferUrl field.
func (o *SettingsExposedVariables) SetOfferUrl(v bool) {
	o.OfferUrl = &v
}

func (o SettingsExposedVariables) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SettingsExposedVariables) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AffiliateId) {
		toSerialize["affiliate_id"] = o.AffiliateId
	}
	if !IsNil(o.Affiliate) {
		toSerialize["affiliate"] = o.Affiliate
	}
	if !IsNil(o.Sub1) {
		toSerialize["sub1"] = o.Sub1
	}
	if !IsNil(o.Sub2) {
		toSerialize["sub2"] = o.Sub2
	}
	if !IsNil(o.Sub3) {
		toSerialize["sub3"] = o.Sub3
	}
	if !IsNil(o.Sub4) {
		toSerialize["sub4"] = o.Sub4
	}
	if !IsNil(o.Sub5) {
		toSerialize["sub5"] = o.Sub5
	}
	if !IsNil(o.SourceId) {
		toSerialize["source_id"] = o.SourceId
	}
	if !IsNil(o.OfferUrl) {
		toSerialize["offer_url"] = o.OfferUrl
	}
	return toSerialize, nil
}

type NullableSettingsExposedVariables struct {
	value *SettingsExposedVariables
	isSet bool
}

func (v NullableSettingsExposedVariables) Get() *SettingsExposedVariables {
	return v.value
}

func (v *NullableSettingsExposedVariables) Set(val *SettingsExposedVariables) {
	v.value = val
	v.isSet = true
}

func (v NullableSettingsExposedVariables) IsSet() bool {
	return v.isSet
}

func (v *NullableSettingsExposedVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSettingsExposedVariables(val *SettingsExposedVariables) *NullableSettingsExposedVariables {
	return &NullableSettingsExposedVariables{value: val, isSet: true}
}

func (v NullableSettingsExposedVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSettingsExposedVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
