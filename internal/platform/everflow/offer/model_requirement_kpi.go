/*
Everflow Network API - Offers

API for managing offers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package offer

import (
	"encoding/json"
)

// checks if the RequirementKPI type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequirementKPI{}

// RequirementKPI struct for RequirementKPI
type RequirementKPI struct {
	// KPI threshold
	Kpi *string `json:"kpi,omitempty"`
}

// NewRequirementKPI instantiates a new RequirementKPI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequirementKPI() *RequirementKPI {
	this := RequirementKPI{}
	return &this
}

// NewRequirementKPIWithDefaults instantiates a new RequirementKPI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequirementKPIWithDefaults() *RequirementKPI {
	this := RequirementKPI{}
	return &this
}

// GetKpi returns the Kpi field value if set, zero value otherwise.
func (o *RequirementKPI) GetKpi() string {
	if o == nil || IsNil(o.Kpi) {
		var ret string
		return ret
	}
	return *o.Kpi
}

// GetKpiOk returns a tuple with the Kpi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequirementKPI) GetKpiOk() (*string, bool) {
	if o == nil || IsNil(o.Kpi) {
		return nil, false
	}
	return o.Kpi, true
}

// HasKpi returns a boolean if a field has been set.
func (o *RequirementKPI) HasKpi() bool {
	if o != nil && !IsNil(o.Kpi) {
		return true
	}

	return false
}

// SetKpi gets a reference to the given string and assigns it to the Kpi field.
func (o *RequirementKPI) SetKpi(v string) {
	o.Kpi = &v
}

func (o RequirementKPI) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequirementKPI) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Kpi) {
		toSerialize["kpi"] = o.Kpi
	}
	return toSerialize, nil
}

type NullableRequirementKPI struct {
	value *RequirementKPI
	isSet bool
}

func (v NullableRequirementKPI) Get() *RequirementKPI {
	return v.value
}

func (v *NullableRequirementKPI) Set(val *RequirementKPI) {
	v.value = val
	v.isSet = true
}

func (v NullableRequirementKPI) IsSet() bool {
	return v.isSet
}

func (v *NullableRequirementKPI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequirementKPI(val *RequirementKPI) *NullableRequirementKPI {
	return &NullableRequirementKPI{value: val, isSet: true}
}

func (v NullableRequirementKPI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequirementKPI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


