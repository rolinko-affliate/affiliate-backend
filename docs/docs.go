// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/advertiser-provider-mappings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new advertiser provider mapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Create advertiser provider mapping",
                "parameters": [
                    {
                        "description": "Provider mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created provider mapping",
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserProviderMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertiser-provider-mappings/{mappingId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an advertiser provider mapping by mapping ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Update advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAdvertiserProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an advertiser provider mapping by mapping ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Delete advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid mapping ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new advertiser with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Create a new advertiser",
                "parameters": [
                    {
                        "description": "Advertiser details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created advertiser",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{advertiser_id}/campaigns": {
            "get": {
                "description": "Retrieve campaigns for a specific advertiser with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "advertiser_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an advertiser by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Get advertiser by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser details",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an advertiser with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Update advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Advertiser details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated advertiser",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an advertiser by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Delete advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/compare-with-everflow": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Compares an advertiser with its Everflow counterpart and returns discrepancies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Compare advertiser with Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comparison results with discrepancies",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an advertiser provider mapping by advertiser ID and provider type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Get advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider mapping details",
                        "schema": {
                            "$ref": "#/definitions/models.GetAdvertiserProviderMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Provider mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/sync-from-everflow": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Syncs an advertiser from the Everflow platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Sync advertiser from Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/sync-to-everflow": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Syncs an advertiser to the Everflow platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Sync advertiser to Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate provider mapping",
                "parameters": [
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings/{mappingId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid mapping ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate",
                "parameters": [
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search for affiliates/publishers filtered by country, partner domains, and/or verticals with full publisher data, sorted by country rankings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Search affiliates by country, partner domains, and verticals",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AffiliatesSearchRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of publishers with full data sorted by country rankings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AnalyticsPublisherResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No affiliates found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/affiliates/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affiliate details",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider Type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapping details",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}/tracking-links": {
            "get": {
                "description": "Retrieve a list of tracking links for a specific affiliate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/advertisers": {
            "post": {
                "description": "Create a new advertiser analytics entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create advertiser analytics data",
                "parameters": [
                    {
                        "description": "Advertiser data",
                        "name": "advertiser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advertiser created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsAdvertiser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/advertisers/{id}": {
            "get": {
                "description": "Retrieve detailed analytics data for a specific advertiser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get advertiser analytics data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser analytics data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsAdvertiserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/affiliates": {
            "post": {
                "description": "Create a new publisher analytics entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create publisher analytics data",
                "parameters": [
                    {
                        "description": "Publisher data",
                        "name": "publisher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreatePublisherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Publisher created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsPublisher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/affiliates/{id}": {
            "get": {
                "description": "Retrieve detailed analytics data for a specific publisher (affiliate)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get publisher analytics data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Publisher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publisher analytics data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsPublisherResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Publisher not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/autocomplete": {
            "get": {
                "description": "Search advertisers and/or publishers by domain name for autocompletion (minimum 3 characters)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Search organizations for autocompletion",
                "parameters": [
                    {
                        "minLength": 3,
                        "type": "string",
                        "description": "Search query (minimum 3 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "advertiser",
                            "publisher",
                            "both"
                        ],
                        "type": "string",
                        "default": "both",
                        "description": "Organization type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocompletion results",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.AutocompleteResult"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "post": {
                "description": "Create a new campaign with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a new campaign",
                "parameters": [
                    {
                        "description": "Campaign creation request",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "description": "Retrieve a campaign by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get a campaign by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing campaign with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update a campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign update request",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a campaign by its ID",
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete a campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}/tracking-links": {
            "get": {
                "description": "Retrieve a list of tracking links for a specific campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Status UP",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of organizations with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "List organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new organization with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admins can create organizations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an organization by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get organization by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an organization with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an organization by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/advertisers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of advertisers for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "List advertisers by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of advertisers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Advertiser"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/affiliates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of affiliates for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "List affiliates by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of affiliates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Affiliate"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/campaigns": {
            "get": {
                "description": "Retrieve campaigns for a specific organization with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links": {
            "get": {
                "description": "Retrieve a list of tracking links for a specific organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new tracking link for a campaign and affiliate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Create a new tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/generate": {
            "post": {
                "description": "Generate a new tracking link with provider integration for a campaign and affiliate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Generate a new tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}": {
            "get": {
                "description": "Retrieve a tracking link by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Get a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing tracking link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Update a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tracking link by its ID",
                "tags": [
                    "tracking-links"
                ],
                "summary": "Delete a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}/qr": {
            "get": {
                "description": "Generate and return a QR code image for a tracking link",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Get tracking link QR code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code image\" encoded with base64",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}/regenerate": {
            "post": {
                "description": "Regenerate an existing tracking link with provider integration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Regenerate a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Create a new profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/upsert": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new profile if it doesn't exist, or updates an existing one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Upsert a profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpsertProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upserted profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing user profile with only the provided fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile deleted successfully"
                    },
                    "400": {
                        "description": "Invalid profile ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/webhooks/supabase/new-user": {
            "post": {
                "description": "Process webhook from Supabase when a new user is created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Handle Supabase new user webhook",
                "parameters": [
                    {
                        "description": "Webhook payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SupabaseUserWebhookPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Advertiser": {
            "type": "object",
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "advertiser_id": {
                    "type": "integer"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "description": "JSONB",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingDetails"
                        }
                    ]
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "description": "General purpose fields (provider-agnostic)",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "'active', 'pending', 'inactive', 'rejected'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AdvertiserProviderMapping": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "last_sync_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_advertiser_id": {
                    "description": "e.g., Everflow's network_advertiser_id",
                    "type": "string"
                },
                "provider_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_data": {
                    "description": "Provider-specific data (stored as JSONB) - contains all Everflow-specific fields",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "sync_error": {
                    "type": "string"
                },
                "sync_status": {
                    "description": "Synchronization metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Affiliate": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "billing_info": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_address": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "internal_notes": {
                    "description": "General purpose fields moved from EverflowProviderData",
                    "type": "string"
                },
                "invoice_amount_threshold": {
                    "type": "number"
                },
                "labels": {
                    "description": "JSONB stored as string (array of strings)",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payment_details": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "status": {
                    "description": "'active', 'pending', 'rejected', 'inactive'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AffiliateNetworkData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.AffiliateProviderMapping": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "api_credentials": {
                    "description": "JSONB stored as string for API keys/tokens",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "last_sync_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_affiliate_id": {
                    "description": "e.g., Everflow's network_affiliate_id",
                    "type": "string"
                },
                "provider_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_data": {
                    "description": "Provider-specific data (stored as JSONB) - contains all Everflow-specific fields",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "sync_error": {
                    "type": "string"
                },
                "sync_status": {
                    "description": "Synchronization metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsAdvertiser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favicon_image_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "screenshot_image_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsAdvertiserResponse": {
            "type": "object",
            "properties": {
                "advertiser": {
                    "type": "object",
                    "properties": {
                        "affiliateNetworks": {
                            "$ref": "#/definitions/domain.AffiliateNetworkData"
                        },
                        "backlinks": {},
                        "contactEmails": {
                            "$ref": "#/definitions/domain.ContactEmailData"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "keywords": {
                            "$ref": "#/definitions/domain.KeywordData"
                        },
                        "metaData": {
                            "$ref": "#/definitions/domain.MetaData"
                        },
                        "partnerInformation": {},
                        "relatedAdvertisers": {},
                        "socialMedia": {
                            "$ref": "#/definitions/domain.SocialMediaData"
                        },
                        "verticals": {
                            "$ref": "#/definitions/domain.VerticalData"
                        }
                    }
                }
            }
        },
        "domain.AnalyticsPublisher": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favicon_image_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "known": {
                    "type": "boolean"
                },
                "promotype": {
                    "type": "string"
                },
                "relevance": {
                    "type": "number"
                },
                "screenshot_image_url": {
                    "type": "string"
                },
                "traffic_score": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsPublisherResponse": {
            "type": "object",
            "properties": {
                "publisher": {
                    "type": "object",
                    "properties": {
                        "affiliateNetworks": {
                            "$ref": "#/definitions/domain.AffiliateNetworkData"
                        },
                        "countryRankings": {
                            "$ref": "#/definitions/domain.CountryRankingData"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "keywords": {
                            "$ref": "#/definitions/domain.KeywordData"
                        },
                        "known": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "liveUrls": {},
                        "metaData": {
                            "$ref": "#/definitions/domain.MetaData"
                        },
                        "partnerInformation": {},
                        "partners": {},
                        "promotype": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        },
                        "relatedPublishers": {},
                        "relevance": {
                            "type": "number"
                        },
                        "socialMedia": {
                            "$ref": "#/definitions/domain.SocialMediaData"
                        },
                        "trafficScore": {
                            "type": "number"
                        },
                        "verticals": {},
                        "verticalsV2": {
                            "$ref": "#/definitions/domain.VerticalData"
                        }
                    }
                }
            }
        },
        "domain.AutocompleteResult": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Display name (domain for now)",
                    "type": "string"
                },
                "type": {
                    "description": "\"advertiser\" or \"publisher\"",
                    "type": "string"
                }
            }
        },
        "domain.BillingAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "domain.BillingDetails": {
            "type": "object",
            "properties": {
                "additional_details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "address": {
                    "$ref": "#/definitions/domain.BillingAddress"
                },
                "auto_invoice_start_date": {
                    "description": "Format: \"2019-06-01 00:00:00\"",
                    "type": "string"
                },
                "default_invoice_is_hidden": {
                    "type": "boolean"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "frequency": {
                    "$ref": "#/definitions/domain.BillingFrequency"
                },
                "invoice_amount_threshold": {
                    "type": "number"
                },
                "invoice_generation_days_delay": {
                    "type": "integer"
                },
                "is_invoice_creation_auto": {
                    "type": "boolean"
                },
                "payment_details": {
                    "$ref": "#/definitions/domain.PaymentDetails"
                },
                "payment_type": {
                    "$ref": "#/definitions/domain.PaymentType"
                },
                "schedule": {
                    "$ref": "#/definitions/domain.BillingSchedule"
                },
                "tax_id": {
                    "type": "string"
                }
            }
        },
        "domain.BillingFrequency": {
            "type": "string",
            "enum": [
                "weekly",
                "bimonthly",
                "monthly",
                "two_months",
                "quarterly",
                "manual",
                "other"
            ],
            "x-enum-varnames": [
                "BillingFrequencyWeekly",
                "BillingFrequencyBimonthly",
                "BillingFrequencyMonthly",
                "BillingFrequencyTwoMonths",
                "BillingFrequencyQuarterly",
                "BillingFrequencyManual",
                "BillingFrequencyOther"
            ]
        },
        "domain.BillingSchedule": {
            "type": "object",
            "properties": {
                "day_of_month": {
                    "description": "For monthly billing",
                    "type": "integer"
                },
                "day_of_month_one": {
                    "description": "For bimonthly",
                    "type": "integer"
                },
                "day_of_month_two": {
                    "description": "For bimonthly",
                    "type": "integer"
                },
                "day_of_week": {
                    "description": "For weekly billing",
                    "type": "integer"
                },
                "starting_month": {
                    "description": "For quarterly/yearly billing",
                    "type": "integer"
                }
            }
        },
        "domain.ContactEmailData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "error": {
                    "type": "boolean"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "department": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domain.CountryRankingData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "highestValue": {
                    "type": "object",
                    "properties": {
                        "countryCode": {
                            "type": "string"
                        },
                        "score": {
                            "type": "number"
                        }
                    }
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "countryCode": {
                                "type": "string"
                            },
                            "score": {
                                "type": "number"
                            }
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "countryCode": {
                                "type": "string"
                            },
                            "score": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "domain.KeywordData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "score": {
                                "type": "number"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "score": {
                                "type": "number"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domain.MetaData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "faviconImageUrl": {
                    "type": "string"
                },
                "screenshotImageUrl": {
                    "type": "string"
                }
            }
        },
        "domain.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/domain.OrganizationType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.OrganizationType": {
            "type": "string",
            "enum": [
                "advertiser",
                "affiliate",
                "platform_owner"
            ],
            "x-enum-varnames": [
                "OrganizationTypeAdvertiser",
                "OrganizationTypeAffiliate",
                "OrganizationTypePlatformOwner"
            ]
        },
        "domain.PaymentDetails": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "ach_account_type": {
                    "description": "ACH details",
                    "type": "string"
                },
                "additional_details": {
                    "description": "Additional details for other payment types",
                    "type": "object",
                    "additionalProperties": true
                },
                "bank_address": {
                    "type": "string"
                },
                "bank_name": {
                    "description": "Wire transfer details",
                    "type": "string"
                },
                "crypto_address": {
                    "type": "string"
                },
                "crypto_wallet_type": {
                    "description": "Crypto details",
                    "type": "string"
                },
                "iban": {
                    "type": "string"
                },
                "mailing_address": {
                    "description": "Check details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingAddress"
                        }
                    ]
                },
                "paypal_email": {
                    "description": "PayPal details",
                    "type": "string"
                },
                "routing_number": {
                    "type": "string"
                },
                "swift_code": {
                    "type": "string"
                },
                "type": {
                    "description": "Payment type for validation and processing",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.PaymentDetailsType"
                        }
                    ]
                }
            }
        },
        "domain.PaymentDetailsType": {
            "type": "string",
            "enum": [
                "wire",
                "ach",
                "check",
                "paypal",
                "crypto",
                "other"
            ],
            "x-enum-varnames": [
                "PaymentDetailsTypeWire",
                "PaymentDetailsTypeACH",
                "PaymentDetailsTypeCheck",
                "PaymentDetailsTypePayPal",
                "PaymentDetailsTypeCrypto",
                "PaymentDetailsTypeOther"
            ]
        },
        "domain.PaymentType": {
            "type": "string",
            "enum": [
                "wire",
                "ach",
                "check",
                "paypal",
                "crypto",
                "other"
            ],
            "x-enum-varnames": [
                "PaymentTypeWire",
                "PaymentTypeACH",
                "PaymentTypeCheck",
                "PaymentTypePayPal",
                "PaymentTypeCrypto",
                "PaymentTypeOther"
            ]
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "id": {
                    "description": "Stores the auth.uid() from Supabase Auth",
                    "type": "string"
                },
                "last_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "organization_id": {
                    "description": "Pointer for NULLable",
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "description": "Mandatory role name",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.SocialMediaData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "socialsAvailable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.VerticalData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "rank": {
                            "type": "integer"
                        },
                        "score": {
                            "type": "integer"
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "rank": {
                                "type": "integer"
                            },
                            "score": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "handlers.AffiliatesSearchRequest": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country code to filter by (optional)",
                    "type": "string",
                    "example": "US"
                },
                "offset": {
                    "description": "Page size (number of results per page)",
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "description": "Page number for pagination",
                    "type": "integer",
                    "example": 1
                },
                "partner_domains": {
                    "description": "Partner domains to search for (optional)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "amazon.com",
                        "etsy.com"
                    ]
                },
                "verticals": {
                    "description": "Verticals to filter by (optional) - matches verticalsV2 names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "E-commerce",
                        "Fashion / Clothing"
                    ]
                }
            }
        },
        "handlers.CreateAdvertiserRequest": {
            "type": "object",
            "required": [
                "data",
                "domain"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "domain": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAffiliateProviderMappingRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "provider_type"
            ],
            "properties": {
                "affiliate_id": {
                    "description": "Affiliate ID",
                    "type": "integer",
                    "example": 1
                },
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "provider_type": {
                    "description": "Provider type (e.g., 'everflow')",
                    "type": "string",
                    "example": "everflow"
                }
            }
        },
        "handlers.CreateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "organization_id"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "affiliate@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Example Affiliate"
                },
                "organization_id": {
                    "description": "Organization ID",
                    "type": "integer",
                    "example": 1
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.CreateOrganizationRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "advertiser",
                        "affiliate",
                        "platform_owner"
                    ]
                }
            }
        },
        "handlers.CreatePublisherRequest": {
            "type": "object",
            "required": [
                "data",
                "domain"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "domain": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.ProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.SupabaseUserWebhookPayload": {
            "type": "object",
            "properties": {
                "record": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "table": {
                    "description": "e.g., \"users\"",
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"INSERT\"",
                    "type": "string"
                }
            }
        },
        "handlers.UpdateAffiliateProviderMappingRequest": {
            "type": "object",
            "properties": {
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                }
            }
        },
        "handlers.UpdateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "updated@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Updated Affiliate"
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.UpdateOrganizationRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "advertiser",
                        "affiliate",
                        "platform_owner"
                    ]
                }
            }
        },
        "handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.UpsertProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "models.AdvertiserResponse": {
            "type": "object",
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "advertiser_id": {
                    "type": "integer"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CampaignListResponse": {
            "type": "object",
            "properties": {
                "campaigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.CampaignResponse": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "billing_model": {
                    "description": "Payout and revenue configuration",
                    "type": "string"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "conversion_method": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payout_amount": {
                    "type": "number"
                },
                "payout_structure": {
                    "type": "string"
                },
                "preview_url": {
                    "type": "string"
                },
                "revenue_amount": {
                    "type": "number"
                },
                "revenue_structure": {
                    "type": "string"
                },
                "session_definition": {
                    "type": "string"
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "models.CreateAdvertiserProviderMappingRequest": {
            "type": "object",
            "required": [
                "provider_mapping"
            ],
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.CreateAdvertiserProviderMappingResponse": {
            "type": "object",
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.CreateAdvertiserRequest": {
            "type": "object",
            "required": [
                "name",
                "organization_id"
            ],
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.CreateCampaignRequest": {
            "type": "object",
            "required": [
                "advertiser_id",
                "name",
                "organization_id",
                "status"
            ],
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "billing_model": {
                    "description": "Payout and revenue configuration",
                    "type": "string",
                    "enum": [
                        "click",
                        "conversion"
                    ]
                },
                "conversion_method": {
                    "type": "string",
                    "enum": [
                        "server_postback",
                        "pixel"
                    ]
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payout_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "payout_structure": {
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ]
                },
                "preview_url": {
                    "type": "string"
                },
                "revenue_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "revenue_structure": {
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ]
                },
                "session_definition": {
                    "type": "string",
                    "enum": [
                        "cookie",
                        "ip",
                        "fingerprint"
                    ]
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "active",
                        "paused",
                        "archived"
                    ]
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "public",
                        "require_approval",
                        "private"
                    ]
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "models.GetAdvertiserProviderMappingResponse": {
            "type": "object",
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.TrackingLinkGenerationRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "campaign_id",
                "name"
            ],
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "creative_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "network_offer_url_id": {
                    "type": "integer",
                    "example": 1
                },
                "network_tracking_domain_id": {
                    "type": "integer",
                    "example": 1
                },
                "network_traffic_source_id": {
                    "type": "integer",
                    "example": 1
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.TrackingLinkGenerationResponse": {
            "type": "object",
            "properties": {
                "generated_url": {
                    "type": "string",
                    "example": "https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123"
                },
                "qr_code_url": {
                    "type": "string",
                    "example": "https://api.example.com/tracking-links/1/qr"
                },
                "tracking_link": {
                    "$ref": "#/definitions/models.TrackingLinkResponse"
                }
            }
        },
        "models.TrackingLinkListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 20
                },
                "total": {
                    "type": "integer",
                    "example": 150
                },
                "total_pages": {
                    "type": "integer",
                    "example": 8
                },
                "tracking_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrackingLinkResponse"
                    }
                }
            }
        },
        "models.TrackingLinkRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "campaign_id",
                "name",
                "status"
            ],
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.TrackingLinkResponse": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-12-01T10:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "organization_id": {
                    "type": "integer",
                    "example": 1
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                },
                "tracking_link_id": {
                    "type": "integer",
                    "example": 1
                },
                "tracking_url": {
                    "type": "string",
                    "example": "https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "models.TrackingLinkUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.UpdateAdvertiserProviderMappingRequest": {
            "type": "object",
            "required": [
                "provider_mapping"
            ],
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.UpdateAdvertiserRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCampaignRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "billing_model": {
                    "description": "Payout and revenue configuration",
                    "type": "string",
                    "enum": [
                        "click",
                        "conversion"
                    ]
                },
                "conversion_method": {
                    "type": "string",
                    "enum": [
                        "server_postback",
                        "pixel"
                    ]
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "payout_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "payout_structure": {
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ]
                },
                "preview_url": {
                    "type": "string"
                },
                "revenue_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "revenue_structure": {
                    "type": "string",
                    "enum": [
                        "fixed",
                        "percentage"
                    ]
                },
                "session_definition": {
                    "type": "string",
                    "enum": [
                        "cookie",
                        "ip",
                        "fingerprint"
                    ]
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "active",
                        "paused",
                        "archived"
                    ]
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "public",
                        "require_approval",
                        "private"
                    ]
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Affiliate Backend API",
	Description:      "API Server for Affiliate Backend Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
