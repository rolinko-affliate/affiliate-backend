{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Affiliate Backend Application",
        "title": "Affiliate Backend API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/advertisers/{id}/campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of campaigns for an advertiser with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of campaigns",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Campaign"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate provider mapping",
                "parameters": [
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings/{mappingId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid mapping ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate",
                "parameters": [
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affiliate details",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider Type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapping details",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaign-provider-offers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new offer for a campaign on a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a new campaign provider offer",
                "parameters": [
                    {
                        "description": "Offer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCampaignProviderOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created offer",
                        "schema": {
                            "$ref": "#/definitions/domain.CampaignProviderOffer"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaign-provider-offers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a campaign provider offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get campaign provider offer by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer details",
                        "schema": {
                            "$ref": "#/definitions/domain.CampaignProviderOffer"
                        }
                    },
                    "400": {
                        "description": "Invalid offer ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a campaign provider offer with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign provider offer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Offer details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCampaignProviderOfferRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated offer",
                        "schema": {
                            "$ref": "#/definitions/domain.CampaignProviderOffer"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a campaign provider offer by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete campaign provider offer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Offer ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid offer ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new campaign with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a new campaign",
                "parameters": [
                    {
                        "description": "Campaign details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created campaign",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a campaign by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get campaign by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign details",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Invalid campaign ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a campaign with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated campaign",
                        "schema": {
                            "$ref": "#/definitions/domain.Campaign"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a campaign by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid campaign ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Campaign not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/campaigns/{id}/provider-offers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of provider offers for a campaign",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaign provider offers by campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of offers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.CampaignProviderOffer"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid campaign ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Status UP",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of organizations with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "List organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new organization with the given name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Only admins can create organizations",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an organization by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get organization by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an organization with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an organization by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/affiliates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of affiliates for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "List affiliates by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of affiliates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Affiliate"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of campaigns for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of campaigns",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Campaign"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Create a new profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/upsert": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new profile if it doesn't exist, or updates an existing one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Upsert a profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpsertProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upserted profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing user profile with only the provided fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile deleted successfully"
                    },
                    "400": {
                        "description": "Invalid profile ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/webhooks/supabase/new-user": {
            "post": {
                "description": "Process webhook from Supabase when a new user is created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Handle Supabase new user webhook",
                "parameters": [
                    {
                        "description": "Webhook payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SupabaseUserWebhookPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Affiliate": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "billing_info": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_address": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "internal_notes": {
                    "description": "General purpose fields moved from EverflowProviderData",
                    "type": "string"
                },
                "invoice_amount_threshold": {
                    "type": "number"
                },
                "labels": {
                    "description": "JSONB stored as string (array of strings)",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payment_details": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "status": {
                    "description": "'active', 'pending', 'rejected', 'inactive'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AffiliateProviderMapping": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "api_credentials": {
                    "description": "JSONB stored as string for API keys/tokens",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "last_sync_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_affiliate_id": {
                    "description": "e.g., Everflow's network_affiliate_id",
                    "type": "string"
                },
                "provider_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_data": {
                    "description": "Provider-specific data (stored as JSONB) - contains all Everflow-specific fields",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "sync_error": {
                    "type": "string"
                },
                "sync_status": {
                    "description": "Synchronization metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Campaign": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "app_identifier": {
                    "type": "string"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "caps_timezone_id": {
                    "type": "integer"
                },
                "conversion_method": {
                    "description": "'server_postback', 'pixel', etc.",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_id": {
                    "description": "'USD', 'EUR', etc.",
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "date_live_until": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "type": "string"
                },
                "encoded_value": {
                    "description": "Everflow tracking fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "html_description": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "is_description_plain_text": {
                    "type": "boolean"
                },
                "is_force_terms_and_conditions": {
                    "type": "boolean"
                },
                "is_use_direct_linking": {
                    "type": "boolean"
                },
                "is_using_explicit_terms_and_conditions": {
                    "type": "boolean"
                },
                "is_view_through_enabled": {
                    "type": "boolean"
                },
                "is_whitelist_check_enabled": {
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network_advertiser_id": {
                    "description": "Offer-specific fields for Everflow integration",
                    "type": "integer"
                },
                "offer_config": {
                    "description": "Additional configuration stored as JSON",
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payout_amount": {
                    "type": "number"
                },
                "payout_type": {
                    "description": "Payout and revenue configuration",
                    "type": "string"
                },
                "preview_url": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                },
                "revenue_amount": {
                    "type": "number"
                },
                "revenue_type": {
                    "description": "'rpa', 'rpc', 'rpm', etc.",
                    "type": "string"
                },
                "server_side_url": {
                    "type": "string"
                },
                "session_definition": {
                    "description": "'cookie', 'ip', 'fingerprint'",
                    "type": "string"
                },
                "session_duration": {
                    "description": "in hours",
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "description": "'draft', 'active', 'paused', 'archived'",
                    "type": "string"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "time_created": {
                    "type": "integer"
                },
                "time_saved": {
                    "type": "integer"
                },
                "today_clicks": {
                    "type": "integer"
                },
                "today_revenue": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "view_through_destination_url": {
                    "type": "string"
                },
                "visibility": {
                    "description": "'public', 'require_approval', 'private'",
                    "type": "string"
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "domain.CampaignProviderOffer": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "campaign_provider_offer_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "is_active_on_provider": {
                    "type": "boolean"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "provider_offer_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_offer_ref": {
                    "description": "Provider's Offer ID (e.g., Everflow's network_offer_id)",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "'active', 'inactive', 'suspended'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "id": {
                    "description": "Stores the auth.uid() from Supabase Auth",
                    "type": "string"
                },
                "last_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "organization_id": {
                    "description": "Pointer for NULLable",
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "description": "Mandatory role name",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAffiliateProviderMappingRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "provider_type"
            ],
            "properties": {
                "affiliate_id": {
                    "description": "Affiliate ID",
                    "type": "integer",
                    "example": 1
                },
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "provider_type": {
                    "description": "Provider type (e.g., 'everflow')",
                    "type": "string",
                    "example": "everflow"
                }
            }
        },
        "handlers.CreateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "organization_id"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "affiliate@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Example Affiliate"
                },
                "organization_id": {
                    "description": "Organization ID",
                    "type": "integer",
                    "example": 1
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.CreateCampaignProviderOfferRequest": {
            "type": "object",
            "required": [
                "campaign_id",
                "provider_type"
            ],
            "properties": {
                "campaign_id": {
                    "description": "Campaign ID",
                    "type": "integer",
                    "example": 1
                },
                "is_active_on_provider": {
                    "description": "Whether the offer is active on the provider",
                    "type": "boolean",
                    "example": true
                },
                "provider_offer_config": {
                    "description": "Provider offer configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "provider_offer_ref": {
                    "description": "Provider's offer reference",
                    "type": "string",
                    "example": "offer-12345"
                },
                "provider_type": {
                    "description": "Provider type (e.g., 'everflow')",
                    "type": "string",
                    "example": "everflow"
                }
            }
        },
        "handlers.CreateCampaignRequest": {
            "type": "object"
        },
        "handlers.CreateOrganizationRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.ProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.SupabaseUserWebhookPayload": {
            "type": "object",
            "properties": {
                "record": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "table": {
                    "description": "e.g., \"users\"",
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"INSERT\"",
                    "type": "string"
                }
            }
        },
        "handlers.UpdateAffiliateProviderMappingRequest": {
            "type": "object",
            "properties": {
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                }
            }
        },
        "handlers.UpdateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "updated@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Updated Affiliate"
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.UpdateCampaignProviderOfferRequest": {
            "type": "object",
            "properties": {
                "is_active_on_provider": {
                    "description": "Whether the offer is active on the provider",
                    "type": "boolean",
                    "example": true
                },
                "provider_offer_config": {
                    "description": "Provider offer configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "provider_offer_ref": {
                    "description": "Provider's offer reference",
                    "type": "string",
                    "example": "offer-12345"
                }
            }
        },
        "handlers.UpdateCampaignRequest": {
            "type": "object"
        },
        "handlers.UpdateOrganizationRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.UpsertProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}