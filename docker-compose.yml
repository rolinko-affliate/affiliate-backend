version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DATABASE_URL=postgres://postgres:postgres@db:5432/affiliate_platform?sslmode=disable
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - db
      - migrate-up
    volumes:
      - .:/app
    restart: unless-stopped
    profiles: ["app", "default"]

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=affiliate_platform
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles: ["app", "migration", "default"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Migration services with different profiles
  migrate-up:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./migrate up
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/affiliate_platform?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    profiles: ["migration", "app"]

  migrate-down:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./migrate down
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/affiliate_platform?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    profiles: ["migration-down"]

  migrate-check:
    build:
      context: .
      dockerfile: Dockerfile
    command: ./migrate check
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/affiliate_platform?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    profiles: ["migration-check"]

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/affiliate_platform?sslmode=disable
    depends_on:
      db:
        condition: service_healthy
    profiles: ["migration"]

volumes:
  postgres_data: