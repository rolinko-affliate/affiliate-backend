/*
Everflow Network API - Offers

API for managing offers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package offer

import (
	"encoding/json"
)

// checks if the IntegrationsForensiq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntegrationsForensiq{}

// IntegrationsForensiq struct for IntegrationsForensiq
type IntegrationsForensiq struct {
	// Click threshold
	ClickThreshold *int32 `json:"click_threshold,omitempty"`
	// Click threshold action
	Action *string `json:"action,omitempty"`
	// Conversion threshold
	ConversionThreshold *int32 `json:"conversion_threshold,omitempty"`
	// Conversion threshold status
	ConversionStatus *string `json:"conversion_status,omitempty"`
}

// NewIntegrationsForensiq instantiates a new IntegrationsForensiq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationsForensiq() *IntegrationsForensiq {
	this := IntegrationsForensiq{}
	return &this
}

// NewIntegrationsForensiqWithDefaults instantiates a new IntegrationsForensiq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationsForensiqWithDefaults() *IntegrationsForensiq {
	this := IntegrationsForensiq{}
	return &this
}

// GetClickThreshold returns the ClickThreshold field value if set, zero value otherwise.
func (o *IntegrationsForensiq) GetClickThreshold() int32 {
	if o == nil || IsNil(o.ClickThreshold) {
		var ret int32
		return ret
	}
	return *o.ClickThreshold
}

// GetClickThresholdOk returns a tuple with the ClickThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsForensiq) GetClickThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.ClickThreshold) {
		return nil, false
	}
	return o.ClickThreshold, true
}

// HasClickThreshold returns a boolean if a field has been set.
func (o *IntegrationsForensiq) HasClickThreshold() bool {
	if o != nil && !IsNil(o.ClickThreshold) {
		return true
	}

	return false
}

// SetClickThreshold gets a reference to the given int32 and assigns it to the ClickThreshold field.
func (o *IntegrationsForensiq) SetClickThreshold(v int32) {
	o.ClickThreshold = &v
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IntegrationsForensiq) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsForensiq) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IntegrationsForensiq) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IntegrationsForensiq) SetAction(v string) {
	o.Action = &v
}

// GetConversionThreshold returns the ConversionThreshold field value if set, zero value otherwise.
func (o *IntegrationsForensiq) GetConversionThreshold() int32 {
	if o == nil || IsNil(o.ConversionThreshold) {
		var ret int32
		return ret
	}
	return *o.ConversionThreshold
}

// GetConversionThresholdOk returns a tuple with the ConversionThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsForensiq) GetConversionThresholdOk() (*int32, bool) {
	if o == nil || IsNil(o.ConversionThreshold) {
		return nil, false
	}
	return o.ConversionThreshold, true
}

// HasConversionThreshold returns a boolean if a field has been set.
func (o *IntegrationsForensiq) HasConversionThreshold() bool {
	if o != nil && !IsNil(o.ConversionThreshold) {
		return true
	}

	return false
}

// SetConversionThreshold gets a reference to the given int32 and assigns it to the ConversionThreshold field.
func (o *IntegrationsForensiq) SetConversionThreshold(v int32) {
	o.ConversionThreshold = &v
}

// GetConversionStatus returns the ConversionStatus field value if set, zero value otherwise.
func (o *IntegrationsForensiq) GetConversionStatus() string {
	if o == nil || IsNil(o.ConversionStatus) {
		var ret string
		return ret
	}
	return *o.ConversionStatus
}

// GetConversionStatusOk returns a tuple with the ConversionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntegrationsForensiq) GetConversionStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ConversionStatus) {
		return nil, false
	}
	return o.ConversionStatus, true
}

// HasConversionStatus returns a boolean if a field has been set.
func (o *IntegrationsForensiq) HasConversionStatus() bool {
	if o != nil && !IsNil(o.ConversionStatus) {
		return true
	}

	return false
}

// SetConversionStatus gets a reference to the given string and assigns it to the ConversionStatus field.
func (o *IntegrationsForensiq) SetConversionStatus(v string) {
	o.ConversionStatus = &v
}

func (o IntegrationsForensiq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntegrationsForensiq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClickThreshold) {
		toSerialize["click_threshold"] = o.ClickThreshold
	}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ConversionThreshold) {
		toSerialize["conversion_threshold"] = o.ConversionThreshold
	}
	if !IsNil(o.ConversionStatus) {
		toSerialize["conversion_status"] = o.ConversionStatus
	}
	return toSerialize, nil
}

type NullableIntegrationsForensiq struct {
	value *IntegrationsForensiq
	isSet bool
}

func (v NullableIntegrationsForensiq) Get() *IntegrationsForensiq {
	return v.value
}

func (v *NullableIntegrationsForensiq) Set(val *IntegrationsForensiq) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationsForensiq) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationsForensiq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationsForensiq(val *IntegrationsForensiq) *NullableIntegrationsForensiq {
	return &NullableIntegrationsForensiq{value: val, isSet: true}
}

func (v NullableIntegrationsForensiq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationsForensiq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


