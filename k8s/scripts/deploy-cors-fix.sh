#!/bin/bash

echo "üîß CORS Fix Deployment Script"
echo "=============================="
echo ""

echo "‚ö†Ô∏è  WARNING: This enables CORS for ALL origins in production!"
echo "   This is a TEMPORARY fix for debugging purposes."
echo "   Remember to remove this after testing is complete."
echo ""

echo "üìã Changes being deployed:"
echo "1. Updated CORS middleware to respect ALLOW_CORS_ALL environment variable"
echo "2. Added ALLOW_CORS_ALL=true to production deployment"
echo "3. Set ENVIRONMENT=production explicitly"
echo ""

echo "üöÄ Deployment Steps:"
echo ""

echo "Step 1: Build and push new Docker image"
echo "----------------------------------------"
echo "# Build the image with CORS fix"
echo "docker build -t asia-east2-docker.pkg.dev/jinko-test/jinko-test-docker-repo/saas-app:cors-fix ."
echo ""
echo "# Push the image"
echo "docker push asia-east2-docker.pkg.dev/jinko-test/jinko-test-docker-repo/saas-app:cors-fix"
echo ""

echo "Step 2: Update Kubernetes deployment"
echo "------------------------------------"
echo "# Update the image tag in kustomization.yaml"
echo "sed -i 's/newTag: 0.0.4/newTag: cors-fix/' k8s/overlays/prod/kustomization.yaml"
echo ""
echo "# Apply the updated deployment"
echo "kubectl apply -k k8s/overlays/prod/"
echo ""

echo "Step 3: Wait for rollout and verify"
echo "-----------------------------------"
echo "# Watch the rollout"
echo "kubectl rollout status deployment/prod-affiliate-backend -n saas-bff"
echo ""
echo "# Check pod logs for CORS configuration"
echo "kubectl logs -f deployment/prod-affiliate-backend -n saas-bff -c app | grep -i cors"
echo ""

echo "Step 4: Test CORS functionality"
echo "-------------------------------"
echo "# Test preflight request"
echo "curl -X OPTIONS https://api.affiliate.rolinko.com/api/v1/users/me \\"
echo "  -H 'Origin: https://c03bbceb-ff02-4a8a-8c9c-911409c95bb8.lovableproject.com' \\"
echo "  -H 'Access-Control-Request-Method: GET' \\"
echo "  -H 'Access-Control-Request-Headers: Authorization' \\"
echo "  -v"
echo ""

echo "# Test actual request (replace TOKEN with real JWT)"
echo "curl https://api.affiliate.rolinko.com/api/v1/users/me \\"
echo "  -H 'Origin: https://c03bbceb-ff02-4a8a-8c9c-911409c95bb8.lovableproject.com' \\"
echo "  -H 'Authorization: Bearer YOUR_JWT_TOKEN' \\"
echo "  -v"
echo ""

echo "üîÑ To Revert Changes Later:"
echo "---------------------------"
echo "1. Remove ALLOW_CORS_ALL from deployment-patch.yaml"
echo "2. Build and push image without CORS fix"
echo "3. Update image tag and redeploy"
echo ""

echo "üìù Files Modified:"
echo "- internal/api/middleware/cors.go (added ALLOW_CORS_ALL support)"
echo "- k8s/overlays/prod/patches/deployment-patch.yaml (added env vars)"
echo ""

echo "Ready to deploy? Run the commands above step by step."