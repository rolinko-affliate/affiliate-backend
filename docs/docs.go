// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/advertiser-association-invitations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List advertiser association invitations with optional filters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "List invitations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser Organization ID",
                        "name": "advertiser_org_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "active",
                            "disabled",
                            "expired"
                        ],
                        "type": "string",
                        "description": "Invitation Status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Created By User ID",
                        "name": "created_by_user_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include Expired Invitations",
                        "name": "include_expired",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AdvertiserAssociationInvitationWithDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new advertiser association invitation link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Create invitation",
                "parameters": [
                    {
                        "description": "Create invitation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AdvertiserAssociationInvitation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertiser-association-invitations/use": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Use an invitation link to create an organization association request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Use invitation",
                "parameters": [
                    {
                        "description": "Use invitation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UseInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.UseInvitationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertiser-association-invitations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an advertiser association invitation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Get invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AdvertiserAssociationInvitationWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an advertiser association invitation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Update invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update invitation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AdvertiserAssociationInvitation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an advertiser association invitation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Delete invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertiser-association-invitations/{id}/link": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate a full invitation link for sharing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Generate invitation link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Base URL (defaults to request host)",
                        "name": "base_url",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertiser-association-invitations/{id}/usage-history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get usage history for an advertiser association invitation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Get invitation usage history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default 50)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.InvitationUsageLog"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertiser-provider-mappings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new advertiser provider mapping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Create advertiser provider mapping",
                "parameters": [
                    {
                        "description": "Provider mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created provider mapping",
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserProviderMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertiser-provider-mappings/{mappingId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an advertiser provider mapping by mapping ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Update advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAdvertiserProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update successful",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an advertiser provider mapping by mapping ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-provider-mappings"
                ],
                "summary": "Delete advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid mapping ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new advertiser with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Create a new advertiser",
                "parameters": [
                    {
                        "description": "Advertiser details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created advertiser",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/sync-all-to-everflow": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates Everflow advertisers for all local advertisers that don't have provider mappings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Sync all advertisers to Everflow",
                "responses": {
                    "200": {
                        "description": "Sync results",
                        "schema": {
                            "$ref": "#/definitions/domain.BulkSyncResult"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an advertiser by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Get advertiser by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser details",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an advertiser with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Update advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Advertiser details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated advertiser",
                        "schema": {
                            "$ref": "#/definitions/models.AdvertiserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an advertiser by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Delete advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve campaigns for a specific advertiser with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/compare-with-everflow": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Compares an advertiser with its Everflow counterpart and returns discrepancies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Compare advertiser with Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comparison results with discrepancies",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an advertiser provider mapping by advertiser ID and provider type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Get advertiser provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider mapping details",
                        "schema": {
                            "$ref": "#/definitions/models.GetAdvertiserProviderMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Provider mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/sync-from-everflow": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Syncs an advertiser from the Everflow platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Sync advertiser from Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync completed successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/advertisers/{id}/sync-to-everflow": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Syncs an advertiser to the Everflow platform",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "Sync advertiser to Everflow",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sync initiated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid advertiser ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate provider mapping",
                "parameters": [
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliate-provider-mappings/{mappingId}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mapping details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateProviderMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated mapping",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mapping ID",
                        "name": "mappingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid mapping ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Create a new affiliate",
                "parameters": [
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/search": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search for affiliates/publishers with domain auto-completion and filtered by country, partner domains, and/or verticals with full publisher data, sorted by number of partners. Accessible by advertisers, affiliate managers, and admins.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Search affiliates by domain, country, partner domains, and verticals",
                "parameters": [
                    {
                        "description": "Search parameters",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.AffiliatesSearchRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results with data array and total count",
                        "schema": {
                            "$ref": "#/definitions/handlers.AffiliatesSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/affiliates/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Affiliate details",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an affiliate with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Update affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Affiliate details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateAffiliateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated affiliate",
                        "schema": {
                            "$ref": "#/definitions/domain.Affiliate"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an affiliate by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Delete affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid affiliate ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Affiliate not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a mapping between an affiliate and a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "Get affiliate provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider Type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapping details",
                        "schema": {
                            "$ref": "#/definitions/domain.AffiliateProviderMapping"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Mapping not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/affiliates/{id}/tracking-links": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of tracking links for a specific affiliate",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List agency delegations with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "List delegations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Agency organization ID",
                        "name": "agency_org_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Advertiser organization ID",
                        "name": "advertiser_org_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "active",
                            "suspended",
                            "revoked"
                        ],
                        "type": "string",
                        "description": "Delegation status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include expired delegations",
                        "name": "include_expired",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include organization and user details",
                        "name": "with_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AgencyDelegation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new delegation from advertiser organization to agency organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Create agency delegation",
                "parameters": [
                    {
                        "description": "Create delegation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateDelegationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/advertiser/{advertiser_org_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all active delegations for an advertiser organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Get advertiser delegations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser organization ID",
                        "name": "advertiser_org_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AgencyDelegation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/agency/{agency_org_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all active delegations for an agency organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Get agency delegations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Agency organization ID",
                        "name": "agency_org_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.AgencyDelegation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/check-permissions": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Check if an agency has specific permissions for an advertiser organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Check permissions",
                "parameters": [
                    {
                        "description": "Permission check request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PermissionCheckRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.PermissionCheckResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/permissions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all available delegation permissions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Get available permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an agency delegation by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Get delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include organization and user details",
                        "name": "with_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/accept": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Accept a pending agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Accept delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/expiration": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the expiration date of an agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Update delegation expiration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update expiration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateExpirationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/permissions": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the permissions of an agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Update delegation permissions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update permissions request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdatePermissionsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/reactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reactivate a suspended agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Reactivate delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/reject": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reject a pending agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Reject delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/revoke": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Revoke an agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Revoke delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/agency-delegations/{id}/suspend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Suspend an active agency delegation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agency-delegations"
                ],
                "summary": "Suspend delegation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delegation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AgencyDelegation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/advertisers": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new advertiser analytics entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create advertiser analytics data",
                "parameters": [
                    {
                        "description": "Advertiser data",
                        "name": "advertiser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateAdvertiserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advertiser created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsAdvertiser"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/advertisers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed analytics data for a specific advertiser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get advertiser analytics data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advertiser analytics data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsAdvertiserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Advertiser not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/affiliates": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new publisher analytics entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Create publisher analytics data",
                "parameters": [
                    {
                        "description": "Publisher data",
                        "name": "publisher",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreatePublisherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Publisher created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsPublisher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid data",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/affiliates/domain/{domain}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed analytics data for a specific publisher (affiliate) by domain name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get publisher analytics data by domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher domain name",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publisher analytics data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsPublisherResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid domain",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Publisher not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/affiliates/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve detailed analytics data for a specific publisher (affiliate)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Get publisher analytics data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Publisher ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Publisher analytics data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/domain.AnalyticsPublisherResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Publisher not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/analytics/autocomplete": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Search advertisers and/or publishers by domain name for autocompletion (minimum 3 characters)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Analytics"
                ],
                "summary": "Search organizations for autocompletion",
                "parameters": [
                    {
                        "minLength": 3,
                        "type": "string",
                        "description": "Search query (minimum 3 characters)",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "advertiser",
                            "publisher",
                            "both"
                        ],
                        "type": "string",
                        "default": "both",
                        "description": "Organization type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Maximum number of results",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocompletion results",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/handlers.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/domain.AutocompleteResult"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/config": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update billing configuration for the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Update billing configuration",
                "parameters": [
                    {
                        "description": "Billing configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateBillingConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BillingAccount"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/dashboard": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get billing dashboard data for the authenticated user's organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Get billing dashboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.BillingDashboardResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/payment-methods": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a new payment method for the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Add payment method",
                "parameters": [
                    {
                        "description": "Payment method details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreatePaymentMethodRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.StripePaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/payment-methods/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Remove a payment method from the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Remove payment method",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Payment Method ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/recharge": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add funds to the organization's account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Recharge account",
                "parameters": [
                    {
                        "description": "Recharge details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RechargeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/billing/transactions": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get transaction history for the organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "billing"
                ],
                "summary": "Get transaction history",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Transaction"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new campaign with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Create a new campaign",
                "parameters": [
                    {
                        "description": "Campaign creation request",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a campaign by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get a campaign by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing campaign with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Update a campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign update request",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateCampaignRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a campaign by its ID",
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete a campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}/provider-mappings/{providerType}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a campaign provider mapping by campaign ID and provider type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "Get campaign provider mapping",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider type",
                        "name": "providerType",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetCampaignProviderMappingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}/tracking-links": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of tracking links for a specific campaign",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by campaign",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all favorite publisher lists for the user's organization with statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Get all favorite publisher lists",
                "responses": {
                    "200": {
                        "description": "message: string, data: []domain.FavoritePublisherListWithStats",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new favorite publisher list for the user's organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Create a new favorite publisher list",
                "parameters": [
                    {
                        "description": "Create list request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateFavoritePublisherListRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: string, data: domain.FavoritePublisherList",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all favorite publisher lists that contain a specific publisher domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Get lists containing publisher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher domain",
                        "name": "domain",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string, data: []domain.FavoritePublisherList",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists/{list_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific favorite publisher list by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Get favorite publisher list by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string, data: domain.FavoritePublisherList",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates a favorite publisher list's name and/or description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Update favorite publisher list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update list request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateFavoritePublisherListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string, data: domain.FavoritePublisherList",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a favorite publisher list and all its items",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Delete favorite publisher list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists/{list_id}/publishers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves all publisher items in a favorite publisher list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Get favorite list items",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include publisher details from analytics",
                        "name": "include_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string, data: []domain.FavoritePublisherListItem",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a publisher domain to a favorite publisher list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Add publisher to favorite list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add publisher request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AddPublisherToListRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "message: string, data: domain.FavoritePublisherListItem",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists/{list_id}/publishers/{domain}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the notes for a publisher in a favorite publisher list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Update publisher notes in favorite list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Publisher domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update publisher request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatePublisherInListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Removes a publisher domain from a favorite publisher list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Remove publisher from favorite list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Publisher domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: string",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorite-publisher-lists/{list_id}/publishers/{domain}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the status of a publisher in a favorite list (added -\u003e contacted -\u003e accepted)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorite-publisher-lists"
                ],
                "summary": "Update publisher status in favorite list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "List ID",
                        "name": "list_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Publisher domain",
                        "name": "domain",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdatePublisherStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status updated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "List or publisher not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Returns the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Status UP",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organization-associations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List organization associations with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "List associations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser organization ID",
                        "name": "advertiser_org_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Affiliate organization ID",
                        "name": "affiliate_org_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "pending",
                            "active",
                            "suspended",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "Association status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "invitation",
                            "request"
                        ],
                        "type": "string",
                        "description": "Association type",
                        "name": "association_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 50,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include organization and user details",
                        "name": "with_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.OrganizationAssociationWithDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/invitations": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new invitation from advertiser organization to affiliate organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Create invitation",
                "parameters": [
                    {
                        "description": "Create invitation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/requests": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new request from affiliate organization to advertiser organization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Create request",
                "parameters": [
                    {
                        "description": "Create request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get an organization association by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Get association",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include organization and user details",
                        "name": "with_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}/approve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Approve a pending organization association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Approve association",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}/reactivate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reactivate a suspended organization association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Reactivate association",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}/reject": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Reject a pending organization association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Reject association",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}/suspend": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Suspend an active organization association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Suspend association",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organization-associations/{id}/visibility": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the visibility settings of an organization association",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Update visibility",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Association ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update visibility request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationAssociation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of organizations with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "List organizations",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organizations",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new organization with the given name and optional extra info. Requires JWT authentication.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "parameters": [
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.CreateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - JWT token required",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{advertiser_org_id}/visible-affiliates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all affiliates from affiliate organizations that are visible to the specified advertiser organization based on active associations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Get visible affiliates for advertiser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advertiser Organization ID",
                        "name": "advertiser_org_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Filter by specific affiliate organization ID",
                        "name": "affiliate_org_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Affiliate"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{affiliate_org_id}/visible-campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all campaigns from advertiser organizations that are visible to the specified affiliate organization based on active associations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Get visible campaigns for affiliate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Affiliate Organization ID",
                        "name": "affiliate_org_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Filter by specific advertiser organization ID",
                        "name": "advertiser_org_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Campaign"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves an organization by its ID, optionally with extra info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get organization by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include extra info (advertiser_extra_info or affiliate_extra_info)",
                        "name": "with_extra",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization details (with extra info)",
                        "schema": {
                            "$ref": "#/definitions/domain.OrganizationWithExtraInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an organization with the given details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Update organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Organization details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateOrganizationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated organization",
                        "schema": {
                            "$ref": "#/definitions/domain.Organization"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an organization by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/advertisers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of advertisers for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertisers"
                ],
                "summary": "List advertisers by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of advertisers",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Advertiser"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User doesn't have permission",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/affiliates": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a list of affiliates for an organization with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "affiliates"
                ],
                "summary": "List affiliates by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 10)",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of affiliates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Affiliate"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid organization ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{id}/associations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all associations for a specific organization (advertiser or affiliate)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization-associations"
                ],
                "summary": "Get associations for organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "pending",
                            "active",
                            "suspended",
                            "rejected"
                        ],
                        "type": "string",
                        "description": "Association status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Include organization and user details",
                        "name": "with_details",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.OrganizationAssociation"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/campaigns": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve campaigns for a specific organization with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "campaigns"
                ],
                "summary": "List campaigns by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20, max: 100)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CampaignListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of tracking links for a specific organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "List tracking links by organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new tracking link for a campaign and affiliate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Create a new tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/generate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate a new tracking link with provider integration for a campaign and affiliate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Generate a new tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a tracking link by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Get a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update an existing tracking link",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Update a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking link update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a tracking link by its ID",
                "tags": [
                    "tracking-links"
                ],
                "summary": "Delete a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}/qr": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Generate and return a QR code image for a tracking link",
                "produces": [
                    "image/png"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Get tracking link QR code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR code image\" encoded with base64",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/organizations/{organization_id}/tracking-links/{tracking_link_id}/regenerate": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Regenerate an existing tracking link with provider integration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tracking-links"
                ],
                "summary": "Regenerate a tracking link",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Tracking Link ID",
                        "name": "tracking_link_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TrackingLinkGenerationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/profiles": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new user profile (TODO: Temporarily without access control)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Create a new profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/upsert": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new profile if it doesn't exist, or updates an existing one",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Upsert a profile",
                "parameters": [
                    {
                        "description": "Profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpsertProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Upserted profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing user profile with only the provided fields",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated profile information",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated profile",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Delete a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Profile deleted successfully"
                    },
                    "400": {
                        "description": "Invalid profile ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/public/invitations/{token}": {
            "get": {
                "description": "Get an advertiser association invitation by token (public endpoint for invitation links)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "advertiser-association-invitations"
                ],
                "summary": "Get invitation by token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation Token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.AdvertiserAssociationInvitationWithDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/public/webhooks/supabase/new-user": {
            "post": {
                "description": "Process webhook from Supabase when a new user is created",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Handle Supabase new user webhook",
                "parameters": [
                    {
                        "description": "Webhook payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.SupabaseUserWebhookPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid webhook payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/publisher-messaging/conversations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a paginated list of conversations for the organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Get conversations for organization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by conversation status (active, closed)",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size (default: 20)",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversations retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.ConversationListResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Initiates a new conversation with a publisher from a favorite list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Create a new conversation with a publisher",
                "parameters": [
                    {
                        "description": "Conversation creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.CreateConversationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Conversation created successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.PublisherConversation"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or validation error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Publisher or favorite list not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Active conversation with publisher already exists",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/publisher-messaging/conversations/{conversation_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves a specific conversation along with its messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Get conversation with messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.ConversationWithMessagesResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a conversation and all associated messages",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Delete conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Conversation deleted successfully"
                    },
                    "400": {
                        "description": "Invalid conversation ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/publisher-messaging/conversations/{conversation_id}/external-messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Allows external services to add messages to existing conversations (e.g., publisher replies)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Add external message to conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "External message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AddExternalMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Message added successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.PublisherMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or conversation ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/publisher-messaging/conversations/{conversation_id}/messages": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Adds a new message to an existing conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Add message to conversation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Message request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.SendMessageRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Message added successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.PublisherMessage"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or conversation ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/publisher-messaging/conversations/{conversation_id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the status of a conversation (e.g., close conversation)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher Messaging"
                ],
                "summary": "Update conversation status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Conversation ID",
                        "name": "conversation_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateConversationStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation status updated successfully",
                        "schema": {
                            "$ref": "#/definitions/domain.PublisherConversation"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or conversation ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Organization ID not found in context",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Conversation not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves the profile of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get current user profile",
                "responses": {
                    "200": {
                        "description": "User profile",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid user ID format",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Profile not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AddExternalMessageRequest": {
            "type": "object",
            "required": [
                "content",
                "conversation_id",
                "sender_type"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 1
                },
                "conversation_id": {
                    "type": "integer"
                },
                "external_message_id": {
                    "type": "string"
                },
                "message_type": {
                    "type": "string",
                    "enum": [
                        "text",
                        "system",
                        "notification"
                    ]
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "sender_id": {
                    "type": "string"
                },
                "sender_type": {
                    "type": "string",
                    "enum": [
                        "organization",
                        "publisher",
                        "system"
                    ]
                },
                "sent_at": {
                    "type": "string"
                }
            }
        },
        "domain.AddPublisherToListRequest": {
            "type": "object",
            "required": [
                "publisher_domain"
            ],
            "properties": {
                "notes": {
                    "type": "string",
                    "maxLength": 1000
                },
                "publisher_domain": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "added",
                        "contacted",
                        "accepted"
                    ]
                }
            }
        },
        "domain.Advertiser": {
            "type": "object",
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "advertiser_id": {
                    "type": "integer"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "description": "JSONB",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingDetails"
                        }
                    ]
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "description": "General purpose fields (provider-agnostic)",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "'active', 'pending', 'inactive', 'rejected'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AdvertiserAssociationInvitation": {
            "type": "object",
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "allowed_affiliate_org_ids": {
                    "description": "Access control",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "current_uses": {
                    "type": "integer"
                },
                "default_all_affiliates_visible": {
                    "description": "Default visibility settings for associations created through this invitation",
                    "type": "boolean"
                },
                "default_all_campaigns_visible": {
                    "type": "boolean"
                },
                "default_visible_affiliate_ids": {
                    "description": "JSONB array",
                    "type": "string"
                },
                "default_visible_campaign_ids": {
                    "description": "JSONB array",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "description": "Expiration",
                    "type": "string"
                },
                "invitation_id": {
                    "type": "integer"
                },
                "invitation_token": {
                    "type": "string"
                },
                "max_uses": {
                    "description": "Usage limits",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "Status and metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.InvitationStatus"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AdvertiserAssociationInvitationWithDetails": {
            "type": "object",
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "advertiser_organization": {
                    "$ref": "#/definitions/domain.Organization"
                },
                "allowed_affiliate_org_ids": {
                    "description": "Access control",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by_user": {
                    "$ref": "#/definitions/domain.Profile"
                },
                "created_by_user_id": {
                    "type": "string"
                },
                "current_uses": {
                    "type": "integer"
                },
                "default_all_affiliates_visible": {
                    "description": "Default visibility settings for associations created through this invitation",
                    "type": "boolean"
                },
                "default_all_campaigns_visible": {
                    "type": "boolean"
                },
                "default_visible_affiliate_ids": {
                    "description": "JSONB array",
                    "type": "string"
                },
                "default_visible_campaign_ids": {
                    "description": "JSONB array",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "description": "Expiration",
                    "type": "string"
                },
                "invitation_id": {
                    "type": "integer"
                },
                "invitation_token": {
                    "type": "string"
                },
                "max_uses": {
                    "description": "Usage limits",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recent_usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.InvitationUsageLog"
                    }
                },
                "status": {
                    "description": "Status and metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.InvitationStatus"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                },
                "usage_count": {
                    "type": "integer"
                }
            }
        },
        "domain.AdvertiserExtraInfo": {
            "type": "object",
            "properties": {
                "company_size": {
                    "description": "'startup', 'small', 'medium', 'large', 'enterprise'",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "extra_info_id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                },
                "website_type": {
                    "description": "'shopify', 'amazon', 'shopline', 'tiktok_shop'",
                    "type": "string"
                }
            }
        },
        "domain.AdvertiserProviderMapping": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "last_sync_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_advertiser_id": {
                    "description": "e.g., Everflow's network_advertiser_id",
                    "type": "string"
                },
                "provider_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_data": {
                    "description": "Provider-specific data (stored as JSONB) - contains all Everflow-specific fields",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "sync_error": {
                    "type": "string"
                },
                "sync_status": {
                    "description": "Synchronization metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Affiliate": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "billing_info": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_address": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "internal_notes": {
                    "description": "General purpose fields moved from EverflowProviderData",
                    "type": "string"
                },
                "invoice_amount_threshold": {
                    "type": "number"
                },
                "labels": {
                    "description": "JSONB stored as string (array of strings)",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payment_details": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "status": {
                    "description": "'active', 'pending', 'rejected', 'inactive'",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AffiliateExtraInfo": {
            "type": "object",
            "properties": {
                "affiliate_type": {
                    "description": "'cashback', 'blog', 'incentive', 'content', 'forum', 'sub_affiliate_network'",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "extra_info_id": {
                    "type": "integer"
                },
                "logo_url": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "self_description": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "domain.AffiliateNetworkData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.AffiliateProviderMapping": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer"
                },
                "api_credentials": {
                    "description": "JSONB stored as string for API keys/tokens",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "last_sync_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_affiliate_id": {
                    "description": "e.g., Everflow's network_affiliate_id",
                    "type": "string"
                },
                "provider_config": {
                    "description": "JSONB stored as string",
                    "type": "string"
                },
                "provider_data": {
                    "description": "Provider-specific data (stored as JSONB) - contains all Everflow-specific fields",
                    "type": "string"
                },
                "provider_type": {
                    "description": "'everflow' for MVP",
                    "type": "string"
                },
                "sync_error": {
                    "type": "string"
                },
                "sync_status": {
                    "description": "Synchronization metadata",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AgencyDelegation": {
            "type": "object",
            "properties": {
                "accepted_at": {
                    "type": "string"
                },
                "accepted_by_user_id": {
                    "description": "UUID of agency user who accepted delegation",
                    "type": "string"
                },
                "advertiser_org_id": {
                    "type": "integer"
                },
                "agency_org_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "delegated_by_user_id": {
                    "description": "Delegation metadata",
                    "type": "string"
                },
                "delegation_id": {
                    "type": "integer"
                },
                "expires_at": {
                    "description": "Expiration settings",
                    "type": "string"
                },
                "message": {
                    "description": "Optional message with delegation",
                    "type": "string"
                },
                "permissions": {
                    "description": "Permissions granted to the agency (JSONB array of permission strings)",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.DelegationStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsAdvertiser": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favicon_image_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "screenshot_image_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsAdvertiserResponse": {
            "type": "object",
            "properties": {
                "advertiser": {
                    "type": "object",
                    "properties": {
                        "affiliateNetworks": {
                            "$ref": "#/definitions/domain.AffiliateNetworkData"
                        },
                        "backlinks": {},
                        "contactEmails": {
                            "$ref": "#/definitions/domain.ContactEmailData"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "keywords": {
                            "$ref": "#/definitions/domain.KeywordData"
                        },
                        "metaData": {
                            "$ref": "#/definitions/domain.MetaData"
                        },
                        "partnerInformation": {},
                        "relatedAdvertisers": {},
                        "socialMedia": {
                            "$ref": "#/definitions/domain.SocialMediaData"
                        },
                        "verticals": {
                            "$ref": "#/definitions/domain.VerticalData"
                        }
                    }
                }
            }
        },
        "domain.AnalyticsPublisher": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "favicon_image_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "known": {
                    "type": "boolean"
                },
                "promotype": {
                    "type": "string"
                },
                "relevance": {
                    "type": "number"
                },
                "screenshot_image_url": {
                    "type": "string"
                },
                "traffic_score": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.AnalyticsPublisherResponse": {
            "type": "object",
            "properties": {
                "publisher": {
                    "type": "object",
                    "properties": {
                        "affiliateNetworks": {
                            "$ref": "#/definitions/domain.AffiliateNetworkData"
                        },
                        "countryRankings": {
                            "$ref": "#/definitions/domain.CountryRankingData"
                        },
                        "domain": {
                            "type": "string"
                        },
                        "keywords": {
                            "$ref": "#/definitions/domain.KeywordData"
                        },
                        "known": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "liveUrls": {},
                        "metaData": {
                            "$ref": "#/definitions/domain.MetaData"
                        },
                        "partnerInformation": {},
                        "partners": {},
                        "promotype": {
                            "type": "object",
                            "properties": {
                                "value": {
                                    "type": "string"
                                }
                            }
                        },
                        "relatedPublishers": {},
                        "relevance": {
                            "type": "number"
                        },
                        "socialMedia": {
                            "$ref": "#/definitions/domain.SocialMediaData"
                        },
                        "trafficScore": {
                            "type": "number"
                        },
                        "verticals": {},
                        "verticalsV2": {
                            "$ref": "#/definitions/domain.VerticalData"
                        }
                    }
                }
            }
        },
        "domain.AssociationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "active",
                "suspended",
                "rejected"
            ],
            "x-enum-varnames": [
                "AssociationStatusPending",
                "AssociationStatusActive",
                "AssociationStatusSuspended",
                "AssociationStatusRejected"
            ]
        },
        "domain.AssociationType": {
            "type": "string",
            "enum": [
                "invitation",
                "request"
            ],
            "x-enum-comments": {
                "AssociationTypeInvitation": "Advertiser invites affiliate",
                "AssociationTypeRequest": "Affiliate requests to join advertiser"
            },
            "x-enum-varnames": [
                "AssociationTypeInvitation",
                "AssociationTypeRequest"
            ]
        },
        "domain.AutocompleteResult": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Display name (domain for now)",
                    "type": "string"
                },
                "type": {
                    "description": "\"advertiser\" or \"publisher\"",
                    "type": "string"
                }
            }
        },
        "domain.BillingAccount": {
            "type": "object",
            "properties": {
                "auto_recharge_amount": {
                    "type": "number"
                },
                "auto_recharge_enabled": {
                    "type": "boolean"
                },
                "auto_recharge_threshold": {
                    "type": "number"
                },
                "balance": {
                    "description": "Balance and Credit",
                    "type": "number"
                },
                "billing_account_id": {
                    "type": "integer"
                },
                "billing_address": {
                    "type": "object",
                    "additionalProperties": true
                },
                "billing_email": {
                    "type": "string"
                },
                "billing_mode": {
                    "description": "Billing Configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingMode"
                        }
                    ]
                },
                "created_at": {
                    "type": "string"
                },
                "credit_limit": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "default_payment_method_id": {
                    "description": "Payment Configuration",
                    "type": "string"
                },
                "invoice_day_of_month": {
                    "description": "Invoice Configuration",
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payment_terms_days": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status and Metadata",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingAccountStatus"
                        }
                    ]
                },
                "stripe_account_id": {
                    "type": "string"
                },
                "stripe_customer_id": {
                    "description": "Stripe Integration",
                    "type": "string"
                },
                "tax_info": {
                    "type": "object",
                    "additionalProperties": true
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.BillingAccountStatus": {
            "type": "string",
            "enum": [
                "active",
                "suspended",
                "closed"
            ],
            "x-enum-varnames": [
                "BillingAccountStatusActive",
                "BillingAccountStatusSuspended",
                "BillingAccountStatusClosed"
            ]
        },
        "domain.BillingAddress": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "line1": {
                    "type": "string"
                },
                "line2": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "domain.BillingDashboardResponse": {
            "type": "object",
            "properties": {
                "billing_account": {
                    "$ref": "#/definitions/domain.BillingAccount"
                },
                "current_balance": {
                    "type": "number"
                },
                "monthly_spend": {
                    "type": "number"
                },
                "payment_methods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.StripePaymentMethod"
                    }
                },
                "pending_invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Invoice"
                    }
                },
                "recent_transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Transaction"
                    }
                }
            }
        },
        "domain.BillingDetails": {
            "type": "object",
            "properties": {
                "additional_details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "address": {
                    "$ref": "#/definitions/domain.BillingAddress"
                },
                "auto_invoice_start_date": {
                    "description": "Format: \"2019-06-01 00:00:00\"",
                    "type": "string"
                },
                "default_invoice_is_hidden": {
                    "type": "boolean"
                },
                "default_payment_terms": {
                    "type": "integer"
                },
                "frequency": {
                    "$ref": "#/definitions/domain.BillingFrequency"
                },
                "invoice_amount_threshold": {
                    "type": "number"
                },
                "invoice_generation_days_delay": {
                    "type": "integer"
                },
                "is_invoice_creation_auto": {
                    "type": "boolean"
                },
                "payment_details": {
                    "$ref": "#/definitions/domain.PaymentDetails"
                },
                "payment_type": {
                    "$ref": "#/definitions/domain.PaymentType"
                },
                "schedule": {
                    "$ref": "#/definitions/domain.BillingSchedule"
                },
                "tax_id": {
                    "type": "string"
                }
            }
        },
        "domain.BillingFrequency": {
            "type": "string",
            "enum": [
                "weekly",
                "bimonthly",
                "monthly",
                "two_months",
                "quarterly",
                "manual",
                "other"
            ],
            "x-enum-varnames": [
                "BillingFrequencyWeekly",
                "BillingFrequencyBimonthly",
                "BillingFrequencyMonthly",
                "BillingFrequencyTwoMonths",
                "BillingFrequencyQuarterly",
                "BillingFrequencyManual",
                "BillingFrequencyOther"
            ]
        },
        "domain.BillingMode": {
            "type": "string",
            "enum": [
                "prepaid",
                "postpaid"
            ],
            "x-enum-comments": {
                "BillingModePostpaid": "Monthly invoicing",
                "BillingModePrepaid": "Pay-as-you-go with balance"
            },
            "x-enum-varnames": [
                "BillingModePrepaid",
                "BillingModePostpaid"
            ]
        },
        "domain.BillingSchedule": {
            "type": "object",
            "properties": {
                "day_of_month": {
                    "description": "For monthly billing",
                    "type": "integer"
                },
                "day_of_month_one": {
                    "description": "For bimonthly",
                    "type": "integer"
                },
                "day_of_month_two": {
                    "description": "For bimonthly",
                    "type": "integer"
                },
                "day_of_week": {
                    "description": "For weekly billing",
                    "type": "integer"
                },
                "starting_month": {
                    "description": "For quarterly/yearly billing",
                    "type": "integer"
                }
            }
        },
        "domain.BulkSyncItemResult": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "advertiser_name": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "provider_advertiser_id": {
                    "type": "string"
                }
            }
        },
        "domain.BulkSyncResult": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string"
                },
                "failure_count": {
                    "type": "integer"
                },
                "failures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.BulkSyncItemResult"
                    }
                },
                "started_at": {
                    "type": "string"
                },
                "success_count": {
                    "type": "integer"
                },
                "successes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.BulkSyncItemResult"
                    }
                },
                "total_processed": {
                    "type": "integer"
                }
            }
        },
        "domain.Campaign": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "conversion_method": {
                    "description": "'server_postback', 'pixel', etc.",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_id": {
                    "description": "'USD', 'EUR', etc.",
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields (provider-agnostic)",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "fixed_click_amount": {
                    "description": "Fixed amount paid to affiliates per click",
                    "type": "number"
                },
                "fixed_conversion_amount": {
                    "description": "Fixed amount paid to affiliates per conversion",
                    "type": "number"
                },
                "fixed_revenue": {
                    "description": "Simplified billing configuration",
                    "type": "number"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "percentage_conversion_amount": {
                    "description": "Percentage of revenue paid to affiliates per conversion (0-100)",
                    "type": "number"
                },
                "preview_url": {
                    "type": "string"
                },
                "session_definition": {
                    "description": "'cookie', 'ip', 'fingerprint'",
                    "type": "string"
                },
                "session_duration": {
                    "description": "in hours",
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "description": "'draft', 'active', 'paused', 'archived'",
                    "type": "string"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "description": "'public', 'require_approval', 'private'",
                    "type": "string"
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "domain.ContactEmailData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "error": {
                    "type": "boolean"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "department": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domain.ConversationListResponse": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.PublisherConversation"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.ConversationWithMessagesResponse": {
            "type": "object",
            "properties": {
                "conversation": {
                    "$ref": "#/definitions/domain.PublisherConversation"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.PublisherMessage"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "domain.CountryRankingData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "highestValue": {
                    "type": "object",
                    "properties": {
                        "countryCode": {
                            "type": "string"
                        },
                        "score": {
                            "type": "number"
                        }
                    }
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "countryCode": {
                                "type": "string"
                            },
                            "score": {
                                "type": "number"
                            }
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "countryCode": {
                                "type": "string"
                            },
                            "score": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "domain.CreateAssociationRequest": {
            "type": "object",
            "required": [
                "advertiser_org_id",
                "affiliate_org_id",
                "association_type"
            ],
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "affiliate_org_id": {
                    "type": "integer"
                },
                "all_affiliates_visible": {
                    "type": "boolean"
                },
                "all_campaigns_visible": {
                    "type": "boolean"
                },
                "association_type": {
                    "$ref": "#/definitions/domain.AssociationType"
                },
                "message": {
                    "type": "string"
                },
                "visible_affiliate_ids": {
                    "description": "For invitations from advertiser",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "visible_campaign_ids": {
                    "description": "For requests from affiliate",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "domain.CreateConversationRequest": {
            "type": "object",
            "required": [
                "initial_message",
                "publisher_domain",
                "subject"
            ],
            "properties": {
                "initial_message": {
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 1
                },
                "list_id": {
                    "type": "integer"
                },
                "publisher_domain": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "subject": {
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 1
                }
            }
        },
        "domain.CreateDelegationRequest": {
            "type": "object",
            "required": [
                "advertiser_org_id",
                "agency_org_id",
                "permissions"
            ],
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "agency_org_id": {
                    "type": "integer"
                },
                "expires_at": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.DelegationPermission"
                    }
                }
            }
        },
        "domain.CreateFavoritePublisherListRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "domain.CreateInvitationRequest": {
            "type": "object",
            "required": [
                "advertiser_org_id",
                "name"
            ],
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "allowed_affiliate_org_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "default_all_affiliates_visible": {
                    "type": "boolean"
                },
                "default_all_campaigns_visible": {
                    "type": "boolean"
                },
                "default_visible_affiliate_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "default_visible_campaign_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "max_uses": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "domain.CreatePaymentMethodRequest": {
            "type": "object",
            "required": [
                "payment_method_id"
            ],
            "properties": {
                "nickname": {
                    "type": "string"
                },
                "payment_method_id": {
                    "description": "Stripe Payment Method ID",
                    "type": "string"
                },
                "set_as_default": {
                    "type": "boolean"
                }
            }
        },
        "domain.DelegationPermission": {
            "type": "string",
            "enum": [
                "campaign_create",
                "campaign_manage",
                "campaign_view",
                "campaign_delete",
                "association_invite",
                "association_manage",
                "association_view",
                "invitation_create",
                "invitation_manage",
                "invitation_view",
                "analytics_view",
                "analytics_export",
                "billing_view",
                "billing_manage",
                "organization_view",
                "organization_manage"
            ],
            "x-enum-varnames": [
                "PermissionCampaignCreate",
                "PermissionCampaignManage",
                "PermissionCampaignView",
                "PermissionCampaignDelete",
                "PermissionAssociationInvite",
                "PermissionAssociationManage",
                "PermissionAssociationView",
                "PermissionInvitationCreate",
                "PermissionInvitationManage",
                "PermissionInvitationView",
                "PermissionAnalyticsView",
                "PermissionAnalyticsExport",
                "PermissionBillingView",
                "PermissionBillingManage",
                "PermissionOrganizationView",
                "PermissionOrganizationManage"
            ]
        },
        "domain.DelegationStatus": {
            "type": "string",
            "enum": [
                "pending",
                "active",
                "suspended",
                "revoked"
            ],
            "x-enum-varnames": [
                "DelegationStatusPending",
                "DelegationStatusActive",
                "DelegationStatusSuspended",
                "DelegationStatusRevoked"
            ]
        },
        "domain.FavoritePublisherList": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "items": {
                    "description": "Optional: Include items when fetching with details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.FavoritePublisherListItem"
                    }
                },
                "list_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.FavoritePublisherListItem": {
            "type": "object",
            "properties": {
                "added_at": {
                    "type": "string"
                },
                "item_id": {
                    "type": "integer"
                },
                "list_id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "publisher": {
                    "description": "Optional: Include publisher details when fetching with details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AnalyticsPublisher"
                        }
                    ]
                },
                "publisher_domain": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "domain.InvitationStatus": {
            "type": "string",
            "enum": [
                "active",
                "disabled",
                "expired"
            ],
            "x-enum-varnames": [
                "InvitationStatusActive",
                "InvitationStatusDisabled",
                "InvitationStatusExpired"
            ]
        },
        "domain.InvitationUsageLog": {
            "type": "object",
            "properties": {
                "affiliate_org_id": {
                    "type": "integer"
                },
                "association_id": {
                    "type": "integer"
                },
                "error_message": {
                    "type": "string"
                },
                "invitation_id": {
                    "type": "integer"
                },
                "ip_address": {
                    "description": "Usage metadata",
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "usage_id": {
                    "type": "integer"
                },
                "used_at": {
                    "type": "string"
                },
                "used_by_user_id": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "domain.Invoice": {
            "type": "object",
            "properties": {
                "amount_due": {
                    "type": "number"
                },
                "amount_paid": {
                    "type": "number"
                },
                "billing_account_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "invoice_date": {
                    "description": "Dates",
                    "type": "string"
                },
                "invoice_id": {
                    "type": "integer"
                },
                "invoice_number": {
                    "description": "Invoice Details",
                    "type": "string"
                },
                "line_items": {
                    "description": "Invoice Content",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.InvoiceLineItem"
                    }
                },
                "metadata": {
                    "description": "Metadata",
                    "type": "object",
                    "additionalProperties": true
                },
                "notes": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "paid_at": {
                    "type": "string"
                },
                "period_end": {
                    "type": "string"
                },
                "period_start": {
                    "description": "Billing Period",
                    "type": "string"
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.InvoiceStatus"
                        }
                    ]
                },
                "stripe_invoice_id": {
                    "description": "Stripe Integration",
                    "type": "string"
                },
                "subtotal": {
                    "description": "Financial Details",
                    "type": "number"
                },
                "tax_amount": {
                    "type": "number"
                },
                "total_amount": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.InvoiceLineItem": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "quantity": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                }
            }
        },
        "domain.InvoiceStatus": {
            "type": "string",
            "enum": [
                "draft",
                "open",
                "paid",
                "void",
                "uncollectible",
                "overdue"
            ],
            "x-enum-varnames": [
                "InvoiceStatusDraft",
                "InvoiceStatusOpen",
                "InvoiceStatusPaid",
                "InvoiceStatusVoid",
                "InvoiceStatusUncollectible",
                "InvoiceStatusOverdue"
            ]
        },
        "domain.KeywordData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "score": {
                                "type": "number"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "score": {
                                "type": "number"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "domain.MetaData": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "faviconImageUrl": {
                    "type": "string"
                },
                "screenshotImageUrl": {
                    "type": "string"
                }
            }
        },
        "domain.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/domain.OrganizationType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.OrganizationAssociation": {
            "type": "object",
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "affiliate_org_id": {
                    "type": "integer"
                },
                "all_affiliates_visible": {
                    "description": "Default visibility flags (when true, all affiliates/campaigns are visible)",
                    "type": "boolean"
                },
                "all_campaigns_visible": {
                    "type": "boolean"
                },
                "approved_at": {
                    "type": "string"
                },
                "approved_by_user_id": {
                    "description": "UUID of user who approved",
                    "type": "string"
                },
                "association_id": {
                    "type": "integer"
                },
                "association_type": {
                    "$ref": "#/definitions/domain.AssociationType"
                },
                "created_at": {
                    "type": "string"
                },
                "message": {
                    "description": "Optional message with request/invitation",
                    "type": "string"
                },
                "requested_by_user_id": {
                    "description": "Request/invitation metadata",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.AssociationStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible_affiliate_ids": {
                    "description": "Visibility settings - JSON arrays of IDs",
                    "type": "string"
                },
                "visible_campaign_ids": {
                    "description": "JSONB array of campaign IDs visible to affiliate",
                    "type": "string"
                }
            }
        },
        "domain.OrganizationAssociationWithDetails": {
            "type": "object",
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "advertiser_organization": {
                    "$ref": "#/definitions/domain.Organization"
                },
                "affiliate_org_id": {
                    "type": "integer"
                },
                "affiliate_organization": {
                    "$ref": "#/definitions/domain.Organization"
                },
                "all_affiliates_visible": {
                    "description": "Default visibility flags (when true, all affiliates/campaigns are visible)",
                    "type": "boolean"
                },
                "all_campaigns_visible": {
                    "type": "boolean"
                },
                "approved_at": {
                    "type": "string"
                },
                "approved_by_user": {
                    "$ref": "#/definitions/domain.Profile"
                },
                "approved_by_user_id": {
                    "description": "UUID of user who approved",
                    "type": "string"
                },
                "association_id": {
                    "type": "integer"
                },
                "association_type": {
                    "$ref": "#/definitions/domain.AssociationType"
                },
                "created_at": {
                    "type": "string"
                },
                "message": {
                    "description": "Optional message with request/invitation",
                    "type": "string"
                },
                "requested_by_user": {
                    "$ref": "#/definitions/domain.Profile"
                },
                "requested_by_user_id": {
                    "description": "Request/invitation metadata",
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.AssociationStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "visible_affiliate_ids": {
                    "description": "Visibility settings - JSON arrays of IDs",
                    "type": "string"
                },
                "visible_campaign_ids": {
                    "description": "JSONB array of campaign IDs visible to affiliate",
                    "type": "string"
                }
            }
        },
        "domain.OrganizationType": {
            "type": "string",
            "enum": [
                "advertiser",
                "affiliate",
                "platform_owner",
                "agency"
            ],
            "x-enum-varnames": [
                "OrganizationTypeAdvertiser",
                "OrganizationTypeAffiliate",
                "OrganizationTypePlatformOwner",
                "OrganizationTypeAgency"
            ]
        },
        "domain.OrganizationWithExtraInfo": {
            "type": "object",
            "properties": {
                "advertiser_extra_info": {
                    "$ref": "#/definitions/domain.AdvertiserExtraInfo"
                },
                "affiliate_extra_info": {
                    "$ref": "#/definitions/domain.AffiliateExtraInfo"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/domain.OrganizationType"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.PaymentDetails": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "ach_account_type": {
                    "description": "ACH details",
                    "type": "string"
                },
                "additional_details": {
                    "description": "Additional details for other payment types",
                    "type": "object",
                    "additionalProperties": true
                },
                "bank_address": {
                    "type": "string"
                },
                "bank_name": {
                    "description": "Wire transfer details",
                    "type": "string"
                },
                "crypto_address": {
                    "type": "string"
                },
                "crypto_wallet_type": {
                    "description": "Crypto details",
                    "type": "string"
                },
                "iban": {
                    "type": "string"
                },
                "mailing_address": {
                    "description": "Check details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.BillingAddress"
                        }
                    ]
                },
                "paypal_email": {
                    "description": "PayPal details",
                    "type": "string"
                },
                "routing_number": {
                    "type": "string"
                },
                "swift_code": {
                    "type": "string"
                },
                "type": {
                    "description": "Payment type for validation and processing",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.PaymentDetailsType"
                        }
                    ]
                }
            }
        },
        "domain.PaymentDetailsType": {
            "type": "string",
            "enum": [
                "wire",
                "ach",
                "check",
                "paypal",
                "crypto",
                "other"
            ],
            "x-enum-varnames": [
                "PaymentDetailsTypeWire",
                "PaymentDetailsTypeACH",
                "PaymentDetailsTypeCheck",
                "PaymentDetailsTypePayPal",
                "PaymentDetailsTypeCrypto",
                "PaymentDetailsTypeOther"
            ]
        },
        "domain.PaymentMethodStatus": {
            "type": "string",
            "enum": [
                "active",
                "inactive",
                "expired",
                "failed"
            ],
            "x-enum-varnames": [
                "PaymentMethodStatusActive",
                "PaymentMethodStatusInactive",
                "PaymentMethodStatusExpired",
                "PaymentMethodStatusFailed"
            ]
        },
        "domain.PaymentType": {
            "type": "string",
            "enum": [
                "wire",
                "ach",
                "check",
                "paypal",
                "crypto",
                "other"
            ],
            "x-enum-varnames": [
                "PaymentTypeWire",
                "PaymentTypeACH",
                "PaymentTypeCheck",
                "PaymentTypePayPal",
                "PaymentTypeCrypto",
                "PaymentTypeOther"
            ]
        },
        "domain.PermissionCheckRequest": {
            "type": "object",
            "required": [
                "advertiser_org_id",
                "agency_org_id",
                "permissions"
            ],
            "properties": {
                "advertiser_org_id": {
                    "type": "integer"
                },
                "agency_org_id": {
                    "type": "integer"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.DelegationPermission"
                    }
                }
            }
        },
        "domain.PermissionCheckResponse": {
            "type": "object",
            "properties": {
                "delegation_status": {
                    "$ref": "#/definitions/domain.DelegationStatus"
                },
                "has_permissions": {
                    "type": "boolean"
                },
                "is_expired": {
                    "type": "boolean"
                },
                "permission_results": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "id": {
                    "description": "Stores the auth.uid() from Supabase Auth",
                    "type": "string"
                },
                "last_name": {
                    "description": "Pointer for NULLable",
                    "type": "string"
                },
                "organization_id": {
                    "description": "Pointer for NULLable",
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                },
                "role_name": {
                    "description": "Mandatory role name",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.PublisherConversation": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "list": {
                    "description": "Optional: Include list details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.FavoritePublisherList"
                        }
                    ]
                },
                "list_id": {
                    "type": "integer"
                },
                "message_count": {
                    "description": "Computed fields",
                    "type": "integer"
                },
                "messages": {
                    "description": "Optional: Include messages when fetching with details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.PublisherMessage"
                    }
                },
                "organization_id": {
                    "type": "integer"
                },
                "publisher": {
                    "description": "Optional: Include publisher details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.AnalyticsPublisher"
                        }
                    ]
                },
                "publisher_domain": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.PublisherMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "conversation_id": {
                    "type": "integer"
                },
                "external_message_id": {
                    "type": "string"
                },
                "message_id": {
                    "type": "integer"
                },
                "message_type": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "sender_id": {
                    "type": "string"
                },
                "sender_type": {
                    "type": "string"
                },
                "sent_at": {
                    "type": "string"
                }
            }
        },
        "domain.RechargeRequest": {
            "type": "object",
            "required": [
                "amount"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "payment_method_id": {
                    "type": "string"
                }
            }
        },
        "domain.SendMessageRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 5000,
                    "minLength": 1
                },
                "message_type": {
                    "type": "string",
                    "enum": [
                        "text",
                        "system",
                        "notification"
                    ]
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "domain.SocialMediaData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "socialsAvailable": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "value": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "domain.StripePaymentMethod": {
            "type": "object",
            "properties": {
                "account_holder_type": {
                    "type": "string"
                },
                "bank_name": {
                    "description": "Bank Account Details",
                    "type": "string"
                },
                "billing_account_id": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "is_default": {
                    "description": "Status and Configuration",
                    "type": "boolean"
                },
                "last4": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "nickname": {
                    "description": "Metadata",
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "payment_method_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/domain.PaymentMethodStatus"
                },
                "stripe_payment_method_id": {
                    "description": "Stripe Integration",
                    "type": "string"
                },
                "type": {
                    "description": "Payment Method Details",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "balance_after": {
                    "type": "number"
                },
                "balance_before": {
                    "description": "Balance Tracking",
                    "type": "number"
                },
                "billing_account_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "description": "Metadata",
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "organization_id": {
                    "type": "integer"
                },
                "processed_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "description": "References",
                    "type": "string"
                },
                "related_transaction_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "Status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.TransactionStatus"
                        }
                    ]
                },
                "stripe_charge_id": {
                    "type": "string"
                },
                "stripe_invoice_id": {
                    "type": "string"
                },
                "stripe_payment_intent_id": {
                    "description": "Stripe Integration",
                    "type": "string"
                },
                "transaction_id": {
                    "type": "integer"
                },
                "type": {
                    "description": "Transaction Details",
                    "allOf": [
                        {
                            "$ref": "#/definitions/domain.TransactionType"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.TransactionStatus": {
            "type": "string",
            "enum": [
                "pending",
                "completed",
                "failed",
                "cancelled",
                "refunded"
            ],
            "x-enum-varnames": [
                "TransactionStatusPending",
                "TransactionStatusCompleted",
                "TransactionStatusFailed",
                "TransactionStatusCancelled",
                "TransactionStatusRefunded"
            ]
        },
        "domain.TransactionType": {
            "type": "string",
            "enum": [
                "recharge",
                "debit",
                "credit",
                "refund",
                "chargeback",
                "invoice_payment",
                "usage_charge",
                "affiliate_payout",
                "platform_fee",
                "adjustment",
                "transfer"
            ],
            "x-enum-varnames": [
                "TransactionTypeRecharge",
                "TransactionTypeDebit",
                "TransactionTypeCredit",
                "TransactionTypeRefund",
                "TransactionTypeChargeback",
                "TransactionTypeInvoicePayment",
                "TransactionTypeUsageCharge",
                "TransactionTypeAffiliatePayout",
                "TransactionTypePlatformFee",
                "TransactionTypeAdjustment",
                "TransactionTypeTransfer"
            ]
        },
        "domain.UpdateAssociationRequest": {
            "type": "object",
            "properties": {
                "all_affiliates_visible": {
                    "type": "boolean"
                },
                "all_campaigns_visible": {
                    "type": "boolean"
                },
                "status": {
                    "$ref": "#/definitions/domain.AssociationStatus"
                },
                "visible_affiliate_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "visible_campaign_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "domain.UpdateBillingConfigRequest": {
            "type": "object",
            "properties": {
                "auto_recharge_amount": {
                    "type": "number"
                },
                "auto_recharge_enabled": {
                    "type": "boolean"
                },
                "auto_recharge_threshold": {
                    "type": "number"
                },
                "billing_email": {
                    "type": "string"
                },
                "billing_mode": {
                    "$ref": "#/definitions/domain.BillingMode"
                },
                "invoice_day_of_month": {
                    "type": "integer"
                },
                "payment_terms_days": {
                    "type": "integer"
                }
            }
        },
        "domain.UpdateConversationStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "active",
                        "closed",
                        "archived"
                    ]
                }
            }
        },
        "domain.UpdateFavoritePublisherListRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "domain.UpdateInvitationRequest": {
            "type": "object",
            "properties": {
                "allowed_affiliate_org_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "default_all_affiliates_visible": {
                    "type": "boolean"
                },
                "default_all_campaigns_visible": {
                    "type": "boolean"
                },
                "default_visible_affiliate_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "default_visible_campaign_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "max_uses": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.InvitationStatus"
                }
            }
        },
        "domain.UpdatePublisherInListRequest": {
            "type": "object",
            "properties": {
                "notes": {
                    "type": "string",
                    "maxLength": 1000
                }
            }
        },
        "domain.UpdatePublisherStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "added",
                        "contacted",
                        "accepted"
                    ]
                }
            }
        },
        "domain.UseInvitationRequest": {
            "type": "object",
            "required": [
                "affiliate_org_id",
                "invitation_token"
            ],
            "properties": {
                "affiliate_org_id": {
                    "type": "integer"
                },
                "invitation_token": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "domain.UseInvitationResponse": {
            "type": "object",
            "properties": {
                "association": {
                    "$ref": "#/definitions/domain.OrganizationAssociation"
                },
                "error_message": {
                    "type": "string"
                },
                "invitation": {
                    "$ref": "#/definitions/domain.AdvertiserAssociationInvitation"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "domain.VerticalData": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "sampleValue": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "rank": {
                            "type": "integer"
                        },
                        "score": {
                            "type": "integer"
                        }
                    }
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "rank": {
                                "type": "integer"
                            },
                            "score": {
                                "type": "integer"
                            }
                        }
                    }
                }
            }
        },
        "handlers.AdvertiserExtraInfoRequest": {
            "type": "object",
            "properties": {
                "company_size": {
                    "type": "string",
                    "enum": [
                        "startup",
                        "small",
                        "medium",
                        "large",
                        "enterprise"
                    ]
                },
                "website": {
                    "type": "string"
                },
                "website_type": {
                    "type": "string",
                    "enum": [
                        "shopify",
                        "amazon",
                        "shopline",
                        "tiktok_shop",
                        "other"
                    ]
                }
            }
        },
        "handlers.AffiliateExtraInfoRequest": {
            "type": "object",
            "properties": {
                "affiliate_type": {
                    "type": "string",
                    "enum": [
                        "cashback",
                        "blog",
                        "incentive",
                        "content",
                        "forum",
                        "sub_affiliate_network",
                        "other"
                    ]
                },
                "logo_url": {
                    "type": "string"
                },
                "self_description": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "handlers.AffiliatesSearchRequest": {
            "type": "object",
            "properties": {
                "country": {
                    "description": "Country code to filter by (optional)",
                    "type": "string",
                    "example": "US"
                },
                "domain": {
                    "description": "Domain name to search for (optional) - partial matching like auto-completion",
                    "type": "string",
                    "example": "example.com"
                },
                "offset": {
                    "description": "Page size (number of results per page)",
                    "type": "integer",
                    "example": 10
                },
                "page": {
                    "description": "Page number for pagination",
                    "type": "integer",
                    "example": 1
                },
                "partner_domains": {
                    "description": "Partner domains to search for (optional)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "amazon.com",
                        "etsy.com"
                    ]
                },
                "verticals": {
                    "description": "Verticals to filter by (optional) - matches verticalsV2 names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "E-commerce",
                        "Fashion / Clothing"
                    ]
                }
            }
        },
        "handlers.AffiliatesSearchResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "List of affiliate publishers matching the search criteria",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.AnalyticsPublisherResponse"
                    }
                },
                "offset": {
                    "description": "Page size (number of results per page)",
                    "type": "integer"
                },
                "page": {
                    "description": "Current page number",
                    "type": "integer"
                },
                "total": {
                    "description": "Total number of items found matching the search criteria",
                    "type": "integer"
                }
            }
        },
        "handlers.CreateAdvertiserRequest": {
            "type": "object",
            "required": [
                "data",
                "domain"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "domain": {
                    "type": "string"
                }
            }
        },
        "handlers.CreateAffiliateProviderMappingRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "provider_type"
            ],
            "properties": {
                "affiliate_id": {
                    "description": "Affiliate ID",
                    "type": "integer",
                    "example": 1
                },
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "provider_type": {
                    "description": "Provider type (e.g., 'everflow')",
                    "type": "string",
                    "example": "everflow"
                }
            }
        },
        "handlers.CreateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "organization_id"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "affiliate@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Example Affiliate"
                },
                "organization_id": {
                    "description": "Organization ID",
                    "type": "integer",
                    "example": 1
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.CreateOrganizationRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "advertiser_extra_info": {
                    "$ref": "#/definitions/handlers.AdvertiserExtraInfoRequest"
                },
                "affiliate_extra_info": {
                    "$ref": "#/definitions/handlers.AffiliateExtraInfoRequest"
                },
                "contact_email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "advertiser",
                        "affiliate",
                        "platform_owner",
                        "agency"
                    ]
                }
            }
        },
        "handlers.CreatePublisherRequest": {
            "type": "object",
            "required": [
                "data",
                "domain"
            ],
            "properties": {
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "domain": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.ProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "description": "TODO: Remove this field when access control is restored",
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.SupabaseUserWebhookPayload": {
            "type": "object",
            "properties": {
                "record": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "string"
                        }
                    }
                },
                "table": {
                    "description": "e.g., \"users\"",
                    "type": "string"
                },
                "type": {
                    "description": "e.g., \"INSERT\"",
                    "type": "string"
                }
            }
        },
        "handlers.UpdateAffiliateProviderMappingRequest": {
            "type": "object",
            "properties": {
                "provider_affiliate_id": {
                    "description": "Provider's affiliate ID",
                    "type": "string",
                    "example": "aff-12345"
                },
                "provider_config": {
                    "description": "Provider configuration in JSON format\nswagger:strfmt json",
                    "type": "object"
                }
            }
        },
        "handlers.UpdateAffiliateRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "contact_email": {
                    "description": "Contact email address",
                    "type": "string",
                    "example": "updated@example.com"
                },
                "name": {
                    "description": "Affiliate name",
                    "type": "string",
                    "example": "Updated Affiliate"
                },
                "payment_details": {
                    "description": "Payment details in JSON format\nswagger:strfmt json",
                    "type": "object"
                },
                "status": {
                    "description": "Status of the affiliate (active, pending, inactive, rejected)",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "handlers.UpdateExpirationRequest": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                }
            }
        },
        "handlers.UpdateOrganizationRequest": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "advertiser_extra_info": {
                    "$ref": "#/definitions/handlers.AdvertiserExtraInfoRequest"
                },
                "affiliate_extra_info": {
                    "$ref": "#/definitions/handlers.AffiliateExtraInfoRequest"
                },
                "contact_email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "advertiser",
                        "affiliate",
                        "platform_owner",
                        "agency"
                    ]
                }
            }
        },
        "handlers.UpdatePermissionsRequest": {
            "type": "object",
            "required": [
                "permissions"
            ],
            "properties": {
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.DelegationPermission"
                    }
                }
            }
        },
        "handlers.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.UpsertProfileRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "role_id": {
                    "type": "integer"
                }
            }
        },
        "models.AdvertiserResponse": {
            "type": "object",
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "advertiser_id": {
                    "type": "integer"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CampaignListResponse": {
            "type": "object",
            "properties": {
                "campaigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CampaignResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.CampaignProviderMappingResponse": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "is_active_on_provider": {
                    "type": "boolean"
                },
                "last_synced_at": {
                    "type": "string"
                },
                "mapping_id": {
                    "type": "integer"
                },
                "provider_data": {
                    "type": "string"
                },
                "provider_offer_id": {
                    "type": "string"
                },
                "provider_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.CampaignResponse": {
            "type": "object",
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "campaign_id": {
                    "type": "integer"
                },
                "conversion_method": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "fixed_click_amount": {
                    "type": "number"
                },
                "fixed_conversion_amount": {
                    "type": "number"
                },
                "fixed_revenue": {
                    "description": "Simplified billing configuration",
                    "type": "number"
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "percentage_conversion_amount": {
                    "type": "number"
                },
                "preview_url": {
                    "type": "string"
                },
                "session_definition": {
                    "type": "string"
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string"
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "models.CreateAdvertiserProviderMappingRequest": {
            "type": "object",
            "required": [
                "provider_mapping"
            ],
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.CreateAdvertiserProviderMappingResponse": {
            "type": "object",
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.CreateAdvertiserRequest": {
            "type": "object",
            "required": [
                "name",
                "organization_id"
            ],
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.CreateCampaignRequest": {
            "type": "object",
            "required": [
                "advertiser_id",
                "name",
                "organization_id",
                "status"
            ],
            "properties": {
                "advertiser_id": {
                    "type": "integer"
                },
                "conversion_method": {
                    "type": "string",
                    "enum": [
                        "server_postback",
                        "pixel"
                    ]
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "fixed_click_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "fixed_conversion_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "fixed_revenue": {
                    "description": "Simplified billing configuration",
                    "type": "number",
                    "minimum": 0
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "integer"
                },
                "percentage_conversion_amount": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                },
                "preview_url": {
                    "type": "string"
                },
                "session_definition": {
                    "type": "string",
                    "enum": [
                        "cookie",
                        "ip",
                        "fingerprint"
                    ]
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "active",
                        "paused",
                        "archived"
                    ]
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "public",
                        "require_approval",
                        "private"
                    ]
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        },
        "models.GetAdvertiserProviderMappingResponse": {
            "type": "object",
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.GetCampaignProviderMappingResponse": {
            "type": "object",
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/models.CampaignProviderMappingResponse"
                }
            }
        },
        "models.TrackingLinkGenerationRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "campaign_id",
                "name"
            ],
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "creative_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "network_offer_url_id": {
                    "type": "integer",
                    "example": 1
                },
                "network_tracking_domain_id": {
                    "type": "integer",
                    "example": 1
                },
                "network_traffic_source_id": {
                    "type": "integer",
                    "example": 1
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.TrackingLinkGenerationResponse": {
            "type": "object",
            "properties": {
                "generated_url": {
                    "type": "string",
                    "example": "https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123"
                },
                "qr_code_url": {
                    "type": "string",
                    "example": "https://api.example.com/tracking-links/1/qr"
                },
                "tracking_link": {
                    "$ref": "#/definitions/models.TrackingLinkResponse"
                }
            }
        },
        "models.TrackingLinkListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "page_size": {
                    "type": "integer",
                    "example": 20
                },
                "total": {
                    "type": "integer",
                    "example": 150
                },
                "total_pages": {
                    "type": "integer",
                    "example": 8
                },
                "tracking_links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TrackingLinkResponse"
                    }
                }
            }
        },
        "models.TrackingLinkRequest": {
            "type": "object",
            "required": [
                "affiliate_id",
                "campaign_id",
                "name",
                "status"
            ],
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.TrackingLinkResponse": {
            "type": "object",
            "properties": {
                "affiliate_id": {
                    "type": "integer",
                    "example": 1
                },
                "campaign_id": {
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "type": "string",
                    "example": "2023-12-01T10:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "organization_id": {
                    "type": "integer",
                    "example": 1
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                },
                "tracking_link_id": {
                    "type": "integer",
                    "example": 1
                },
                "tracking_url": {
                    "type": "string",
                    "example": "https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2023-12-01T10:30:00Z"
                }
            }
        },
        "models.TrackingLinkUpdateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Tracking link for Facebook traffic"
                },
                "internal_notes": {
                    "type": "string",
                    "example": "High-performing traffic source"
                },
                "is_encrypt_parameters": {
                    "type": "boolean",
                    "example": false
                },
                "is_redirect_link": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "type": "string",
                    "example": "Facebook Campaign Link"
                },
                "source_id": {
                    "type": "string",
                    "example": "facebook"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "sub1": {
                    "type": "string",
                    "example": "campaign_123"
                },
                "sub2": {
                    "type": "string",
                    "example": "adset_456"
                },
                "sub3": {
                    "type": "string",
                    "example": "ad_789"
                },
                "sub4": {
                    "type": "string",
                    "example": "placement_mobile"
                },
                "sub5": {
                    "type": "string",
                    "example": "audience_lookalike"
                },
                "tags": {
                    "type": "string",
                    "example": "facebook,mobile,lookalike"
                }
            }
        },
        "models.UpdateAdvertiserProviderMappingRequest": {
            "type": "object",
            "required": [
                "provider_mapping"
            ],
            "properties": {
                "provider_mapping": {
                    "$ref": "#/definitions/domain.AdvertiserProviderMapping"
                }
            }
        },
        "models.UpdateAdvertiserRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "accounting_contact_email": {
                    "type": "string"
                },
                "affiliate_id_macro": {
                    "type": "string"
                },
                "attribution_method": {
                    "type": "string"
                },
                "attribution_priority": {
                    "type": "string"
                },
                "billing_details": {
                    "$ref": "#/definitions/domain.BillingDetails"
                },
                "contact_email": {
                    "type": "string"
                },
                "default_currency_id": {
                    "type": "string"
                },
                "email_attribution_method": {
                    "type": "string"
                },
                "internal_notes": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "offer_id_macro": {
                    "type": "string"
                },
                "platform_name": {
                    "type": "string"
                },
                "platform_url": {
                    "type": "string"
                },
                "platform_username": {
                    "type": "string"
                },
                "reporting_timezone_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.UpdateCampaignRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "conversion_method": {
                    "type": "string",
                    "enum": [
                        "server_postback",
                        "pixel"
                    ]
                },
                "currency_id": {
                    "type": "string"
                },
                "daily_click_cap": {
                    "type": "integer"
                },
                "daily_conversion_cap": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "destination_url": {
                    "description": "Core campaign fields",
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "fixed_click_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "fixed_conversion_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "fixed_revenue": {
                    "description": "Simplified billing configuration",
                    "type": "number",
                    "minimum": 0
                },
                "global_click_cap": {
                    "type": "integer"
                },
                "global_conversion_cap": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "is_caps_enabled": {
                    "description": "Caps and limits",
                    "type": "boolean"
                },
                "monthly_click_cap": {
                    "type": "integer"
                },
                "monthly_conversion_cap": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "percentage_conversion_amount": {
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                },
                "preview_url": {
                    "type": "string"
                },
                "session_definition": {
                    "type": "string",
                    "enum": [
                        "cookie",
                        "ip",
                        "fingerprint"
                    ]
                },
                "session_duration": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "draft",
                        "active",
                        "paused",
                        "archived"
                    ]
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "visibility": {
                    "type": "string",
                    "enum": [
                        "public",
                        "require_approval",
                        "private"
                    ]
                },
                "weekly_click_cap": {
                    "type": "integer"
                },
                "weekly_conversion_cap": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Affiliate Backend API",
	Description:      "API Server for Affiliate Backend Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
