/*
Everflow Network API - Offers

API for managing offers in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package offer

import (
	"encoding/json"
)

// checks if the OfferResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferResponse{}

// OfferResponse struct for OfferResponse
type OfferResponse struct {
	// ID of the offer
	NetworkOfferId *int32 `json:"network_offer_id,omitempty"`
	// ID of the network
	NetworkId *int32 `json:"network_id,omitempty"`
	// ID of the advertiser
	NetworkAdvertiserId *int32 `json:"network_advertiser_id,omitempty"`
	// ID of the offer group
	NetworkOfferGroupId *int32 `json:"network_offer_group_id,omitempty"`
	// Name of the offer
	Name *string `json:"name,omitempty"`
	// Thumbnail URL
	ThumbnailUrl *string `json:"thumbnail_url,omitempty"`
	// Category ID
	NetworkCategoryId *int32 `json:"network_category_id,omitempty"`
	// Internal notes
	InternalNotes *string `json:"internal_notes,omitempty"`
	// Landing page URL
	DestinationUrl *string `json:"destination_url,omitempty"`
	// Server-side URL
	ServerSideUrl *string `json:"server_side_url,omitempty"`
	// View through enabled
	IsViewThroughEnabled *bool `json:"is_view_through_enabled,omitempty"`
	// View through destination URL
	ViewThroughDestinationUrl *string `json:"view_through_destination_url,omitempty"`
	// Preview URL
	PreviewUrl *string `json:"preview_url,omitempty"`
	// Offer status
	OfferStatus *string `json:"offer_status,omitempty"`
	// Currency ID
	CurrencyId *string `json:"currency_id,omitempty"`
	// Caps timezone ID
	CapsTimezoneId *int32 `json:"caps_timezone_id,omitempty"`
	// Project ID
	ProjectId *string `json:"project_id,omitempty"`
	// Live until date
	DateLiveUntil *string `json:"date_live_until,omitempty"`
	// HTML description
	HtmlDescription *string `json:"html_description,omitempty"`
	// Using explicit terms
	IsUsingExplicitTermsAndConditions *bool `json:"is_using_explicit_terms_and_conditions,omitempty"`
	// Terms and conditions
	TermsAndConditions *string `json:"terms_and_conditions,omitempty"`
	// Force terms acceptance
	IsForceTermsAndConditions *bool `json:"is_force_terms_and_conditions,omitempty"`
	// Caps enabled
	IsCapsEnabled *bool `json:"is_caps_enabled,omitempty"`
	// Daily conversion cap
	DailyConversionCap *int32 `json:"daily_conversion_cap,omitempty"`
	// Weekly conversion cap
	WeeklyConversionCap *int32 `json:"weekly_conversion_cap,omitempty"`
	// Monthly conversion cap
	MonthlyConversionCap *int32 `json:"monthly_conversion_cap,omitempty"`
	// Global conversion cap
	GlobalConversionCap *int32 `json:"global_conversion_cap,omitempty"`
	// Daily payout cap
	DailyPayoutCap *int32 `json:"daily_payout_cap,omitempty"`
	// Weekly payout cap
	WeeklyPayoutCap *int32 `json:"weekly_payout_cap,omitempty"`
	// Monthly payout cap
	MonthlyPayoutCap *int32 `json:"monthly_payout_cap,omitempty"`
	// Global payout cap
	GlobalPayoutCap *int32 `json:"global_payout_cap,omitempty"`
	// Daily revenue cap
	DailyRevenueCap *int32 `json:"daily_revenue_cap,omitempty"`
	// Weekly revenue cap
	WeeklyRevenueCap *int32 `json:"weekly_revenue_cap,omitempty"`
	// Monthly revenue cap
	MonthlyRevenueCap *int32 `json:"monthly_revenue_cap,omitempty"`
	// Global revenue cap
	GlobalRevenueCap *int32 `json:"global_revenue_cap,omitempty"`
	// Daily click cap
	DailyClickCap *int32 `json:"daily_click_cap,omitempty"`
	// Weekly click cap
	WeeklyClickCap *int32 `json:"weekly_click_cap,omitempty"`
	// Monthly click cap
	MonthlyClickCap *int32 `json:"monthly_click_cap,omitempty"`
	// Global click cap
	GlobalClickCap *int32 `json:"global_click_cap,omitempty"`
	// Redirect mode
	RedirectMode *string `json:"redirect_mode,omitempty"`
	// Using suppression list
	IsUsingSuppressionList *bool `json:"is_using_suppression_list,omitempty"`
	// Suppression list ID
	SuppressionListId *int32 `json:"suppression_list_id,omitempty"`
	// Must approve conversions
	IsMustApproveConversion *bool `json:"is_must_approve_conversion,omitempty"`
	// Allow duplicate conversions
	IsAllowDuplicateConversion *bool `json:"is_allow_duplicate_conversion,omitempty"`
	// Duplicate filter enabled
	IsDuplicateFilterEnabled *bool `json:"is_duplicate_filter_enabled,omitempty"`
	// Duplicate filter action
	DuplicateFilterTargetingAction *string `json:"duplicate_filter_targeting_action,omitempty"`
	// Tracking domain ID
	NetworkTrackingDomainId *int32 `json:"network_tracking_domain_id,omitempty"`
	// Use secure links
	IsUseSecureLink *bool `json:"is_use_secure_link,omitempty"`
	// SEO friendly
	IsSeoFriendly *bool `json:"is_seo_friendly,omitempty"`
	// Allow deep linking
	IsAllowDeepLink *bool `json:"is_allow_deep_link,omitempty"`
	// Session tracking enabled
	IsSessionTrackingEnabled *bool `json:"is_session_tracking_enabled,omitempty"`
	// Session tracking start
	SessionTrackingStartOn *string `json:"session_tracking_start_on,omitempty"`
	// Session lifespan hours
	SessionTrackingLifespanHour *int32 `json:"session_tracking_lifespan_hour,omitempty"`
	// Minimum session lifespan
	SessionTrackingMinimumLifespanSecond *int32 `json:"session_tracking_minimum_lifespan_second,omitempty"`
	// View through tracking enabled
	IsViewThroughSessionTrackingEnabled *bool `json:"is_view_through_session_tracking_enabled,omitempty"`
	// View through lifespan
	ViewThroughSessionTrackingLifespanMinute *int32 `json:"view_through_session_tracking_lifespan_minute,omitempty"`
	// View through minimum lifespan
	ViewThroughSessionTrackingMinimalLifespanSecond *int32 `json:"view_through_session_tracking_minimal_lifespan_second,omitempty"`
	// Block already converted
	IsBlockAlreadyConverted *bool `json:"is_block_already_converted,omitempty"`
	// Already converted action
	AlreadyConvertedAction *string `json:"already_converted_action,omitempty"`
	// Fail traffic enabled
	IsFailTrafficEnabled *bool `json:"is_fail_traffic_enabled,omitempty"`
	// Redirect routing method
	RedirectRoutingMethod *string `json:"redirect_routing_method,omitempty"`
	// Internal routing type
	RedirectInternalRoutingType *string `json:"redirect_internal_routing_type,omitempty"`
	// Visibility setting
	Visibility *string `json:"visibility,omitempty"`
	// Creation timestamp
	TimeCreated *int32 `json:"time_created,omitempty"`
	// Last saved timestamp
	TimeSaved *int32 `json:"time_saved,omitempty"`
	// Conversion method
	ConversionMethod *string `json:"conversion_method,omitempty"`
	// Whitelist check enabled
	IsWhitelistCheckEnabled *bool `json:"is_whitelist_check_enabled,omitempty"`
	// Use scrub rate
	IsUseScrubRate *bool `json:"is_use_scrub_rate,omitempty"`
	// Scrub rate status
	ScrubRateStatus *string `json:"scrub_rate_status,omitempty"`
	// Scrub rate percentage
	ScrubRatePercentage *int32 `json:"scrub_rate_percentage,omitempty"`
	// Session definition
	SessionDefinition *string `json:"session_definition,omitempty"`
	// Session duration
	SessionDuration *int32 `json:"session_duration,omitempty"`
	// App identifier
	AppIdentifier *string `json:"app_identifier,omitempty"`
	// Plain text description
	IsDescriptionPlainText *bool `json:"is_description_plain_text,omitempty"`
	// Use direct linking
	IsUseDirectLinking *bool `json:"is_use_direct_linking,omitempty"`
	// Email attribution enabled
	IsEmailAttributionEnabled *bool `json:"is_email_attribution_enabled,omitempty"`
	// Email attribution window enabled
	IsEmailAttributionWindowEnabled *bool `json:"is_email_attribution_window_enabled,omitempty"`
	// Email attribution window
	EmailAttributionWindowMinute *int32 `json:"email_attribution_window_minute,omitempty"`
	// Attribution window type
	EmailAttributionWindowType *string `json:"email_attribution_window_type,omitempty"`
	// Related data based on requested relationships
	Relationship map[string]interface{} `json:"relationship,omitempty"`
}

// NewOfferResponse instantiates a new OfferResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferResponse() *OfferResponse {
	this := OfferResponse{}
	return &this
}

// NewOfferResponseWithDefaults instantiates a new OfferResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferResponseWithDefaults() *OfferResponse {
	this := OfferResponse{}
	return &this
}

// GetNetworkOfferId returns the NetworkOfferId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkOfferId() int32 {
	if o == nil || IsNil(o.NetworkOfferId) {
		var ret int32
		return ret
	}
	return *o.NetworkOfferId
}

// GetNetworkOfferIdOk returns a tuple with the NetworkOfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkOfferIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkOfferId) {
		return nil, false
	}
	return o.NetworkOfferId, true
}

// HasNetworkOfferId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkOfferId() bool {
	if o != nil && !IsNil(o.NetworkOfferId) {
		return true
	}

	return false
}

// SetNetworkOfferId gets a reference to the given int32 and assigns it to the NetworkOfferId field.
func (o *OfferResponse) SetNetworkOfferId(v int32) {
	o.NetworkOfferId = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkId() int32 {
	if o == nil || IsNil(o.NetworkId) {
		var ret int32
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given int32 and assigns it to the NetworkId field.
func (o *OfferResponse) SetNetworkId(v int32) {
	o.NetworkId = &v
}

// GetNetworkAdvertiserId returns the NetworkAdvertiserId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkAdvertiserId() int32 {
	if o == nil || IsNil(o.NetworkAdvertiserId) {
		var ret int32
		return ret
	}
	return *o.NetworkAdvertiserId
}

// GetNetworkAdvertiserIdOk returns a tuple with the NetworkAdvertiserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkAdvertiserIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkAdvertiserId) {
		return nil, false
	}
	return o.NetworkAdvertiserId, true
}

// HasNetworkAdvertiserId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkAdvertiserId() bool {
	if o != nil && !IsNil(o.NetworkAdvertiserId) {
		return true
	}

	return false
}

// SetNetworkAdvertiserId gets a reference to the given int32 and assigns it to the NetworkAdvertiserId field.
func (o *OfferResponse) SetNetworkAdvertiserId(v int32) {
	o.NetworkAdvertiserId = &v
}

// GetNetworkOfferGroupId returns the NetworkOfferGroupId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkOfferGroupId() int32 {
	if o == nil || IsNil(o.NetworkOfferGroupId) {
		var ret int32
		return ret
	}
	return *o.NetworkOfferGroupId
}

// GetNetworkOfferGroupIdOk returns a tuple with the NetworkOfferGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkOfferGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkOfferGroupId) {
		return nil, false
	}
	return o.NetworkOfferGroupId, true
}

// HasNetworkOfferGroupId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkOfferGroupId() bool {
	if o != nil && !IsNil(o.NetworkOfferGroupId) {
		return true
	}

	return false
}

// SetNetworkOfferGroupId gets a reference to the given int32 and assigns it to the NetworkOfferGroupId field.
func (o *OfferResponse) SetNetworkOfferGroupId(v int32) {
	o.NetworkOfferGroupId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OfferResponse) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OfferResponse) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OfferResponse) SetName(v string) {
	o.Name = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *OfferResponse) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ThumbnailUrl) {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *OfferResponse) HasThumbnailUrl() bool {
	if o != nil && !IsNil(o.ThumbnailUrl) {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *OfferResponse) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetNetworkCategoryId returns the NetworkCategoryId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkCategoryId() int32 {
	if o == nil || IsNil(o.NetworkCategoryId) {
		var ret int32
		return ret
	}
	return *o.NetworkCategoryId
}

// GetNetworkCategoryIdOk returns a tuple with the NetworkCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkCategoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkCategoryId) {
		return nil, false
	}
	return o.NetworkCategoryId, true
}

// HasNetworkCategoryId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkCategoryId() bool {
	if o != nil && !IsNil(o.NetworkCategoryId) {
		return true
	}

	return false
}

// SetNetworkCategoryId gets a reference to the given int32 and assigns it to the NetworkCategoryId field.
func (o *OfferResponse) SetNetworkCategoryId(v int32) {
	o.NetworkCategoryId = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *OfferResponse) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *OfferResponse) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *OfferResponse) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetDestinationUrl returns the DestinationUrl field value if set, zero value otherwise.
func (o *OfferResponse) GetDestinationUrl() string {
	if o == nil || IsNil(o.DestinationUrl) {
		var ret string
		return ret
	}
	return *o.DestinationUrl
}

// GetDestinationUrlOk returns a tuple with the DestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDestinationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationUrl) {
		return nil, false
	}
	return o.DestinationUrl, true
}

// HasDestinationUrl returns a boolean if a field has been set.
func (o *OfferResponse) HasDestinationUrl() bool {
	if o != nil && !IsNil(o.DestinationUrl) {
		return true
	}

	return false
}

// SetDestinationUrl gets a reference to the given string and assigns it to the DestinationUrl field.
func (o *OfferResponse) SetDestinationUrl(v string) {
	o.DestinationUrl = &v
}

// GetServerSideUrl returns the ServerSideUrl field value if set, zero value otherwise.
func (o *OfferResponse) GetServerSideUrl() string {
	if o == nil || IsNil(o.ServerSideUrl) {
		var ret string
		return ret
	}
	return *o.ServerSideUrl
}

// GetServerSideUrlOk returns a tuple with the ServerSideUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetServerSideUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ServerSideUrl) {
		return nil, false
	}
	return o.ServerSideUrl, true
}

// HasServerSideUrl returns a boolean if a field has been set.
func (o *OfferResponse) HasServerSideUrl() bool {
	if o != nil && !IsNil(o.ServerSideUrl) {
		return true
	}

	return false
}

// SetServerSideUrl gets a reference to the given string and assigns it to the ServerSideUrl field.
func (o *OfferResponse) SetServerSideUrl(v string) {
	o.ServerSideUrl = &v
}

// GetIsViewThroughEnabled returns the IsViewThroughEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsViewThroughEnabled() bool {
	if o == nil || IsNil(o.IsViewThroughEnabled) {
		var ret bool
		return ret
	}
	return *o.IsViewThroughEnabled
}

// GetIsViewThroughEnabledOk returns a tuple with the IsViewThroughEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsViewThroughEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsViewThroughEnabled) {
		return nil, false
	}
	return o.IsViewThroughEnabled, true
}

// HasIsViewThroughEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsViewThroughEnabled() bool {
	if o != nil && !IsNil(o.IsViewThroughEnabled) {
		return true
	}

	return false
}

// SetIsViewThroughEnabled gets a reference to the given bool and assigns it to the IsViewThroughEnabled field.
func (o *OfferResponse) SetIsViewThroughEnabled(v bool) {
	o.IsViewThroughEnabled = &v
}

// GetViewThroughDestinationUrl returns the ViewThroughDestinationUrl field value if set, zero value otherwise.
func (o *OfferResponse) GetViewThroughDestinationUrl() string {
	if o == nil || IsNil(o.ViewThroughDestinationUrl) {
		var ret string
		return ret
	}
	return *o.ViewThroughDestinationUrl
}

// GetViewThroughDestinationUrlOk returns a tuple with the ViewThroughDestinationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetViewThroughDestinationUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ViewThroughDestinationUrl) {
		return nil, false
	}
	return o.ViewThroughDestinationUrl, true
}

// HasViewThroughDestinationUrl returns a boolean if a field has been set.
func (o *OfferResponse) HasViewThroughDestinationUrl() bool {
	if o != nil && !IsNil(o.ViewThroughDestinationUrl) {
		return true
	}

	return false
}

// SetViewThroughDestinationUrl gets a reference to the given string and assigns it to the ViewThroughDestinationUrl field.
func (o *OfferResponse) SetViewThroughDestinationUrl(v string) {
	o.ViewThroughDestinationUrl = &v
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *OfferResponse) GetPreviewUrl() string {
	if o == nil || IsNil(o.PreviewUrl) {
		var ret string
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetPreviewUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PreviewUrl) {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *OfferResponse) HasPreviewUrl() bool {
	if o != nil && !IsNil(o.PreviewUrl) {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given string and assigns it to the PreviewUrl field.
func (o *OfferResponse) SetPreviewUrl(v string) {
	o.PreviewUrl = &v
}

// GetOfferStatus returns the OfferStatus field value if set, zero value otherwise.
func (o *OfferResponse) GetOfferStatus() string {
	if o == nil || IsNil(o.OfferStatus) {
		var ret string
		return ret
	}
	return *o.OfferStatus
}

// GetOfferStatusOk returns a tuple with the OfferStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetOfferStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OfferStatus) {
		return nil, false
	}
	return o.OfferStatus, true
}

// HasOfferStatus returns a boolean if a field has been set.
func (o *OfferResponse) HasOfferStatus() bool {
	if o != nil && !IsNil(o.OfferStatus) {
		return true
	}

	return false
}

// SetOfferStatus gets a reference to the given string and assigns it to the OfferStatus field.
func (o *OfferResponse) SetOfferStatus(v string) {
	o.OfferStatus = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *OfferResponse) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *OfferResponse) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *OfferResponse) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

// GetCapsTimezoneId returns the CapsTimezoneId field value if set, zero value otherwise.
func (o *OfferResponse) GetCapsTimezoneId() int32 {
	if o == nil || IsNil(o.CapsTimezoneId) {
		var ret int32
		return ret
	}
	return *o.CapsTimezoneId
}

// GetCapsTimezoneIdOk returns a tuple with the CapsTimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetCapsTimezoneIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CapsTimezoneId) {
		return nil, false
	}
	return o.CapsTimezoneId, true
}

// HasCapsTimezoneId returns a boolean if a field has been set.
func (o *OfferResponse) HasCapsTimezoneId() bool {
	if o != nil && !IsNil(o.CapsTimezoneId) {
		return true
	}

	return false
}

// SetCapsTimezoneId gets a reference to the given int32 and assigns it to the CapsTimezoneId field.
func (o *OfferResponse) SetCapsTimezoneId(v int32) {
	o.CapsTimezoneId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *OfferResponse) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *OfferResponse) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *OfferResponse) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetDateLiveUntil returns the DateLiveUntil field value if set, zero value otherwise.
func (o *OfferResponse) GetDateLiveUntil() string {
	if o == nil || IsNil(o.DateLiveUntil) {
		var ret string
		return ret
	}
	return *o.DateLiveUntil
}

// GetDateLiveUntilOk returns a tuple with the DateLiveUntil field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDateLiveUntilOk() (*string, bool) {
	if o == nil || IsNil(o.DateLiveUntil) {
		return nil, false
	}
	return o.DateLiveUntil, true
}

// HasDateLiveUntil returns a boolean if a field has been set.
func (o *OfferResponse) HasDateLiveUntil() bool {
	if o != nil && !IsNil(o.DateLiveUntil) {
		return true
	}

	return false
}

// SetDateLiveUntil gets a reference to the given string and assigns it to the DateLiveUntil field.
func (o *OfferResponse) SetDateLiveUntil(v string) {
	o.DateLiveUntil = &v
}

// GetHtmlDescription returns the HtmlDescription field value if set, zero value otherwise.
func (o *OfferResponse) GetHtmlDescription() string {
	if o == nil || IsNil(o.HtmlDescription) {
		var ret string
		return ret
	}
	return *o.HtmlDescription
}

// GetHtmlDescriptionOk returns a tuple with the HtmlDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetHtmlDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlDescription) {
		return nil, false
	}
	return o.HtmlDescription, true
}

// HasHtmlDescription returns a boolean if a field has been set.
func (o *OfferResponse) HasHtmlDescription() bool {
	if o != nil && !IsNil(o.HtmlDescription) {
		return true
	}

	return false
}

// SetHtmlDescription gets a reference to the given string and assigns it to the HtmlDescription field.
func (o *OfferResponse) SetHtmlDescription(v string) {
	o.HtmlDescription = &v
}

// GetIsUsingExplicitTermsAndConditions returns the IsUsingExplicitTermsAndConditions field value if set, zero value otherwise.
func (o *OfferResponse) GetIsUsingExplicitTermsAndConditions() bool {
	if o == nil || IsNil(o.IsUsingExplicitTermsAndConditions) {
		var ret bool
		return ret
	}
	return *o.IsUsingExplicitTermsAndConditions
}

// GetIsUsingExplicitTermsAndConditionsOk returns a tuple with the IsUsingExplicitTermsAndConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsUsingExplicitTermsAndConditionsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingExplicitTermsAndConditions) {
		return nil, false
	}
	return o.IsUsingExplicitTermsAndConditions, true
}

// HasIsUsingExplicitTermsAndConditions returns a boolean if a field has been set.
func (o *OfferResponse) HasIsUsingExplicitTermsAndConditions() bool {
	if o != nil && !IsNil(o.IsUsingExplicitTermsAndConditions) {
		return true
	}

	return false
}

// SetIsUsingExplicitTermsAndConditions gets a reference to the given bool and assigns it to the IsUsingExplicitTermsAndConditions field.
func (o *OfferResponse) SetIsUsingExplicitTermsAndConditions(v bool) {
	o.IsUsingExplicitTermsAndConditions = &v
}

// GetTermsAndConditions returns the TermsAndConditions field value if set, zero value otherwise.
func (o *OfferResponse) GetTermsAndConditions() string {
	if o == nil || IsNil(o.TermsAndConditions) {
		var ret string
		return ret
	}
	return *o.TermsAndConditions
}

// GetTermsAndConditionsOk returns a tuple with the TermsAndConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetTermsAndConditionsOk() (*string, bool) {
	if o == nil || IsNil(o.TermsAndConditions) {
		return nil, false
	}
	return o.TermsAndConditions, true
}

// HasTermsAndConditions returns a boolean if a field has been set.
func (o *OfferResponse) HasTermsAndConditions() bool {
	if o != nil && !IsNil(o.TermsAndConditions) {
		return true
	}

	return false
}

// SetTermsAndConditions gets a reference to the given string and assigns it to the TermsAndConditions field.
func (o *OfferResponse) SetTermsAndConditions(v string) {
	o.TermsAndConditions = &v
}

// GetIsForceTermsAndConditions returns the IsForceTermsAndConditions field value if set, zero value otherwise.
func (o *OfferResponse) GetIsForceTermsAndConditions() bool {
	if o == nil || IsNil(o.IsForceTermsAndConditions) {
		var ret bool
		return ret
	}
	return *o.IsForceTermsAndConditions
}

// GetIsForceTermsAndConditionsOk returns a tuple with the IsForceTermsAndConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsForceTermsAndConditionsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsForceTermsAndConditions) {
		return nil, false
	}
	return o.IsForceTermsAndConditions, true
}

// HasIsForceTermsAndConditions returns a boolean if a field has been set.
func (o *OfferResponse) HasIsForceTermsAndConditions() bool {
	if o != nil && !IsNil(o.IsForceTermsAndConditions) {
		return true
	}

	return false
}

// SetIsForceTermsAndConditions gets a reference to the given bool and assigns it to the IsForceTermsAndConditions field.
func (o *OfferResponse) SetIsForceTermsAndConditions(v bool) {
	o.IsForceTermsAndConditions = &v
}

// GetIsCapsEnabled returns the IsCapsEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsCapsEnabled() bool {
	if o == nil || IsNil(o.IsCapsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsCapsEnabled
}

// GetIsCapsEnabledOk returns a tuple with the IsCapsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsCapsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCapsEnabled) {
		return nil, false
	}
	return o.IsCapsEnabled, true
}

// HasIsCapsEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsCapsEnabled() bool {
	if o != nil && !IsNil(o.IsCapsEnabled) {
		return true
	}

	return false
}

// SetIsCapsEnabled gets a reference to the given bool and assigns it to the IsCapsEnabled field.
func (o *OfferResponse) SetIsCapsEnabled(v bool) {
	o.IsCapsEnabled = &v
}

// GetDailyConversionCap returns the DailyConversionCap field value if set, zero value otherwise.
func (o *OfferResponse) GetDailyConversionCap() int32 {
	if o == nil || IsNil(o.DailyConversionCap) {
		var ret int32
		return ret
	}
	return *o.DailyConversionCap
}

// GetDailyConversionCapOk returns a tuple with the DailyConversionCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDailyConversionCapOk() (*int32, bool) {
	if o == nil || IsNil(o.DailyConversionCap) {
		return nil, false
	}
	return o.DailyConversionCap, true
}

// HasDailyConversionCap returns a boolean if a field has been set.
func (o *OfferResponse) HasDailyConversionCap() bool {
	if o != nil && !IsNil(o.DailyConversionCap) {
		return true
	}

	return false
}

// SetDailyConversionCap gets a reference to the given int32 and assigns it to the DailyConversionCap field.
func (o *OfferResponse) SetDailyConversionCap(v int32) {
	o.DailyConversionCap = &v
}

// GetWeeklyConversionCap returns the WeeklyConversionCap field value if set, zero value otherwise.
func (o *OfferResponse) GetWeeklyConversionCap() int32 {
	if o == nil || IsNil(o.WeeklyConversionCap) {
		var ret int32
		return ret
	}
	return *o.WeeklyConversionCap
}

// GetWeeklyConversionCapOk returns a tuple with the WeeklyConversionCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetWeeklyConversionCapOk() (*int32, bool) {
	if o == nil || IsNil(o.WeeklyConversionCap) {
		return nil, false
	}
	return o.WeeklyConversionCap, true
}

// HasWeeklyConversionCap returns a boolean if a field has been set.
func (o *OfferResponse) HasWeeklyConversionCap() bool {
	if o != nil && !IsNil(o.WeeklyConversionCap) {
		return true
	}

	return false
}

// SetWeeklyConversionCap gets a reference to the given int32 and assigns it to the WeeklyConversionCap field.
func (o *OfferResponse) SetWeeklyConversionCap(v int32) {
	o.WeeklyConversionCap = &v
}

// GetMonthlyConversionCap returns the MonthlyConversionCap field value if set, zero value otherwise.
func (o *OfferResponse) GetMonthlyConversionCap() int32 {
	if o == nil || IsNil(o.MonthlyConversionCap) {
		var ret int32
		return ret
	}
	return *o.MonthlyConversionCap
}

// GetMonthlyConversionCapOk returns a tuple with the MonthlyConversionCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetMonthlyConversionCapOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyConversionCap) {
		return nil, false
	}
	return o.MonthlyConversionCap, true
}

// HasMonthlyConversionCap returns a boolean if a field has been set.
func (o *OfferResponse) HasMonthlyConversionCap() bool {
	if o != nil && !IsNil(o.MonthlyConversionCap) {
		return true
	}

	return false
}

// SetMonthlyConversionCap gets a reference to the given int32 and assigns it to the MonthlyConversionCap field.
func (o *OfferResponse) SetMonthlyConversionCap(v int32) {
	o.MonthlyConversionCap = &v
}

// GetGlobalConversionCap returns the GlobalConversionCap field value if set, zero value otherwise.
func (o *OfferResponse) GetGlobalConversionCap() int32 {
	if o == nil || IsNil(o.GlobalConversionCap) {
		var ret int32
		return ret
	}
	return *o.GlobalConversionCap
}

// GetGlobalConversionCapOk returns a tuple with the GlobalConversionCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetGlobalConversionCapOk() (*int32, bool) {
	if o == nil || IsNil(o.GlobalConversionCap) {
		return nil, false
	}
	return o.GlobalConversionCap, true
}

// HasGlobalConversionCap returns a boolean if a field has been set.
func (o *OfferResponse) HasGlobalConversionCap() bool {
	if o != nil && !IsNil(o.GlobalConversionCap) {
		return true
	}

	return false
}

// SetGlobalConversionCap gets a reference to the given int32 and assigns it to the GlobalConversionCap field.
func (o *OfferResponse) SetGlobalConversionCap(v int32) {
	o.GlobalConversionCap = &v
}

// GetDailyPayoutCap returns the DailyPayoutCap field value if set, zero value otherwise.
func (o *OfferResponse) GetDailyPayoutCap() int32 {
	if o == nil || IsNil(o.DailyPayoutCap) {
		var ret int32
		return ret
	}
	return *o.DailyPayoutCap
}

// GetDailyPayoutCapOk returns a tuple with the DailyPayoutCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDailyPayoutCapOk() (*int32, bool) {
	if o == nil || IsNil(o.DailyPayoutCap) {
		return nil, false
	}
	return o.DailyPayoutCap, true
}

// HasDailyPayoutCap returns a boolean if a field has been set.
func (o *OfferResponse) HasDailyPayoutCap() bool {
	if o != nil && !IsNil(o.DailyPayoutCap) {
		return true
	}

	return false
}

// SetDailyPayoutCap gets a reference to the given int32 and assigns it to the DailyPayoutCap field.
func (o *OfferResponse) SetDailyPayoutCap(v int32) {
	o.DailyPayoutCap = &v
}

// GetWeeklyPayoutCap returns the WeeklyPayoutCap field value if set, zero value otherwise.
func (o *OfferResponse) GetWeeklyPayoutCap() int32 {
	if o == nil || IsNil(o.WeeklyPayoutCap) {
		var ret int32
		return ret
	}
	return *o.WeeklyPayoutCap
}

// GetWeeklyPayoutCapOk returns a tuple with the WeeklyPayoutCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetWeeklyPayoutCapOk() (*int32, bool) {
	if o == nil || IsNil(o.WeeklyPayoutCap) {
		return nil, false
	}
	return o.WeeklyPayoutCap, true
}

// HasWeeklyPayoutCap returns a boolean if a field has been set.
func (o *OfferResponse) HasWeeklyPayoutCap() bool {
	if o != nil && !IsNil(o.WeeklyPayoutCap) {
		return true
	}

	return false
}

// SetWeeklyPayoutCap gets a reference to the given int32 and assigns it to the WeeklyPayoutCap field.
func (o *OfferResponse) SetWeeklyPayoutCap(v int32) {
	o.WeeklyPayoutCap = &v
}

// GetMonthlyPayoutCap returns the MonthlyPayoutCap field value if set, zero value otherwise.
func (o *OfferResponse) GetMonthlyPayoutCap() int32 {
	if o == nil || IsNil(o.MonthlyPayoutCap) {
		var ret int32
		return ret
	}
	return *o.MonthlyPayoutCap
}

// GetMonthlyPayoutCapOk returns a tuple with the MonthlyPayoutCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetMonthlyPayoutCapOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyPayoutCap) {
		return nil, false
	}
	return o.MonthlyPayoutCap, true
}

// HasMonthlyPayoutCap returns a boolean if a field has been set.
func (o *OfferResponse) HasMonthlyPayoutCap() bool {
	if o != nil && !IsNil(o.MonthlyPayoutCap) {
		return true
	}

	return false
}

// SetMonthlyPayoutCap gets a reference to the given int32 and assigns it to the MonthlyPayoutCap field.
func (o *OfferResponse) SetMonthlyPayoutCap(v int32) {
	o.MonthlyPayoutCap = &v
}

// GetGlobalPayoutCap returns the GlobalPayoutCap field value if set, zero value otherwise.
func (o *OfferResponse) GetGlobalPayoutCap() int32 {
	if o == nil || IsNil(o.GlobalPayoutCap) {
		var ret int32
		return ret
	}
	return *o.GlobalPayoutCap
}

// GetGlobalPayoutCapOk returns a tuple with the GlobalPayoutCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetGlobalPayoutCapOk() (*int32, bool) {
	if o == nil || IsNil(o.GlobalPayoutCap) {
		return nil, false
	}
	return o.GlobalPayoutCap, true
}

// HasGlobalPayoutCap returns a boolean if a field has been set.
func (o *OfferResponse) HasGlobalPayoutCap() bool {
	if o != nil && !IsNil(o.GlobalPayoutCap) {
		return true
	}

	return false
}

// SetGlobalPayoutCap gets a reference to the given int32 and assigns it to the GlobalPayoutCap field.
func (o *OfferResponse) SetGlobalPayoutCap(v int32) {
	o.GlobalPayoutCap = &v
}

// GetDailyRevenueCap returns the DailyRevenueCap field value if set, zero value otherwise.
func (o *OfferResponse) GetDailyRevenueCap() int32 {
	if o == nil || IsNil(o.DailyRevenueCap) {
		var ret int32
		return ret
	}
	return *o.DailyRevenueCap
}

// GetDailyRevenueCapOk returns a tuple with the DailyRevenueCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDailyRevenueCapOk() (*int32, bool) {
	if o == nil || IsNil(o.DailyRevenueCap) {
		return nil, false
	}
	return o.DailyRevenueCap, true
}

// HasDailyRevenueCap returns a boolean if a field has been set.
func (o *OfferResponse) HasDailyRevenueCap() bool {
	if o != nil && !IsNil(o.DailyRevenueCap) {
		return true
	}

	return false
}

// SetDailyRevenueCap gets a reference to the given int32 and assigns it to the DailyRevenueCap field.
func (o *OfferResponse) SetDailyRevenueCap(v int32) {
	o.DailyRevenueCap = &v
}

// GetWeeklyRevenueCap returns the WeeklyRevenueCap field value if set, zero value otherwise.
func (o *OfferResponse) GetWeeklyRevenueCap() int32 {
	if o == nil || IsNil(o.WeeklyRevenueCap) {
		var ret int32
		return ret
	}
	return *o.WeeklyRevenueCap
}

// GetWeeklyRevenueCapOk returns a tuple with the WeeklyRevenueCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetWeeklyRevenueCapOk() (*int32, bool) {
	if o == nil || IsNil(o.WeeklyRevenueCap) {
		return nil, false
	}
	return o.WeeklyRevenueCap, true
}

// HasWeeklyRevenueCap returns a boolean if a field has been set.
func (o *OfferResponse) HasWeeklyRevenueCap() bool {
	if o != nil && !IsNil(o.WeeklyRevenueCap) {
		return true
	}

	return false
}

// SetWeeklyRevenueCap gets a reference to the given int32 and assigns it to the WeeklyRevenueCap field.
func (o *OfferResponse) SetWeeklyRevenueCap(v int32) {
	o.WeeklyRevenueCap = &v
}

// GetMonthlyRevenueCap returns the MonthlyRevenueCap field value if set, zero value otherwise.
func (o *OfferResponse) GetMonthlyRevenueCap() int32 {
	if o == nil || IsNil(o.MonthlyRevenueCap) {
		var ret int32
		return ret
	}
	return *o.MonthlyRevenueCap
}

// GetMonthlyRevenueCapOk returns a tuple with the MonthlyRevenueCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetMonthlyRevenueCapOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyRevenueCap) {
		return nil, false
	}
	return o.MonthlyRevenueCap, true
}

// HasMonthlyRevenueCap returns a boolean if a field has been set.
func (o *OfferResponse) HasMonthlyRevenueCap() bool {
	if o != nil && !IsNil(o.MonthlyRevenueCap) {
		return true
	}

	return false
}

// SetMonthlyRevenueCap gets a reference to the given int32 and assigns it to the MonthlyRevenueCap field.
func (o *OfferResponse) SetMonthlyRevenueCap(v int32) {
	o.MonthlyRevenueCap = &v
}

// GetGlobalRevenueCap returns the GlobalRevenueCap field value if set, zero value otherwise.
func (o *OfferResponse) GetGlobalRevenueCap() int32 {
	if o == nil || IsNil(o.GlobalRevenueCap) {
		var ret int32
		return ret
	}
	return *o.GlobalRevenueCap
}

// GetGlobalRevenueCapOk returns a tuple with the GlobalRevenueCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetGlobalRevenueCapOk() (*int32, bool) {
	if o == nil || IsNil(o.GlobalRevenueCap) {
		return nil, false
	}
	return o.GlobalRevenueCap, true
}

// HasGlobalRevenueCap returns a boolean if a field has been set.
func (o *OfferResponse) HasGlobalRevenueCap() bool {
	if o != nil && !IsNil(o.GlobalRevenueCap) {
		return true
	}

	return false
}

// SetGlobalRevenueCap gets a reference to the given int32 and assigns it to the GlobalRevenueCap field.
func (o *OfferResponse) SetGlobalRevenueCap(v int32) {
	o.GlobalRevenueCap = &v
}

// GetDailyClickCap returns the DailyClickCap field value if set, zero value otherwise.
func (o *OfferResponse) GetDailyClickCap() int32 {
	if o == nil || IsNil(o.DailyClickCap) {
		var ret int32
		return ret
	}
	return *o.DailyClickCap
}

// GetDailyClickCapOk returns a tuple with the DailyClickCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDailyClickCapOk() (*int32, bool) {
	if o == nil || IsNil(o.DailyClickCap) {
		return nil, false
	}
	return o.DailyClickCap, true
}

// HasDailyClickCap returns a boolean if a field has been set.
func (o *OfferResponse) HasDailyClickCap() bool {
	if o != nil && !IsNil(o.DailyClickCap) {
		return true
	}

	return false
}

// SetDailyClickCap gets a reference to the given int32 and assigns it to the DailyClickCap field.
func (o *OfferResponse) SetDailyClickCap(v int32) {
	o.DailyClickCap = &v
}

// GetWeeklyClickCap returns the WeeklyClickCap field value if set, zero value otherwise.
func (o *OfferResponse) GetWeeklyClickCap() int32 {
	if o == nil || IsNil(o.WeeklyClickCap) {
		var ret int32
		return ret
	}
	return *o.WeeklyClickCap
}

// GetWeeklyClickCapOk returns a tuple with the WeeklyClickCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetWeeklyClickCapOk() (*int32, bool) {
	if o == nil || IsNil(o.WeeklyClickCap) {
		return nil, false
	}
	return o.WeeklyClickCap, true
}

// HasWeeklyClickCap returns a boolean if a field has been set.
func (o *OfferResponse) HasWeeklyClickCap() bool {
	if o != nil && !IsNil(o.WeeklyClickCap) {
		return true
	}

	return false
}

// SetWeeklyClickCap gets a reference to the given int32 and assigns it to the WeeklyClickCap field.
func (o *OfferResponse) SetWeeklyClickCap(v int32) {
	o.WeeklyClickCap = &v
}

// GetMonthlyClickCap returns the MonthlyClickCap field value if set, zero value otherwise.
func (o *OfferResponse) GetMonthlyClickCap() int32 {
	if o == nil || IsNil(o.MonthlyClickCap) {
		var ret int32
		return ret
	}
	return *o.MonthlyClickCap
}

// GetMonthlyClickCapOk returns a tuple with the MonthlyClickCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetMonthlyClickCapOk() (*int32, bool) {
	if o == nil || IsNil(o.MonthlyClickCap) {
		return nil, false
	}
	return o.MonthlyClickCap, true
}

// HasMonthlyClickCap returns a boolean if a field has been set.
func (o *OfferResponse) HasMonthlyClickCap() bool {
	if o != nil && !IsNil(o.MonthlyClickCap) {
		return true
	}

	return false
}

// SetMonthlyClickCap gets a reference to the given int32 and assigns it to the MonthlyClickCap field.
func (o *OfferResponse) SetMonthlyClickCap(v int32) {
	o.MonthlyClickCap = &v
}

// GetGlobalClickCap returns the GlobalClickCap field value if set, zero value otherwise.
func (o *OfferResponse) GetGlobalClickCap() int32 {
	if o == nil || IsNil(o.GlobalClickCap) {
		var ret int32
		return ret
	}
	return *o.GlobalClickCap
}

// GetGlobalClickCapOk returns a tuple with the GlobalClickCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetGlobalClickCapOk() (*int32, bool) {
	if o == nil || IsNil(o.GlobalClickCap) {
		return nil, false
	}
	return o.GlobalClickCap, true
}

// HasGlobalClickCap returns a boolean if a field has been set.
func (o *OfferResponse) HasGlobalClickCap() bool {
	if o != nil && !IsNil(o.GlobalClickCap) {
		return true
	}

	return false
}

// SetGlobalClickCap gets a reference to the given int32 and assigns it to the GlobalClickCap field.
func (o *OfferResponse) SetGlobalClickCap(v int32) {
	o.GlobalClickCap = &v
}

// GetRedirectMode returns the RedirectMode field value if set, zero value otherwise.
func (o *OfferResponse) GetRedirectMode() string {
	if o == nil || IsNil(o.RedirectMode) {
		var ret string
		return ret
	}
	return *o.RedirectMode
}

// GetRedirectModeOk returns a tuple with the RedirectMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetRedirectModeOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectMode) {
		return nil, false
	}
	return o.RedirectMode, true
}

// HasRedirectMode returns a boolean if a field has been set.
func (o *OfferResponse) HasRedirectMode() bool {
	if o != nil && !IsNil(o.RedirectMode) {
		return true
	}

	return false
}

// SetRedirectMode gets a reference to the given string and assigns it to the RedirectMode field.
func (o *OfferResponse) SetRedirectMode(v string) {
	o.RedirectMode = &v
}

// GetIsUsingSuppressionList returns the IsUsingSuppressionList field value if set, zero value otherwise.
func (o *OfferResponse) GetIsUsingSuppressionList() bool {
	if o == nil || IsNil(o.IsUsingSuppressionList) {
		var ret bool
		return ret
	}
	return *o.IsUsingSuppressionList
}

// GetIsUsingSuppressionListOk returns a tuple with the IsUsingSuppressionList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsUsingSuppressionListOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUsingSuppressionList) {
		return nil, false
	}
	return o.IsUsingSuppressionList, true
}

// HasIsUsingSuppressionList returns a boolean if a field has been set.
func (o *OfferResponse) HasIsUsingSuppressionList() bool {
	if o != nil && !IsNil(o.IsUsingSuppressionList) {
		return true
	}

	return false
}

// SetIsUsingSuppressionList gets a reference to the given bool and assigns it to the IsUsingSuppressionList field.
func (o *OfferResponse) SetIsUsingSuppressionList(v bool) {
	o.IsUsingSuppressionList = &v
}

// GetSuppressionListId returns the SuppressionListId field value if set, zero value otherwise.
func (o *OfferResponse) GetSuppressionListId() int32 {
	if o == nil || IsNil(o.SuppressionListId) {
		var ret int32
		return ret
	}
	return *o.SuppressionListId
}

// GetSuppressionListIdOk returns a tuple with the SuppressionListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSuppressionListIdOk() (*int32, bool) {
	if o == nil || IsNil(o.SuppressionListId) {
		return nil, false
	}
	return o.SuppressionListId, true
}

// HasSuppressionListId returns a boolean if a field has been set.
func (o *OfferResponse) HasSuppressionListId() bool {
	if o != nil && !IsNil(o.SuppressionListId) {
		return true
	}

	return false
}

// SetSuppressionListId gets a reference to the given int32 and assigns it to the SuppressionListId field.
func (o *OfferResponse) SetSuppressionListId(v int32) {
	o.SuppressionListId = &v
}

// GetIsMustApproveConversion returns the IsMustApproveConversion field value if set, zero value otherwise.
func (o *OfferResponse) GetIsMustApproveConversion() bool {
	if o == nil || IsNil(o.IsMustApproveConversion) {
		var ret bool
		return ret
	}
	return *o.IsMustApproveConversion
}

// GetIsMustApproveConversionOk returns a tuple with the IsMustApproveConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsMustApproveConversionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMustApproveConversion) {
		return nil, false
	}
	return o.IsMustApproveConversion, true
}

// HasIsMustApproveConversion returns a boolean if a field has been set.
func (o *OfferResponse) HasIsMustApproveConversion() bool {
	if o != nil && !IsNil(o.IsMustApproveConversion) {
		return true
	}

	return false
}

// SetIsMustApproveConversion gets a reference to the given bool and assigns it to the IsMustApproveConversion field.
func (o *OfferResponse) SetIsMustApproveConversion(v bool) {
	o.IsMustApproveConversion = &v
}

// GetIsAllowDuplicateConversion returns the IsAllowDuplicateConversion field value if set, zero value otherwise.
func (o *OfferResponse) GetIsAllowDuplicateConversion() bool {
	if o == nil || IsNil(o.IsAllowDuplicateConversion) {
		var ret bool
		return ret
	}
	return *o.IsAllowDuplicateConversion
}

// GetIsAllowDuplicateConversionOk returns a tuple with the IsAllowDuplicateConversion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsAllowDuplicateConversionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllowDuplicateConversion) {
		return nil, false
	}
	return o.IsAllowDuplicateConversion, true
}

// HasIsAllowDuplicateConversion returns a boolean if a field has been set.
func (o *OfferResponse) HasIsAllowDuplicateConversion() bool {
	if o != nil && !IsNil(o.IsAllowDuplicateConversion) {
		return true
	}

	return false
}

// SetIsAllowDuplicateConversion gets a reference to the given bool and assigns it to the IsAllowDuplicateConversion field.
func (o *OfferResponse) SetIsAllowDuplicateConversion(v bool) {
	o.IsAllowDuplicateConversion = &v
}

// GetIsDuplicateFilterEnabled returns the IsDuplicateFilterEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsDuplicateFilterEnabled() bool {
	if o == nil || IsNil(o.IsDuplicateFilterEnabled) {
		var ret bool
		return ret
	}
	return *o.IsDuplicateFilterEnabled
}

// GetIsDuplicateFilterEnabledOk returns a tuple with the IsDuplicateFilterEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsDuplicateFilterEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDuplicateFilterEnabled) {
		return nil, false
	}
	return o.IsDuplicateFilterEnabled, true
}

// HasIsDuplicateFilterEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsDuplicateFilterEnabled() bool {
	if o != nil && !IsNil(o.IsDuplicateFilterEnabled) {
		return true
	}

	return false
}

// SetIsDuplicateFilterEnabled gets a reference to the given bool and assigns it to the IsDuplicateFilterEnabled field.
func (o *OfferResponse) SetIsDuplicateFilterEnabled(v bool) {
	o.IsDuplicateFilterEnabled = &v
}

// GetDuplicateFilterTargetingAction returns the DuplicateFilterTargetingAction field value if set, zero value otherwise.
func (o *OfferResponse) GetDuplicateFilterTargetingAction() string {
	if o == nil || IsNil(o.DuplicateFilterTargetingAction) {
		var ret string
		return ret
	}
	return *o.DuplicateFilterTargetingAction
}

// GetDuplicateFilterTargetingActionOk returns a tuple with the DuplicateFilterTargetingAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetDuplicateFilterTargetingActionOk() (*string, bool) {
	if o == nil || IsNil(o.DuplicateFilterTargetingAction) {
		return nil, false
	}
	return o.DuplicateFilterTargetingAction, true
}

// HasDuplicateFilterTargetingAction returns a boolean if a field has been set.
func (o *OfferResponse) HasDuplicateFilterTargetingAction() bool {
	if o != nil && !IsNil(o.DuplicateFilterTargetingAction) {
		return true
	}

	return false
}

// SetDuplicateFilterTargetingAction gets a reference to the given string and assigns it to the DuplicateFilterTargetingAction field.
func (o *OfferResponse) SetDuplicateFilterTargetingAction(v string) {
	o.DuplicateFilterTargetingAction = &v
}

// GetNetworkTrackingDomainId returns the NetworkTrackingDomainId field value if set, zero value otherwise.
func (o *OfferResponse) GetNetworkTrackingDomainId() int32 {
	if o == nil || IsNil(o.NetworkTrackingDomainId) {
		var ret int32
		return ret
	}
	return *o.NetworkTrackingDomainId
}

// GetNetworkTrackingDomainIdOk returns a tuple with the NetworkTrackingDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetNetworkTrackingDomainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkTrackingDomainId) {
		return nil, false
	}
	return o.NetworkTrackingDomainId, true
}

// HasNetworkTrackingDomainId returns a boolean if a field has been set.
func (o *OfferResponse) HasNetworkTrackingDomainId() bool {
	if o != nil && !IsNil(o.NetworkTrackingDomainId) {
		return true
	}

	return false
}

// SetNetworkTrackingDomainId gets a reference to the given int32 and assigns it to the NetworkTrackingDomainId field.
func (o *OfferResponse) SetNetworkTrackingDomainId(v int32) {
	o.NetworkTrackingDomainId = &v
}

// GetIsUseSecureLink returns the IsUseSecureLink field value if set, zero value otherwise.
func (o *OfferResponse) GetIsUseSecureLink() bool {
	if o == nil || IsNil(o.IsUseSecureLink) {
		var ret bool
		return ret
	}
	return *o.IsUseSecureLink
}

// GetIsUseSecureLinkOk returns a tuple with the IsUseSecureLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsUseSecureLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseSecureLink) {
		return nil, false
	}
	return o.IsUseSecureLink, true
}

// HasIsUseSecureLink returns a boolean if a field has been set.
func (o *OfferResponse) HasIsUseSecureLink() bool {
	if o != nil && !IsNil(o.IsUseSecureLink) {
		return true
	}

	return false
}

// SetIsUseSecureLink gets a reference to the given bool and assigns it to the IsUseSecureLink field.
func (o *OfferResponse) SetIsUseSecureLink(v bool) {
	o.IsUseSecureLink = &v
}

// GetIsSeoFriendly returns the IsSeoFriendly field value if set, zero value otherwise.
func (o *OfferResponse) GetIsSeoFriendly() bool {
	if o == nil || IsNil(o.IsSeoFriendly) {
		var ret bool
		return ret
	}
	return *o.IsSeoFriendly
}

// GetIsSeoFriendlyOk returns a tuple with the IsSeoFriendly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsSeoFriendlyOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSeoFriendly) {
		return nil, false
	}
	return o.IsSeoFriendly, true
}

// HasIsSeoFriendly returns a boolean if a field has been set.
func (o *OfferResponse) HasIsSeoFriendly() bool {
	if o != nil && !IsNil(o.IsSeoFriendly) {
		return true
	}

	return false
}

// SetIsSeoFriendly gets a reference to the given bool and assigns it to the IsSeoFriendly field.
func (o *OfferResponse) SetIsSeoFriendly(v bool) {
	o.IsSeoFriendly = &v
}

// GetIsAllowDeepLink returns the IsAllowDeepLink field value if set, zero value otherwise.
func (o *OfferResponse) GetIsAllowDeepLink() bool {
	if o == nil || IsNil(o.IsAllowDeepLink) {
		var ret bool
		return ret
	}
	return *o.IsAllowDeepLink
}

// GetIsAllowDeepLinkOk returns a tuple with the IsAllowDeepLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsAllowDeepLinkOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllowDeepLink) {
		return nil, false
	}
	return o.IsAllowDeepLink, true
}

// HasIsAllowDeepLink returns a boolean if a field has been set.
func (o *OfferResponse) HasIsAllowDeepLink() bool {
	if o != nil && !IsNil(o.IsAllowDeepLink) {
		return true
	}

	return false
}

// SetIsAllowDeepLink gets a reference to the given bool and assigns it to the IsAllowDeepLink field.
func (o *OfferResponse) SetIsAllowDeepLink(v bool) {
	o.IsAllowDeepLink = &v
}

// GetIsSessionTrackingEnabled returns the IsSessionTrackingEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsSessionTrackingEnabled() bool {
	if o == nil || IsNil(o.IsSessionTrackingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSessionTrackingEnabled
}

// GetIsSessionTrackingEnabledOk returns a tuple with the IsSessionTrackingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsSessionTrackingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSessionTrackingEnabled) {
		return nil, false
	}
	return o.IsSessionTrackingEnabled, true
}

// HasIsSessionTrackingEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsSessionTrackingEnabled() bool {
	if o != nil && !IsNil(o.IsSessionTrackingEnabled) {
		return true
	}

	return false
}

// SetIsSessionTrackingEnabled gets a reference to the given bool and assigns it to the IsSessionTrackingEnabled field.
func (o *OfferResponse) SetIsSessionTrackingEnabled(v bool) {
	o.IsSessionTrackingEnabled = &v
}

// GetSessionTrackingStartOn returns the SessionTrackingStartOn field value if set, zero value otherwise.
func (o *OfferResponse) GetSessionTrackingStartOn() string {
	if o == nil || IsNil(o.SessionTrackingStartOn) {
		var ret string
		return ret
	}
	return *o.SessionTrackingStartOn
}

// GetSessionTrackingStartOnOk returns a tuple with the SessionTrackingStartOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSessionTrackingStartOnOk() (*string, bool) {
	if o == nil || IsNil(o.SessionTrackingStartOn) {
		return nil, false
	}
	return o.SessionTrackingStartOn, true
}

// HasSessionTrackingStartOn returns a boolean if a field has been set.
func (o *OfferResponse) HasSessionTrackingStartOn() bool {
	if o != nil && !IsNil(o.SessionTrackingStartOn) {
		return true
	}

	return false
}

// SetSessionTrackingStartOn gets a reference to the given string and assigns it to the SessionTrackingStartOn field.
func (o *OfferResponse) SetSessionTrackingStartOn(v string) {
	o.SessionTrackingStartOn = &v
}

// GetSessionTrackingLifespanHour returns the SessionTrackingLifespanHour field value if set, zero value otherwise.
func (o *OfferResponse) GetSessionTrackingLifespanHour() int32 {
	if o == nil || IsNil(o.SessionTrackingLifespanHour) {
		var ret int32
		return ret
	}
	return *o.SessionTrackingLifespanHour
}

// GetSessionTrackingLifespanHourOk returns a tuple with the SessionTrackingLifespanHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSessionTrackingLifespanHourOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionTrackingLifespanHour) {
		return nil, false
	}
	return o.SessionTrackingLifespanHour, true
}

// HasSessionTrackingLifespanHour returns a boolean if a field has been set.
func (o *OfferResponse) HasSessionTrackingLifespanHour() bool {
	if o != nil && !IsNil(o.SessionTrackingLifespanHour) {
		return true
	}

	return false
}

// SetSessionTrackingLifespanHour gets a reference to the given int32 and assigns it to the SessionTrackingLifespanHour field.
func (o *OfferResponse) SetSessionTrackingLifespanHour(v int32) {
	o.SessionTrackingLifespanHour = &v
}

// GetSessionTrackingMinimumLifespanSecond returns the SessionTrackingMinimumLifespanSecond field value if set, zero value otherwise.
func (o *OfferResponse) GetSessionTrackingMinimumLifespanSecond() int32 {
	if o == nil || IsNil(o.SessionTrackingMinimumLifespanSecond) {
		var ret int32
		return ret
	}
	return *o.SessionTrackingMinimumLifespanSecond
}

// GetSessionTrackingMinimumLifespanSecondOk returns a tuple with the SessionTrackingMinimumLifespanSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSessionTrackingMinimumLifespanSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionTrackingMinimumLifespanSecond) {
		return nil, false
	}
	return o.SessionTrackingMinimumLifespanSecond, true
}

// HasSessionTrackingMinimumLifespanSecond returns a boolean if a field has been set.
func (o *OfferResponse) HasSessionTrackingMinimumLifespanSecond() bool {
	if o != nil && !IsNil(o.SessionTrackingMinimumLifespanSecond) {
		return true
	}

	return false
}

// SetSessionTrackingMinimumLifespanSecond gets a reference to the given int32 and assigns it to the SessionTrackingMinimumLifespanSecond field.
func (o *OfferResponse) SetSessionTrackingMinimumLifespanSecond(v int32) {
	o.SessionTrackingMinimumLifespanSecond = &v
}

// GetIsViewThroughSessionTrackingEnabled returns the IsViewThroughSessionTrackingEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsViewThroughSessionTrackingEnabled() bool {
	if o == nil || IsNil(o.IsViewThroughSessionTrackingEnabled) {
		var ret bool
		return ret
	}
	return *o.IsViewThroughSessionTrackingEnabled
}

// GetIsViewThroughSessionTrackingEnabledOk returns a tuple with the IsViewThroughSessionTrackingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsViewThroughSessionTrackingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsViewThroughSessionTrackingEnabled) {
		return nil, false
	}
	return o.IsViewThroughSessionTrackingEnabled, true
}

// HasIsViewThroughSessionTrackingEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsViewThroughSessionTrackingEnabled() bool {
	if o != nil && !IsNil(o.IsViewThroughSessionTrackingEnabled) {
		return true
	}

	return false
}

// SetIsViewThroughSessionTrackingEnabled gets a reference to the given bool and assigns it to the IsViewThroughSessionTrackingEnabled field.
func (o *OfferResponse) SetIsViewThroughSessionTrackingEnabled(v bool) {
	o.IsViewThroughSessionTrackingEnabled = &v
}

// GetViewThroughSessionTrackingLifespanMinute returns the ViewThroughSessionTrackingLifespanMinute field value if set, zero value otherwise.
func (o *OfferResponse) GetViewThroughSessionTrackingLifespanMinute() int32 {
	if o == nil || IsNil(o.ViewThroughSessionTrackingLifespanMinute) {
		var ret int32
		return ret
	}
	return *o.ViewThroughSessionTrackingLifespanMinute
}

// GetViewThroughSessionTrackingLifespanMinuteOk returns a tuple with the ViewThroughSessionTrackingLifespanMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetViewThroughSessionTrackingLifespanMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.ViewThroughSessionTrackingLifespanMinute) {
		return nil, false
	}
	return o.ViewThroughSessionTrackingLifespanMinute, true
}

// HasViewThroughSessionTrackingLifespanMinute returns a boolean if a field has been set.
func (o *OfferResponse) HasViewThroughSessionTrackingLifespanMinute() bool {
	if o != nil && !IsNil(o.ViewThroughSessionTrackingLifespanMinute) {
		return true
	}

	return false
}

// SetViewThroughSessionTrackingLifespanMinute gets a reference to the given int32 and assigns it to the ViewThroughSessionTrackingLifespanMinute field.
func (o *OfferResponse) SetViewThroughSessionTrackingLifespanMinute(v int32) {
	o.ViewThroughSessionTrackingLifespanMinute = &v
}

// GetViewThroughSessionTrackingMinimalLifespanSecond returns the ViewThroughSessionTrackingMinimalLifespanSecond field value if set, zero value otherwise.
func (o *OfferResponse) GetViewThroughSessionTrackingMinimalLifespanSecond() int32 {
	if o == nil || IsNil(o.ViewThroughSessionTrackingMinimalLifespanSecond) {
		var ret int32
		return ret
	}
	return *o.ViewThroughSessionTrackingMinimalLifespanSecond
}

// GetViewThroughSessionTrackingMinimalLifespanSecondOk returns a tuple with the ViewThroughSessionTrackingMinimalLifespanSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetViewThroughSessionTrackingMinimalLifespanSecondOk() (*int32, bool) {
	if o == nil || IsNil(o.ViewThroughSessionTrackingMinimalLifespanSecond) {
		return nil, false
	}
	return o.ViewThroughSessionTrackingMinimalLifespanSecond, true
}

// HasViewThroughSessionTrackingMinimalLifespanSecond returns a boolean if a field has been set.
func (o *OfferResponse) HasViewThroughSessionTrackingMinimalLifespanSecond() bool {
	if o != nil && !IsNil(o.ViewThroughSessionTrackingMinimalLifespanSecond) {
		return true
	}

	return false
}

// SetViewThroughSessionTrackingMinimalLifespanSecond gets a reference to the given int32 and assigns it to the ViewThroughSessionTrackingMinimalLifespanSecond field.
func (o *OfferResponse) SetViewThroughSessionTrackingMinimalLifespanSecond(v int32) {
	o.ViewThroughSessionTrackingMinimalLifespanSecond = &v
}

// GetIsBlockAlreadyConverted returns the IsBlockAlreadyConverted field value if set, zero value otherwise.
func (o *OfferResponse) GetIsBlockAlreadyConverted() bool {
	if o == nil || IsNil(o.IsBlockAlreadyConverted) {
		var ret bool
		return ret
	}
	return *o.IsBlockAlreadyConverted
}

// GetIsBlockAlreadyConvertedOk returns a tuple with the IsBlockAlreadyConverted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsBlockAlreadyConvertedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBlockAlreadyConverted) {
		return nil, false
	}
	return o.IsBlockAlreadyConverted, true
}

// HasIsBlockAlreadyConverted returns a boolean if a field has been set.
func (o *OfferResponse) HasIsBlockAlreadyConverted() bool {
	if o != nil && !IsNil(o.IsBlockAlreadyConverted) {
		return true
	}

	return false
}

// SetIsBlockAlreadyConverted gets a reference to the given bool and assigns it to the IsBlockAlreadyConverted field.
func (o *OfferResponse) SetIsBlockAlreadyConverted(v bool) {
	o.IsBlockAlreadyConverted = &v
}

// GetAlreadyConvertedAction returns the AlreadyConvertedAction field value if set, zero value otherwise.
func (o *OfferResponse) GetAlreadyConvertedAction() string {
	if o == nil || IsNil(o.AlreadyConvertedAction) {
		var ret string
		return ret
	}
	return *o.AlreadyConvertedAction
}

// GetAlreadyConvertedActionOk returns a tuple with the AlreadyConvertedAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetAlreadyConvertedActionOk() (*string, bool) {
	if o == nil || IsNil(o.AlreadyConvertedAction) {
		return nil, false
	}
	return o.AlreadyConvertedAction, true
}

// HasAlreadyConvertedAction returns a boolean if a field has been set.
func (o *OfferResponse) HasAlreadyConvertedAction() bool {
	if o != nil && !IsNil(o.AlreadyConvertedAction) {
		return true
	}

	return false
}

// SetAlreadyConvertedAction gets a reference to the given string and assigns it to the AlreadyConvertedAction field.
func (o *OfferResponse) SetAlreadyConvertedAction(v string) {
	o.AlreadyConvertedAction = &v
}

// GetIsFailTrafficEnabled returns the IsFailTrafficEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsFailTrafficEnabled() bool {
	if o == nil || IsNil(o.IsFailTrafficEnabled) {
		var ret bool
		return ret
	}
	return *o.IsFailTrafficEnabled
}

// GetIsFailTrafficEnabledOk returns a tuple with the IsFailTrafficEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsFailTrafficEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFailTrafficEnabled) {
		return nil, false
	}
	return o.IsFailTrafficEnabled, true
}

// HasIsFailTrafficEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsFailTrafficEnabled() bool {
	if o != nil && !IsNil(o.IsFailTrafficEnabled) {
		return true
	}

	return false
}

// SetIsFailTrafficEnabled gets a reference to the given bool and assigns it to the IsFailTrafficEnabled field.
func (o *OfferResponse) SetIsFailTrafficEnabled(v bool) {
	o.IsFailTrafficEnabled = &v
}

// GetRedirectRoutingMethod returns the RedirectRoutingMethod field value if set, zero value otherwise.
func (o *OfferResponse) GetRedirectRoutingMethod() string {
	if o == nil || IsNil(o.RedirectRoutingMethod) {
		var ret string
		return ret
	}
	return *o.RedirectRoutingMethod
}

// GetRedirectRoutingMethodOk returns a tuple with the RedirectRoutingMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetRedirectRoutingMethodOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectRoutingMethod) {
		return nil, false
	}
	return o.RedirectRoutingMethod, true
}

// HasRedirectRoutingMethod returns a boolean if a field has been set.
func (o *OfferResponse) HasRedirectRoutingMethod() bool {
	if o != nil && !IsNil(o.RedirectRoutingMethod) {
		return true
	}

	return false
}

// SetRedirectRoutingMethod gets a reference to the given string and assigns it to the RedirectRoutingMethod field.
func (o *OfferResponse) SetRedirectRoutingMethod(v string) {
	o.RedirectRoutingMethod = &v
}

// GetRedirectInternalRoutingType returns the RedirectInternalRoutingType field value if set, zero value otherwise.
func (o *OfferResponse) GetRedirectInternalRoutingType() string {
	if o == nil || IsNil(o.RedirectInternalRoutingType) {
		var ret string
		return ret
	}
	return *o.RedirectInternalRoutingType
}

// GetRedirectInternalRoutingTypeOk returns a tuple with the RedirectInternalRoutingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetRedirectInternalRoutingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectInternalRoutingType) {
		return nil, false
	}
	return o.RedirectInternalRoutingType, true
}

// HasRedirectInternalRoutingType returns a boolean if a field has been set.
func (o *OfferResponse) HasRedirectInternalRoutingType() bool {
	if o != nil && !IsNil(o.RedirectInternalRoutingType) {
		return true
	}

	return false
}

// SetRedirectInternalRoutingType gets a reference to the given string and assigns it to the RedirectInternalRoutingType field.
func (o *OfferResponse) SetRedirectInternalRoutingType(v string) {
	o.RedirectInternalRoutingType = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *OfferResponse) GetVisibility() string {
	if o == nil || IsNil(o.Visibility) {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetVisibilityOk() (*string, bool) {
	if o == nil || IsNil(o.Visibility) {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *OfferResponse) HasVisibility() bool {
	if o != nil && !IsNil(o.Visibility) {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *OfferResponse) SetVisibility(v string) {
	o.Visibility = &v
}

// GetTimeCreated returns the TimeCreated field value if set, zero value otherwise.
func (o *OfferResponse) GetTimeCreated() int32 {
	if o == nil || IsNil(o.TimeCreated) {
		var ret int32
		return ret
	}
	return *o.TimeCreated
}

// GetTimeCreatedOk returns a tuple with the TimeCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetTimeCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeCreated) {
		return nil, false
	}
	return o.TimeCreated, true
}

// HasTimeCreated returns a boolean if a field has been set.
func (o *OfferResponse) HasTimeCreated() bool {
	if o != nil && !IsNil(o.TimeCreated) {
		return true
	}

	return false
}

// SetTimeCreated gets a reference to the given int32 and assigns it to the TimeCreated field.
func (o *OfferResponse) SetTimeCreated(v int32) {
	o.TimeCreated = &v
}

// GetTimeSaved returns the TimeSaved field value if set, zero value otherwise.
func (o *OfferResponse) GetTimeSaved() int32 {
	if o == nil || IsNil(o.TimeSaved) {
		var ret int32
		return ret
	}
	return *o.TimeSaved
}

// GetTimeSavedOk returns a tuple with the TimeSaved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetTimeSavedOk() (*int32, bool) {
	if o == nil || IsNil(o.TimeSaved) {
		return nil, false
	}
	return o.TimeSaved, true
}

// HasTimeSaved returns a boolean if a field has been set.
func (o *OfferResponse) HasTimeSaved() bool {
	if o != nil && !IsNil(o.TimeSaved) {
		return true
	}

	return false
}

// SetTimeSaved gets a reference to the given int32 and assigns it to the TimeSaved field.
func (o *OfferResponse) SetTimeSaved(v int32) {
	o.TimeSaved = &v
}

// GetConversionMethod returns the ConversionMethod field value if set, zero value otherwise.
func (o *OfferResponse) GetConversionMethod() string {
	if o == nil || IsNil(o.ConversionMethod) {
		var ret string
		return ret
	}
	return *o.ConversionMethod
}

// GetConversionMethodOk returns a tuple with the ConversionMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetConversionMethodOk() (*string, bool) {
	if o == nil || IsNil(o.ConversionMethod) {
		return nil, false
	}
	return o.ConversionMethod, true
}

// HasConversionMethod returns a boolean if a field has been set.
func (o *OfferResponse) HasConversionMethod() bool {
	if o != nil && !IsNil(o.ConversionMethod) {
		return true
	}

	return false
}

// SetConversionMethod gets a reference to the given string and assigns it to the ConversionMethod field.
func (o *OfferResponse) SetConversionMethod(v string) {
	o.ConversionMethod = &v
}

// GetIsWhitelistCheckEnabled returns the IsWhitelistCheckEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsWhitelistCheckEnabled() bool {
	if o == nil || IsNil(o.IsWhitelistCheckEnabled) {
		var ret bool
		return ret
	}
	return *o.IsWhitelistCheckEnabled
}

// GetIsWhitelistCheckEnabledOk returns a tuple with the IsWhitelistCheckEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsWhitelistCheckEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsWhitelistCheckEnabled) {
		return nil, false
	}
	return o.IsWhitelistCheckEnabled, true
}

// HasIsWhitelistCheckEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsWhitelistCheckEnabled() bool {
	if o != nil && !IsNil(o.IsWhitelistCheckEnabled) {
		return true
	}

	return false
}

// SetIsWhitelistCheckEnabled gets a reference to the given bool and assigns it to the IsWhitelistCheckEnabled field.
func (o *OfferResponse) SetIsWhitelistCheckEnabled(v bool) {
	o.IsWhitelistCheckEnabled = &v
}

// GetIsUseScrubRate returns the IsUseScrubRate field value if set, zero value otherwise.
func (o *OfferResponse) GetIsUseScrubRate() bool {
	if o == nil || IsNil(o.IsUseScrubRate) {
		var ret bool
		return ret
	}
	return *o.IsUseScrubRate
}

// GetIsUseScrubRateOk returns a tuple with the IsUseScrubRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsUseScrubRateOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseScrubRate) {
		return nil, false
	}
	return o.IsUseScrubRate, true
}

// HasIsUseScrubRate returns a boolean if a field has been set.
func (o *OfferResponse) HasIsUseScrubRate() bool {
	if o != nil && !IsNil(o.IsUseScrubRate) {
		return true
	}

	return false
}

// SetIsUseScrubRate gets a reference to the given bool and assigns it to the IsUseScrubRate field.
func (o *OfferResponse) SetIsUseScrubRate(v bool) {
	o.IsUseScrubRate = &v
}

// GetScrubRateStatus returns the ScrubRateStatus field value if set, zero value otherwise.
func (o *OfferResponse) GetScrubRateStatus() string {
	if o == nil || IsNil(o.ScrubRateStatus) {
		var ret string
		return ret
	}
	return *o.ScrubRateStatus
}

// GetScrubRateStatusOk returns a tuple with the ScrubRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetScrubRateStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ScrubRateStatus) {
		return nil, false
	}
	return o.ScrubRateStatus, true
}

// HasScrubRateStatus returns a boolean if a field has been set.
func (o *OfferResponse) HasScrubRateStatus() bool {
	if o != nil && !IsNil(o.ScrubRateStatus) {
		return true
	}

	return false
}

// SetScrubRateStatus gets a reference to the given string and assigns it to the ScrubRateStatus field.
func (o *OfferResponse) SetScrubRateStatus(v string) {
	o.ScrubRateStatus = &v
}

// GetScrubRatePercentage returns the ScrubRatePercentage field value if set, zero value otherwise.
func (o *OfferResponse) GetScrubRatePercentage() int32 {
	if o == nil || IsNil(o.ScrubRatePercentage) {
		var ret int32
		return ret
	}
	return *o.ScrubRatePercentage
}

// GetScrubRatePercentageOk returns a tuple with the ScrubRatePercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetScrubRatePercentageOk() (*int32, bool) {
	if o == nil || IsNil(o.ScrubRatePercentage) {
		return nil, false
	}
	return o.ScrubRatePercentage, true
}

// HasScrubRatePercentage returns a boolean if a field has been set.
func (o *OfferResponse) HasScrubRatePercentage() bool {
	if o != nil && !IsNil(o.ScrubRatePercentage) {
		return true
	}

	return false
}

// SetScrubRatePercentage gets a reference to the given int32 and assigns it to the ScrubRatePercentage field.
func (o *OfferResponse) SetScrubRatePercentage(v int32) {
	o.ScrubRatePercentage = &v
}

// GetSessionDefinition returns the SessionDefinition field value if set, zero value otherwise.
func (o *OfferResponse) GetSessionDefinition() string {
	if o == nil || IsNil(o.SessionDefinition) {
		var ret string
		return ret
	}
	return *o.SessionDefinition
}

// GetSessionDefinitionOk returns a tuple with the SessionDefinition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSessionDefinitionOk() (*string, bool) {
	if o == nil || IsNil(o.SessionDefinition) {
		return nil, false
	}
	return o.SessionDefinition, true
}

// HasSessionDefinition returns a boolean if a field has been set.
func (o *OfferResponse) HasSessionDefinition() bool {
	if o != nil && !IsNil(o.SessionDefinition) {
		return true
	}

	return false
}

// SetSessionDefinition gets a reference to the given string and assigns it to the SessionDefinition field.
func (o *OfferResponse) SetSessionDefinition(v string) {
	o.SessionDefinition = &v
}

// GetSessionDuration returns the SessionDuration field value if set, zero value otherwise.
func (o *OfferResponse) GetSessionDuration() int32 {
	if o == nil || IsNil(o.SessionDuration) {
		var ret int32
		return ret
	}
	return *o.SessionDuration
}

// GetSessionDurationOk returns a tuple with the SessionDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetSessionDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.SessionDuration) {
		return nil, false
	}
	return o.SessionDuration, true
}

// HasSessionDuration returns a boolean if a field has been set.
func (o *OfferResponse) HasSessionDuration() bool {
	if o != nil && !IsNil(o.SessionDuration) {
		return true
	}

	return false
}

// SetSessionDuration gets a reference to the given int32 and assigns it to the SessionDuration field.
func (o *OfferResponse) SetSessionDuration(v int32) {
	o.SessionDuration = &v
}

// GetAppIdentifier returns the AppIdentifier field value if set, zero value otherwise.
func (o *OfferResponse) GetAppIdentifier() string {
	if o == nil || IsNil(o.AppIdentifier) {
		var ret string
		return ret
	}
	return *o.AppIdentifier
}

// GetAppIdentifierOk returns a tuple with the AppIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetAppIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.AppIdentifier) {
		return nil, false
	}
	return o.AppIdentifier, true
}

// HasAppIdentifier returns a boolean if a field has been set.
func (o *OfferResponse) HasAppIdentifier() bool {
	if o != nil && !IsNil(o.AppIdentifier) {
		return true
	}

	return false
}

// SetAppIdentifier gets a reference to the given string and assigns it to the AppIdentifier field.
func (o *OfferResponse) SetAppIdentifier(v string) {
	o.AppIdentifier = &v
}

// GetIsDescriptionPlainText returns the IsDescriptionPlainText field value if set, zero value otherwise.
func (o *OfferResponse) GetIsDescriptionPlainText() bool {
	if o == nil || IsNil(o.IsDescriptionPlainText) {
		var ret bool
		return ret
	}
	return *o.IsDescriptionPlainText
}

// GetIsDescriptionPlainTextOk returns a tuple with the IsDescriptionPlainText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsDescriptionPlainTextOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDescriptionPlainText) {
		return nil, false
	}
	return o.IsDescriptionPlainText, true
}

// HasIsDescriptionPlainText returns a boolean if a field has been set.
func (o *OfferResponse) HasIsDescriptionPlainText() bool {
	if o != nil && !IsNil(o.IsDescriptionPlainText) {
		return true
	}

	return false
}

// SetIsDescriptionPlainText gets a reference to the given bool and assigns it to the IsDescriptionPlainText field.
func (o *OfferResponse) SetIsDescriptionPlainText(v bool) {
	o.IsDescriptionPlainText = &v
}

// GetIsUseDirectLinking returns the IsUseDirectLinking field value if set, zero value otherwise.
func (o *OfferResponse) GetIsUseDirectLinking() bool {
	if o == nil || IsNil(o.IsUseDirectLinking) {
		var ret bool
		return ret
	}
	return *o.IsUseDirectLinking
}

// GetIsUseDirectLinkingOk returns a tuple with the IsUseDirectLinking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsUseDirectLinkingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUseDirectLinking) {
		return nil, false
	}
	return o.IsUseDirectLinking, true
}

// HasIsUseDirectLinking returns a boolean if a field has been set.
func (o *OfferResponse) HasIsUseDirectLinking() bool {
	if o != nil && !IsNil(o.IsUseDirectLinking) {
		return true
	}

	return false
}

// SetIsUseDirectLinking gets a reference to the given bool and assigns it to the IsUseDirectLinking field.
func (o *OfferResponse) SetIsUseDirectLinking(v bool) {
	o.IsUseDirectLinking = &v
}

// GetIsEmailAttributionEnabled returns the IsEmailAttributionEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsEmailAttributionEnabled() bool {
	if o == nil || IsNil(o.IsEmailAttributionEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEmailAttributionEnabled
}

// GetIsEmailAttributionEnabledOk returns a tuple with the IsEmailAttributionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsEmailAttributionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEmailAttributionEnabled) {
		return nil, false
	}
	return o.IsEmailAttributionEnabled, true
}

// HasIsEmailAttributionEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsEmailAttributionEnabled() bool {
	if o != nil && !IsNil(o.IsEmailAttributionEnabled) {
		return true
	}

	return false
}

// SetIsEmailAttributionEnabled gets a reference to the given bool and assigns it to the IsEmailAttributionEnabled field.
func (o *OfferResponse) SetIsEmailAttributionEnabled(v bool) {
	o.IsEmailAttributionEnabled = &v
}

// GetIsEmailAttributionWindowEnabled returns the IsEmailAttributionWindowEnabled field value if set, zero value otherwise.
func (o *OfferResponse) GetIsEmailAttributionWindowEnabled() bool {
	if o == nil || IsNil(o.IsEmailAttributionWindowEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEmailAttributionWindowEnabled
}

// GetIsEmailAttributionWindowEnabledOk returns a tuple with the IsEmailAttributionWindowEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetIsEmailAttributionWindowEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEmailAttributionWindowEnabled) {
		return nil, false
	}
	return o.IsEmailAttributionWindowEnabled, true
}

// HasIsEmailAttributionWindowEnabled returns a boolean if a field has been set.
func (o *OfferResponse) HasIsEmailAttributionWindowEnabled() bool {
	if o != nil && !IsNil(o.IsEmailAttributionWindowEnabled) {
		return true
	}

	return false
}

// SetIsEmailAttributionWindowEnabled gets a reference to the given bool and assigns it to the IsEmailAttributionWindowEnabled field.
func (o *OfferResponse) SetIsEmailAttributionWindowEnabled(v bool) {
	o.IsEmailAttributionWindowEnabled = &v
}

// GetEmailAttributionWindowMinute returns the EmailAttributionWindowMinute field value if set, zero value otherwise.
func (o *OfferResponse) GetEmailAttributionWindowMinute() int32 {
	if o == nil || IsNil(o.EmailAttributionWindowMinute) {
		var ret int32
		return ret
	}
	return *o.EmailAttributionWindowMinute
}

// GetEmailAttributionWindowMinuteOk returns a tuple with the EmailAttributionWindowMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetEmailAttributionWindowMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.EmailAttributionWindowMinute) {
		return nil, false
	}
	return o.EmailAttributionWindowMinute, true
}

// HasEmailAttributionWindowMinute returns a boolean if a field has been set.
func (o *OfferResponse) HasEmailAttributionWindowMinute() bool {
	if o != nil && !IsNil(o.EmailAttributionWindowMinute) {
		return true
	}

	return false
}

// SetEmailAttributionWindowMinute gets a reference to the given int32 and assigns it to the EmailAttributionWindowMinute field.
func (o *OfferResponse) SetEmailAttributionWindowMinute(v int32) {
	o.EmailAttributionWindowMinute = &v
}

// GetEmailAttributionWindowType returns the EmailAttributionWindowType field value if set, zero value otherwise.
func (o *OfferResponse) GetEmailAttributionWindowType() string {
	if o == nil || IsNil(o.EmailAttributionWindowType) {
		var ret string
		return ret
	}
	return *o.EmailAttributionWindowType
}

// GetEmailAttributionWindowTypeOk returns a tuple with the EmailAttributionWindowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetEmailAttributionWindowTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAttributionWindowType) {
		return nil, false
	}
	return o.EmailAttributionWindowType, true
}

// HasEmailAttributionWindowType returns a boolean if a field has been set.
func (o *OfferResponse) HasEmailAttributionWindowType() bool {
	if o != nil && !IsNil(o.EmailAttributionWindowType) {
		return true
	}

	return false
}

// SetEmailAttributionWindowType gets a reference to the given string and assigns it to the EmailAttributionWindowType field.
func (o *OfferResponse) SetEmailAttributionWindowType(v string) {
	o.EmailAttributionWindowType = &v
}

// GetRelationship returns the Relationship field value if set, zero value otherwise.
func (o *OfferResponse) GetRelationship() map[string]interface{} {
	if o == nil || IsNil(o.Relationship) {
		var ret map[string]interface{}
		return ret
	}
	return o.Relationship
}

// GetRelationshipOk returns a tuple with the Relationship field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferResponse) GetRelationshipOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Relationship) {
		return map[string]interface{}{}, false
	}
	return o.Relationship, true
}

// HasRelationship returns a boolean if a field has been set.
func (o *OfferResponse) HasRelationship() bool {
	if o != nil && !IsNil(o.Relationship) {
		return true
	}

	return false
}

// SetRelationship gets a reference to the given map[string]interface{} and assigns it to the Relationship field.
func (o *OfferResponse) SetRelationship(v map[string]interface{}) {
	o.Relationship = v
}

func (o OfferResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkOfferId) {
		toSerialize["network_offer_id"] = o.NetworkOfferId
	}
	if !IsNil(o.NetworkId) {
		toSerialize["network_id"] = o.NetworkId
	}
	if !IsNil(o.NetworkAdvertiserId) {
		toSerialize["network_advertiser_id"] = o.NetworkAdvertiserId
	}
	if !IsNil(o.NetworkOfferGroupId) {
		toSerialize["network_offer_group_id"] = o.NetworkOfferGroupId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ThumbnailUrl) {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl
	}
	if !IsNil(o.NetworkCategoryId) {
		toSerialize["network_category_id"] = o.NetworkCategoryId
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internal_notes"] = o.InternalNotes
	}
	if !IsNil(o.DestinationUrl) {
		toSerialize["destination_url"] = o.DestinationUrl
	}
	if !IsNil(o.ServerSideUrl) {
		toSerialize["server_side_url"] = o.ServerSideUrl
	}
	if !IsNil(o.IsViewThroughEnabled) {
		toSerialize["is_view_through_enabled"] = o.IsViewThroughEnabled
	}
	if !IsNil(o.ViewThroughDestinationUrl) {
		toSerialize["view_through_destination_url"] = o.ViewThroughDestinationUrl
	}
	if !IsNil(o.PreviewUrl) {
		toSerialize["preview_url"] = o.PreviewUrl
	}
	if !IsNil(o.OfferStatus) {
		toSerialize["offer_status"] = o.OfferStatus
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if !IsNil(o.CapsTimezoneId) {
		toSerialize["caps_timezone_id"] = o.CapsTimezoneId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.DateLiveUntil) {
		toSerialize["date_live_until"] = o.DateLiveUntil
	}
	if !IsNil(o.HtmlDescription) {
		toSerialize["html_description"] = o.HtmlDescription
	}
	if !IsNil(o.IsUsingExplicitTermsAndConditions) {
		toSerialize["is_using_explicit_terms_and_conditions"] = o.IsUsingExplicitTermsAndConditions
	}
	if !IsNil(o.TermsAndConditions) {
		toSerialize["terms_and_conditions"] = o.TermsAndConditions
	}
	if !IsNil(o.IsForceTermsAndConditions) {
		toSerialize["is_force_terms_and_conditions"] = o.IsForceTermsAndConditions
	}
	if !IsNil(o.IsCapsEnabled) {
		toSerialize["is_caps_enabled"] = o.IsCapsEnabled
	}
	if !IsNil(o.DailyConversionCap) {
		toSerialize["daily_conversion_cap"] = o.DailyConversionCap
	}
	if !IsNil(o.WeeklyConversionCap) {
		toSerialize["weekly_conversion_cap"] = o.WeeklyConversionCap
	}
	if !IsNil(o.MonthlyConversionCap) {
		toSerialize["monthly_conversion_cap"] = o.MonthlyConversionCap
	}
	if !IsNil(o.GlobalConversionCap) {
		toSerialize["global_conversion_cap"] = o.GlobalConversionCap
	}
	if !IsNil(o.DailyPayoutCap) {
		toSerialize["daily_payout_cap"] = o.DailyPayoutCap
	}
	if !IsNil(o.WeeklyPayoutCap) {
		toSerialize["weekly_payout_cap"] = o.WeeklyPayoutCap
	}
	if !IsNil(o.MonthlyPayoutCap) {
		toSerialize["monthly_payout_cap"] = o.MonthlyPayoutCap
	}
	if !IsNil(o.GlobalPayoutCap) {
		toSerialize["global_payout_cap"] = o.GlobalPayoutCap
	}
	if !IsNil(o.DailyRevenueCap) {
		toSerialize["daily_revenue_cap"] = o.DailyRevenueCap
	}
	if !IsNil(o.WeeklyRevenueCap) {
		toSerialize["weekly_revenue_cap"] = o.WeeklyRevenueCap
	}
	if !IsNil(o.MonthlyRevenueCap) {
		toSerialize["monthly_revenue_cap"] = o.MonthlyRevenueCap
	}
	if !IsNil(o.GlobalRevenueCap) {
		toSerialize["global_revenue_cap"] = o.GlobalRevenueCap
	}
	if !IsNil(o.DailyClickCap) {
		toSerialize["daily_click_cap"] = o.DailyClickCap
	}
	if !IsNil(o.WeeklyClickCap) {
		toSerialize["weekly_click_cap"] = o.WeeklyClickCap
	}
	if !IsNil(o.MonthlyClickCap) {
		toSerialize["monthly_click_cap"] = o.MonthlyClickCap
	}
	if !IsNil(o.GlobalClickCap) {
		toSerialize["global_click_cap"] = o.GlobalClickCap
	}
	if !IsNil(o.RedirectMode) {
		toSerialize["redirect_mode"] = o.RedirectMode
	}
	if !IsNil(o.IsUsingSuppressionList) {
		toSerialize["is_using_suppression_list"] = o.IsUsingSuppressionList
	}
	if !IsNil(o.SuppressionListId) {
		toSerialize["suppression_list_id"] = o.SuppressionListId
	}
	if !IsNil(o.IsMustApproveConversion) {
		toSerialize["is_must_approve_conversion"] = o.IsMustApproveConversion
	}
	if !IsNil(o.IsAllowDuplicateConversion) {
		toSerialize["is_allow_duplicate_conversion"] = o.IsAllowDuplicateConversion
	}
	if !IsNil(o.IsDuplicateFilterEnabled) {
		toSerialize["is_duplicate_filter_enabled"] = o.IsDuplicateFilterEnabled
	}
	if !IsNil(o.DuplicateFilterTargetingAction) {
		toSerialize["duplicate_filter_targeting_action"] = o.DuplicateFilterTargetingAction
	}
	if !IsNil(o.NetworkTrackingDomainId) {
		toSerialize["network_tracking_domain_id"] = o.NetworkTrackingDomainId
	}
	if !IsNil(o.IsUseSecureLink) {
		toSerialize["is_use_secure_link"] = o.IsUseSecureLink
	}
	if !IsNil(o.IsSeoFriendly) {
		toSerialize["is_seo_friendly"] = o.IsSeoFriendly
	}
	if !IsNil(o.IsAllowDeepLink) {
		toSerialize["is_allow_deep_link"] = o.IsAllowDeepLink
	}
	if !IsNil(o.IsSessionTrackingEnabled) {
		toSerialize["is_session_tracking_enabled"] = o.IsSessionTrackingEnabled
	}
	if !IsNil(o.SessionTrackingStartOn) {
		toSerialize["session_tracking_start_on"] = o.SessionTrackingStartOn
	}
	if !IsNil(o.SessionTrackingLifespanHour) {
		toSerialize["session_tracking_lifespan_hour"] = o.SessionTrackingLifespanHour
	}
	if !IsNil(o.SessionTrackingMinimumLifespanSecond) {
		toSerialize["session_tracking_minimum_lifespan_second"] = o.SessionTrackingMinimumLifespanSecond
	}
	if !IsNil(o.IsViewThroughSessionTrackingEnabled) {
		toSerialize["is_view_through_session_tracking_enabled"] = o.IsViewThroughSessionTrackingEnabled
	}
	if !IsNil(o.ViewThroughSessionTrackingLifespanMinute) {
		toSerialize["view_through_session_tracking_lifespan_minute"] = o.ViewThroughSessionTrackingLifespanMinute
	}
	if !IsNil(o.ViewThroughSessionTrackingMinimalLifespanSecond) {
		toSerialize["view_through_session_tracking_minimal_lifespan_second"] = o.ViewThroughSessionTrackingMinimalLifespanSecond
	}
	if !IsNil(o.IsBlockAlreadyConverted) {
		toSerialize["is_block_already_converted"] = o.IsBlockAlreadyConverted
	}
	if !IsNil(o.AlreadyConvertedAction) {
		toSerialize["already_converted_action"] = o.AlreadyConvertedAction
	}
	if !IsNil(o.IsFailTrafficEnabled) {
		toSerialize["is_fail_traffic_enabled"] = o.IsFailTrafficEnabled
	}
	if !IsNil(o.RedirectRoutingMethod) {
		toSerialize["redirect_routing_method"] = o.RedirectRoutingMethod
	}
	if !IsNil(o.RedirectInternalRoutingType) {
		toSerialize["redirect_internal_routing_type"] = o.RedirectInternalRoutingType
	}
	if !IsNil(o.Visibility) {
		toSerialize["visibility"] = o.Visibility
	}
	if !IsNil(o.TimeCreated) {
		toSerialize["time_created"] = o.TimeCreated
	}
	if !IsNil(o.TimeSaved) {
		toSerialize["time_saved"] = o.TimeSaved
	}
	if !IsNil(o.ConversionMethod) {
		toSerialize["conversion_method"] = o.ConversionMethod
	}
	if !IsNil(o.IsWhitelistCheckEnabled) {
		toSerialize["is_whitelist_check_enabled"] = o.IsWhitelistCheckEnabled
	}
	if !IsNil(o.IsUseScrubRate) {
		toSerialize["is_use_scrub_rate"] = o.IsUseScrubRate
	}
	if !IsNil(o.ScrubRateStatus) {
		toSerialize["scrub_rate_status"] = o.ScrubRateStatus
	}
	if !IsNil(o.ScrubRatePercentage) {
		toSerialize["scrub_rate_percentage"] = o.ScrubRatePercentage
	}
	if !IsNil(o.SessionDefinition) {
		toSerialize["session_definition"] = o.SessionDefinition
	}
	if !IsNil(o.SessionDuration) {
		toSerialize["session_duration"] = o.SessionDuration
	}
	if !IsNil(o.AppIdentifier) {
		toSerialize["app_identifier"] = o.AppIdentifier
	}
	if !IsNil(o.IsDescriptionPlainText) {
		toSerialize["is_description_plain_text"] = o.IsDescriptionPlainText
	}
	if !IsNil(o.IsUseDirectLinking) {
		toSerialize["is_use_direct_linking"] = o.IsUseDirectLinking
	}
	if !IsNil(o.IsEmailAttributionEnabled) {
		toSerialize["is_email_attribution_enabled"] = o.IsEmailAttributionEnabled
	}
	if !IsNil(o.IsEmailAttributionWindowEnabled) {
		toSerialize["is_email_attribution_window_enabled"] = o.IsEmailAttributionWindowEnabled
	}
	if !IsNil(o.EmailAttributionWindowMinute) {
		toSerialize["email_attribution_window_minute"] = o.EmailAttributionWindowMinute
	}
	if !IsNil(o.EmailAttributionWindowType) {
		toSerialize["email_attribution_window_type"] = o.EmailAttributionWindowType
	}
	if !IsNil(o.Relationship) {
		toSerialize["relationship"] = o.Relationship
	}
	return toSerialize, nil
}

type NullableOfferResponse struct {
	value *OfferResponse
	isSet bool
}

func (v NullableOfferResponse) Get() *OfferResponse {
	return v.value
}

func (v *NullableOfferResponse) Set(val *OfferResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferResponse(val *OfferResponse) *NullableOfferResponse {
	return &NullableOfferResponse{value: val, isSet: true}
}

func (v NullableOfferResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
