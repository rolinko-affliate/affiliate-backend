/*
Everflow Affiliates API

API for managing affiliates in the Everflow platform

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package affiliate

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AffiliateUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AffiliateUser{}

// AffiliateUser struct for AffiliateUser
type AffiliateUser struct {
	// The affiliate user's first name
	FirstName string `json:"first_name"`
	// The affiliate user's last name
	LastName string `json:"last_name"`
	// The affiliate user's email (must be unique)
	Email string `json:"email"`
	// The affiliate user's account status
	AccountStatus string `json:"account_status"`
	// The affiliate user's title
	Title *string `json:"title,omitempty"`
	// The affiliate user's work phone number
	WorkPhone *string `json:"work_phone,omitempty"`
	// The affiliate user's cell phone number
	CellPhone *string `json:"cell_phone,omitempty"`
	// The id of an instant messaging platform
	InstantMessagingId *int32 `json:"instant_messaging_id,omitempty"`
	// The affiliate user's instant messaging identifier
	InstantMessagingIdentifier *string `json:"instant_messaging_identifier,omitempty"`
	// The affiliate user's language id (1 = English)
	LanguageId *int32 `json:"language_id,omitempty"`
	// The affiliate user's timezone id
	TimezoneId *int32 `json:"timezone_id,omitempty"`
	// The affiliate user's currency id
	CurrencyId *string `json:"currency_id,omitempty"`
	// The affiliate user's login password (min 8 chars, 1 non-alphanumeric, 1 uppercase, 1 lowercase)
	InitialPassword *string `json:"initial_password,omitempty"`
}

type _AffiliateUser AffiliateUser

// NewAffiliateUser instantiates a new AffiliateUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAffiliateUser(firstName string, lastName string, email string, accountStatus string) *AffiliateUser {
	this := AffiliateUser{}
	this.FirstName = firstName
	this.LastName = lastName
	this.Email = email
	this.AccountStatus = accountStatus
	return &this
}

// NewAffiliateUserWithDefaults instantiates a new AffiliateUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAffiliateUserWithDefaults() *AffiliateUser {
	this := AffiliateUser{}
	return &this
}

// GetFirstName returns the FirstName field value
func (o *AffiliateUser) GetFirstName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetFirstNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirstName, true
}

// SetFirstName sets field value
func (o *AffiliateUser) SetFirstName(v string) {
	o.FirstName = v
}

// GetLastName returns the LastName field value
func (o *AffiliateUser) GetLastName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetLastNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastName, true
}

// SetLastName sets field value
func (o *AffiliateUser) SetLastName(v string) {
	o.LastName = v
}

// GetEmail returns the Email field value
func (o *AffiliateUser) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AffiliateUser) SetEmail(v string) {
	o.Email = v
}

// GetAccountStatus returns the AccountStatus field value
func (o *AffiliateUser) GetAccountStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountStatus
}

// GetAccountStatusOk returns a tuple with the AccountStatus field value
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetAccountStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountStatus, true
}

// SetAccountStatus sets field value
func (o *AffiliateUser) SetAccountStatus(v string) {
	o.AccountStatus = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *AffiliateUser) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *AffiliateUser) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *AffiliateUser) SetTitle(v string) {
	o.Title = &v
}

// GetWorkPhone returns the WorkPhone field value if set, zero value otherwise.
func (o *AffiliateUser) GetWorkPhone() string {
	if o == nil || IsNil(o.WorkPhone) {
		var ret string
		return ret
	}
	return *o.WorkPhone
}

// GetWorkPhoneOk returns a tuple with the WorkPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetWorkPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.WorkPhone) {
		return nil, false
	}
	return o.WorkPhone, true
}

// HasWorkPhone returns a boolean if a field has been set.
func (o *AffiliateUser) HasWorkPhone() bool {
	if o != nil && !IsNil(o.WorkPhone) {
		return true
	}

	return false
}

// SetWorkPhone gets a reference to the given string and assigns it to the WorkPhone field.
func (o *AffiliateUser) SetWorkPhone(v string) {
	o.WorkPhone = &v
}

// GetCellPhone returns the CellPhone field value if set, zero value otherwise.
func (o *AffiliateUser) GetCellPhone() string {
	if o == nil || IsNil(o.CellPhone) {
		var ret string
		return ret
	}
	return *o.CellPhone
}

// GetCellPhoneOk returns a tuple with the CellPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetCellPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.CellPhone) {
		return nil, false
	}
	return o.CellPhone, true
}

// HasCellPhone returns a boolean if a field has been set.
func (o *AffiliateUser) HasCellPhone() bool {
	if o != nil && !IsNil(o.CellPhone) {
		return true
	}

	return false
}

// SetCellPhone gets a reference to the given string and assigns it to the CellPhone field.
func (o *AffiliateUser) SetCellPhone(v string) {
	o.CellPhone = &v
}

// GetInstantMessagingId returns the InstantMessagingId field value if set, zero value otherwise.
func (o *AffiliateUser) GetInstantMessagingId() int32 {
	if o == nil || IsNil(o.InstantMessagingId) {
		var ret int32
		return ret
	}
	return *o.InstantMessagingId
}

// GetInstantMessagingIdOk returns a tuple with the InstantMessagingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetInstantMessagingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InstantMessagingId) {
		return nil, false
	}
	return o.InstantMessagingId, true
}

// HasInstantMessagingId returns a boolean if a field has been set.
func (o *AffiliateUser) HasInstantMessagingId() bool {
	if o != nil && !IsNil(o.InstantMessagingId) {
		return true
	}

	return false
}

// SetInstantMessagingId gets a reference to the given int32 and assigns it to the InstantMessagingId field.
func (o *AffiliateUser) SetInstantMessagingId(v int32) {
	o.InstantMessagingId = &v
}

// GetInstantMessagingIdentifier returns the InstantMessagingIdentifier field value if set, zero value otherwise.
func (o *AffiliateUser) GetInstantMessagingIdentifier() string {
	if o == nil || IsNil(o.InstantMessagingIdentifier) {
		var ret string
		return ret
	}
	return *o.InstantMessagingIdentifier
}

// GetInstantMessagingIdentifierOk returns a tuple with the InstantMessagingIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetInstantMessagingIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.InstantMessagingIdentifier) {
		return nil, false
	}
	return o.InstantMessagingIdentifier, true
}

// HasInstantMessagingIdentifier returns a boolean if a field has been set.
func (o *AffiliateUser) HasInstantMessagingIdentifier() bool {
	if o != nil && !IsNil(o.InstantMessagingIdentifier) {
		return true
	}

	return false
}

// SetInstantMessagingIdentifier gets a reference to the given string and assigns it to the InstantMessagingIdentifier field.
func (o *AffiliateUser) SetInstantMessagingIdentifier(v string) {
	o.InstantMessagingIdentifier = &v
}

// GetLanguageId returns the LanguageId field value if set, zero value otherwise.
func (o *AffiliateUser) GetLanguageId() int32 {
	if o == nil || IsNil(o.LanguageId) {
		var ret int32
		return ret
	}
	return *o.LanguageId
}

// GetLanguageIdOk returns a tuple with the LanguageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetLanguageIdOk() (*int32, bool) {
	if o == nil || IsNil(o.LanguageId) {
		return nil, false
	}
	return o.LanguageId, true
}

// HasLanguageId returns a boolean if a field has been set.
func (o *AffiliateUser) HasLanguageId() bool {
	if o != nil && !IsNil(o.LanguageId) {
		return true
	}

	return false
}

// SetLanguageId gets a reference to the given int32 and assigns it to the LanguageId field.
func (o *AffiliateUser) SetLanguageId(v int32) {
	o.LanguageId = &v
}

// GetTimezoneId returns the TimezoneId field value if set, zero value otherwise.
func (o *AffiliateUser) GetTimezoneId() int32 {
	if o == nil || IsNil(o.TimezoneId) {
		var ret int32
		return ret
	}
	return *o.TimezoneId
}

// GetTimezoneIdOk returns a tuple with the TimezoneId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetTimezoneIdOk() (*int32, bool) {
	if o == nil || IsNil(o.TimezoneId) {
		return nil, false
	}
	return o.TimezoneId, true
}

// HasTimezoneId returns a boolean if a field has been set.
func (o *AffiliateUser) HasTimezoneId() bool {
	if o != nil && !IsNil(o.TimezoneId) {
		return true
	}

	return false
}

// SetTimezoneId gets a reference to the given int32 and assigns it to the TimezoneId field.
func (o *AffiliateUser) SetTimezoneId(v int32) {
	o.TimezoneId = &v
}

// GetCurrencyId returns the CurrencyId field value if set, zero value otherwise.
func (o *AffiliateUser) GetCurrencyId() string {
	if o == nil || IsNil(o.CurrencyId) {
		var ret string
		return ret
	}
	return *o.CurrencyId
}

// GetCurrencyIdOk returns a tuple with the CurrencyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetCurrencyIdOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyId) {
		return nil, false
	}
	return o.CurrencyId, true
}

// HasCurrencyId returns a boolean if a field has been set.
func (o *AffiliateUser) HasCurrencyId() bool {
	if o != nil && !IsNil(o.CurrencyId) {
		return true
	}

	return false
}

// SetCurrencyId gets a reference to the given string and assigns it to the CurrencyId field.
func (o *AffiliateUser) SetCurrencyId(v string) {
	o.CurrencyId = &v
}

// GetInitialPassword returns the InitialPassword field value if set, zero value otherwise.
func (o *AffiliateUser) GetInitialPassword() string {
	if o == nil || IsNil(o.InitialPassword) {
		var ret string
		return ret
	}
	return *o.InitialPassword
}

// GetInitialPasswordOk returns a tuple with the InitialPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AffiliateUser) GetInitialPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.InitialPassword) {
		return nil, false
	}
	return o.InitialPassword, true
}

// HasInitialPassword returns a boolean if a field has been set.
func (o *AffiliateUser) HasInitialPassword() bool {
	if o != nil && !IsNil(o.InitialPassword) {
		return true
	}

	return false
}

// SetInitialPassword gets a reference to the given string and assigns it to the InitialPassword field.
func (o *AffiliateUser) SetInitialPassword(v string) {
	o.InitialPassword = &v
}

func (o AffiliateUser) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AffiliateUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["first_name"] = o.FirstName
	toSerialize["last_name"] = o.LastName
	toSerialize["email"] = o.Email
	toSerialize["account_status"] = o.AccountStatus
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.WorkPhone) {
		toSerialize["work_phone"] = o.WorkPhone
	}
	if !IsNil(o.CellPhone) {
		toSerialize["cell_phone"] = o.CellPhone
	}
	if !IsNil(o.InstantMessagingId) {
		toSerialize["instant_messaging_id"] = o.InstantMessagingId
	}
	if !IsNil(o.InstantMessagingIdentifier) {
		toSerialize["instant_messaging_identifier"] = o.InstantMessagingIdentifier
	}
	if !IsNil(o.LanguageId) {
		toSerialize["language_id"] = o.LanguageId
	}
	if !IsNil(o.TimezoneId) {
		toSerialize["timezone_id"] = o.TimezoneId
	}
	if !IsNil(o.CurrencyId) {
		toSerialize["currency_id"] = o.CurrencyId
	}
	if !IsNil(o.InitialPassword) {
		toSerialize["initial_password"] = o.InitialPassword
	}
	return toSerialize, nil
}

func (o *AffiliateUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"first_name",
		"last_name",
		"email",
		"account_status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAffiliateUser := _AffiliateUser{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAffiliateUser)

	if err != nil {
		return err
	}

	*o = AffiliateUser(varAffiliateUser)

	return err
}

type NullableAffiliateUser struct {
	value *AffiliateUser
	isSet bool
}

func (v NullableAffiliateUser) Get() *AffiliateUser {
	return v.value
}

func (v *NullableAffiliateUser) Set(val *AffiliateUser) {
	v.value = val
	v.isSet = true
}

func (v NullableAffiliateUser) IsSet() bool {
	return v.isSet
}

func (v *NullableAffiliateUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAffiliateUser(val *AffiliateUser) *NullableAffiliateUser {
	return &NullableAffiliateUser{value: val, isSet: true}
}

func (v NullableAffiliateUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAffiliateUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
