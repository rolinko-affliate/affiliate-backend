basePath: /api/v1
definitions:
  domain.Advertiser:
    properties:
      accounting_contact_email:
        type: string
      advertiser_id:
        type: integer
      affiliate_id_macro:
        type: string
      attribution_method:
        type: string
      attribution_priority:
        type: string
      billing_details:
        allOf:
        - $ref: '#/definitions/domain.BillingDetails'
        description: JSONB
      contact_email:
        type: string
      created_at:
        type: string
      default_currency_id:
        type: string
      email_attribution_method:
        type: string
      internal_notes:
        description: General purpose fields (provider-agnostic)
        type: string
      name:
        type: string
      offer_id_macro:
        type: string
      organization_id:
        type: integer
      platform_name:
        type: string
      platform_url:
        type: string
      platform_username:
        type: string
      reporting_timezone_id:
        type: integer
      status:
        description: '''active'', ''pending'', ''inactive'', ''rejected'''
        type: string
      updated_at:
        type: string
    type: object
  domain.AdvertiserProviderMapping:
    properties:
      advertiser_id:
        type: integer
      created_at:
        type: string
      last_sync_at:
        type: string
      mapping_id:
        type: integer
      provider_advertiser_id:
        description: e.g., Everflow's network_advertiser_id
        type: string
      provider_config:
        description: JSONB stored as string
        type: string
      provider_data:
        description: Provider-specific data (stored as JSONB) - contains all Everflow-specific
          fields
        type: string
      provider_type:
        description: '''everflow'' for MVP'
        type: string
      sync_error:
        type: string
      sync_status:
        description: Synchronization metadata
        type: string
      updated_at:
        type: string
    type: object
  domain.Affiliate:
    properties:
      affiliate_id:
        type: integer
      billing_info:
        description: JSONB stored as string
        type: string
      contact_address:
        description: JSONB stored as string
        type: string
      contact_email:
        type: string
      created_at:
        type: string
      default_currency_id:
        type: string
      default_payment_terms:
        type: integer
      internal_notes:
        description: General purpose fields moved from EverflowProviderData
        type: string
      invoice_amount_threshold:
        type: number
      labels:
        description: JSONB stored as string (array of strings)
        type: string
      name:
        type: string
      organization_id:
        type: integer
      payment_details:
        description: JSONB stored as string
        type: string
      status:
        description: '''active'', ''pending'', ''rejected'', ''inactive'''
        type: string
      updated_at:
        type: string
    type: object
  domain.AffiliateNetworkData:
    properties:
      count:
        type: integer
      sampleValue:
        items:
          type: string
        type: array
      value:
        items:
          type: string
        type: array
    type: object
  domain.AffiliateProviderMapping:
    properties:
      affiliate_id:
        type: integer
      api_credentials:
        description: JSONB stored as string for API keys/tokens
        type: string
      created_at:
        type: string
      last_sync_at:
        type: string
      mapping_id:
        type: integer
      provider_affiliate_id:
        description: e.g., Everflow's network_affiliate_id
        type: string
      provider_config:
        description: JSONB stored as string
        type: string
      provider_data:
        description: Provider-specific data (stored as JSONB) - contains all Everflow-specific
          fields
        type: string
      provider_type:
        description: '''everflow'' for MVP'
        type: string
      sync_error:
        type: string
      sync_status:
        description: Synchronization metadata
        type: string
      updated_at:
        type: string
    type: object
  domain.AnalyticsAdvertiser:
    properties:
      created_at:
        type: string
      description:
        type: string
      domain:
        type: string
      favicon_image_url:
        type: string
      id:
        type: integer
      screenshot_image_url:
        type: string
      updated_at:
        type: string
    type: object
  domain.AnalyticsAdvertiserResponse:
    properties:
      advertiser:
        properties:
          affiliateNetworks:
            $ref: '#/definitions/domain.AffiliateNetworkData'
          backlinks: {}
          contactEmails:
            $ref: '#/definitions/domain.ContactEmailData'
          domain:
            type: string
          keywords:
            $ref: '#/definitions/domain.KeywordData'
          metaData:
            $ref: '#/definitions/domain.MetaData'
          partnerInformation: {}
          relatedAdvertisers: {}
          socialMedia:
            $ref: '#/definitions/domain.SocialMediaData'
          verticals:
            $ref: '#/definitions/domain.VerticalData'
        type: object
    type: object
  domain.AnalyticsPublisher:
    properties:
      created_at:
        type: string
      description:
        type: string
      domain:
        type: string
      favicon_image_url:
        type: string
      id:
        type: integer
      known:
        type: boolean
      promotype:
        type: string
      relevance:
        type: number
      screenshot_image_url:
        type: string
      traffic_score:
        type: number
      updated_at:
        type: string
    type: object
  domain.AnalyticsPublisherResponse:
    properties:
      publisher:
        properties:
          affiliateNetworks:
            $ref: '#/definitions/domain.AffiliateNetworkData'
          countryRankings:
            $ref: '#/definitions/domain.CountryRankingData'
          domain:
            type: string
          keywords:
            $ref: '#/definitions/domain.KeywordData'
          known:
            properties:
              value:
                type: boolean
            type: object
          liveUrls: {}
          metaData:
            $ref: '#/definitions/domain.MetaData'
          partnerInformation: {}
          partners: {}
          promotype:
            properties:
              value:
                type: string
            type: object
          relatedPublishers: {}
          relevance:
            type: number
          socialMedia:
            $ref: '#/definitions/domain.SocialMediaData'
          trafficScore:
            type: number
          verticals: {}
          verticalsV2:
            $ref: '#/definitions/domain.VerticalData'
        type: object
    type: object
  domain.AutocompleteResult:
    properties:
      domain:
        type: string
      id:
        type: integer
      name:
        description: Display name (domain for now)
        type: string
      type:
        description: '"advertiser" or "publisher"'
        type: string
    type: object
  domain.BillingAddress:
    properties:
      city:
        type: string
      company_name:
        type: string
      country:
        type: string
      line1:
        type: string
      line2:
        type: string
      postal_code:
        type: string
      state:
        type: string
    type: object
  domain.BillingDetails:
    properties:
      additional_details:
        additionalProperties: true
        type: object
      address:
        $ref: '#/definitions/domain.BillingAddress'
      auto_invoice_start_date:
        description: 'Format: "2019-06-01 00:00:00"'
        type: string
      default_invoice_is_hidden:
        type: boolean
      default_payment_terms:
        type: integer
      frequency:
        $ref: '#/definitions/domain.BillingFrequency'
      invoice_amount_threshold:
        type: number
      invoice_generation_days_delay:
        type: integer
      is_invoice_creation_auto:
        type: boolean
      payment_details:
        $ref: '#/definitions/domain.PaymentDetails'
      payment_type:
        $ref: '#/definitions/domain.PaymentType'
      schedule:
        $ref: '#/definitions/domain.BillingSchedule'
      tax_id:
        type: string
    type: object
  domain.BillingFrequency:
    enum:
    - weekly
    - bimonthly
    - monthly
    - two_months
    - quarterly
    - manual
    - other
    type: string
    x-enum-varnames:
    - BillingFrequencyWeekly
    - BillingFrequencyBimonthly
    - BillingFrequencyMonthly
    - BillingFrequencyTwoMonths
    - BillingFrequencyQuarterly
    - BillingFrequencyManual
    - BillingFrequencyOther
  domain.BillingSchedule:
    properties:
      day_of_month:
        description: For monthly billing
        type: integer
      day_of_month_one:
        description: For bimonthly
        type: integer
      day_of_month_two:
        description: For bimonthly
        type: integer
      day_of_week:
        description: For weekly billing
        type: integer
      starting_month:
        description: For quarterly/yearly billing
        type: integer
    type: object
  domain.ContactEmailData:
    properties:
      count:
        type: integer
      error:
        type: boolean
      value:
        items:
          properties:
            department:
              type: string
            value:
              type: string
          type: object
        type: array
    type: object
  domain.CountryRankingData:
    properties:
      count:
        type: integer
      highestValue:
        properties:
          countryCode:
            type: string
          score:
            type: number
        type: object
      sampleValue:
        items:
          properties:
            countryCode:
              type: string
            score:
              type: number
          type: object
        type: array
      value:
        items:
          properties:
            countryCode:
              type: string
            score:
              type: number
          type: object
        type: array
    type: object
  domain.KeywordData:
    properties:
      count:
        type: integer
      sampleValue:
        items:
          properties:
            score:
              type: number
            value:
              type: string
          type: object
        type: array
      value:
        items:
          properties:
            score:
              type: number
            value:
              type: string
          type: object
        type: array
    type: object
  domain.MetaData:
    properties:
      description:
        type: string
      faviconImageUrl:
        type: string
      screenshotImageUrl:
        type: string
    type: object
  domain.Organization:
    properties:
      created_at:
        type: string
      name:
        type: string
      organization_id:
        type: integer
      type:
        $ref: '#/definitions/domain.OrganizationType'
      updated_at:
        type: string
    type: object
  domain.OrganizationType:
    enum:
    - advertiser
    - affiliate
    - platform_owner
    type: string
    x-enum-varnames:
    - OrganizationTypeAdvertiser
    - OrganizationTypeAffiliate
    - OrganizationTypePlatformOwner
  domain.PaymentDetails:
    properties:
      account_number:
        type: string
      ach_account_type:
        description: ACH details
        type: string
      additional_details:
        additionalProperties: true
        description: Additional details for other payment types
        type: object
      bank_address:
        type: string
      bank_name:
        description: Wire transfer details
        type: string
      crypto_address:
        type: string
      crypto_wallet_type:
        description: Crypto details
        type: string
      iban:
        type: string
      mailing_address:
        allOf:
        - $ref: '#/definitions/domain.BillingAddress'
        description: Check details
      paypal_email:
        description: PayPal details
        type: string
      routing_number:
        type: string
      swift_code:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/domain.PaymentDetailsType'
        description: Payment type for validation and processing
    type: object
  domain.PaymentDetailsType:
    enum:
    - wire
    - ach
    - check
    - paypal
    - crypto
    - other
    type: string
    x-enum-varnames:
    - PaymentDetailsTypeWire
    - PaymentDetailsTypeACH
    - PaymentDetailsTypeCheck
    - PaymentDetailsTypePayPal
    - PaymentDetailsTypeCrypto
    - PaymentDetailsTypeOther
  domain.PaymentType:
    enum:
    - wire
    - ach
    - check
    - paypal
    - crypto
    - other
    type: string
    x-enum-varnames:
    - PaymentTypeWire
    - PaymentTypeACH
    - PaymentTypeCheck
    - PaymentTypePayPal
    - PaymentTypeCrypto
    - PaymentTypeOther
  domain.Profile:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        description: Pointer for NULLable
        type: string
      id:
        description: Stores the auth.uid() from Supabase Auth
        type: string
      last_name:
        description: Pointer for NULLable
        type: string
      organization_id:
        description: Pointer for NULLable
        type: integer
      role_id:
        type: integer
      role_name:
        description: Mandatory role name
        type: string
      updated_at:
        type: string
    type: object
  domain.SocialMediaData:
    properties:
      count:
        type: integer
      socialsAvailable:
        items:
          type: string
        type: array
      value:
        additionalProperties:
          type: string
        type: object
    type: object
  domain.VerticalData:
    properties:
      count:
        type: integer
      sampleValue:
        properties:
          name:
            type: string
          rank:
            type: integer
          score:
            type: integer
        type: object
      value:
        items:
          properties:
            name:
              type: string
            rank:
              type: integer
            score:
              type: integer
          type: object
        type: array
    type: object
  handlers.AffiliatesSearchRequest:
    properties:
      country:
        description: Country code to filter by (optional)
        example: US
        type: string
      domain:
        description: Domain name to search for (optional) - partial matching like
          auto-completion
        example: example.com
        type: string
      offset:
        description: Page size (number of results per page)
        example: 10
        type: integer
      page:
        description: Page number for pagination
        example: 1
        type: integer
      partner_domains:
        description: Partner domains to search for (optional)
        example:
        - amazon.com
        - etsy.com
        items:
          type: string
        type: array
      verticals:
        description: Verticals to filter by (optional) - matches verticalsV2 names
        example:
        - E-commerce
        - Fashion / Clothing
        items:
          type: string
        type: array
    type: object
  handlers.AffiliatesSearchResponse:
    properties:
      data:
        description: List of affiliate publishers matching the search criteria
        items:
          $ref: '#/definitions/domain.AnalyticsPublisherResponse'
        type: array
      offset:
        description: Page size (number of results per page)
        type: integer
      page:
        description: Current page number
        type: integer
      total:
        description: Total number of items found matching the search criteria
        type: integer
    type: object
  handlers.CreateAdvertiserRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      domain:
        type: string
    required:
    - data
    - domain
    type: object
  handlers.CreateAffiliateProviderMappingRequest:
    properties:
      affiliate_id:
        description: Affiliate ID
        example: 1
        type: integer
      provider_affiliate_id:
        description: Provider's affiliate ID
        example: aff-12345
        type: string
      provider_config:
        description: |-
          Provider configuration in JSON format
          swagger:strfmt json
        type: object
      provider_type:
        description: Provider type (e.g., 'everflow')
        example: everflow
        type: string
    required:
    - affiliate_id
    - provider_type
    type: object
  handlers.CreateAffiliateRequest:
    properties:
      contact_email:
        description: Contact email address
        example: affiliate@example.com
        type: string
      name:
        description: Affiliate name
        example: Example Affiliate
        type: string
      organization_id:
        description: Organization ID
        example: 1
        type: integer
      payment_details:
        description: |-
          Payment details in JSON format
          swagger:strfmt json
        type: object
      status:
        description: Status of the affiliate (active, pending, inactive, rejected)
        example: active
        type: string
    required:
    - name
    - organization_id
    type: object
  handlers.CreateOrganizationRequest:
    properties:
      name:
        type: string
      type:
        enum:
        - advertiser
        - affiliate
        - platform_owner
        type: string
    required:
    - name
    - type
    type: object
  handlers.CreatePublisherRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      domain:
        type: string
    required:
    - data
    - domain
    type: object
  handlers.ErrorResponse:
    properties:
      details:
        type: string
      error:
        type: string
    type: object
  handlers.ProfileRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      organization_id:
        type: integer
      role_id:
        type: integer
    type: object
  handlers.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  handlers.SupabaseUserWebhookPayload:
    properties:
      record:
        properties:
          email:
            type: string
          id:
            type: string
        type: object
      table:
        description: e.g., "users"
        type: string
      type:
        description: e.g., "INSERT"
        type: string
    type: object
  handlers.UpdateAffiliateProviderMappingRequest:
    properties:
      provider_affiliate_id:
        description: Provider's affiliate ID
        example: aff-12345
        type: string
      provider_config:
        description: |-
          Provider configuration in JSON format
          swagger:strfmt json
        type: object
    type: object
  handlers.UpdateAffiliateRequest:
    properties:
      contact_email:
        description: Contact email address
        example: updated@example.com
        type: string
      name:
        description: Affiliate name
        example: Updated Affiliate
        type: string
      payment_details:
        description: |-
          Payment details in JSON format
          swagger:strfmt json
        type: object
      status:
        description: Status of the affiliate (active, pending, inactive, rejected)
        example: active
        type: string
    required:
    - name
    - status
    type: object
  handlers.UpdateOrganizationRequest:
    properties:
      name:
        type: string
      type:
        enum:
        - advertiser
        - affiliate
        - platform_owner
        type: string
    required:
    - name
    - type
    type: object
  handlers.UpdateProfileRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      organization_id:
        type: integer
      role_id:
        type: integer
    type: object
  handlers.UpsertProfileRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      organization_id:
        type: integer
      role_id:
        type: integer
    type: object
  models.AdvertiserResponse:
    properties:
      accounting_contact_email:
        type: string
      advertiser_id:
        type: integer
      affiliate_id_macro:
        type: string
      attribution_method:
        type: string
      attribution_priority:
        type: string
      billing_details:
        $ref: '#/definitions/domain.BillingDetails'
      contact_email:
        type: string
      created_at:
        type: string
      default_currency_id:
        type: string
      email_attribution_method:
        type: string
      internal_notes:
        type: string
      name:
        type: string
      offer_id_macro:
        type: string
      organization_id:
        type: integer
      platform_name:
        type: string
      platform_url:
        type: string
      platform_username:
        type: string
      reporting_timezone_id:
        type: integer
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.CampaignListResponse:
    properties:
      campaigns:
        items:
          $ref: '#/definitions/models.CampaignResponse'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  models.CampaignResponse:
    properties:
      advertiser_id:
        type: integer
      billing_model:
        description: Payout and revenue configuration
        type: string
      campaign_id:
        type: integer
      conversion_method:
        type: string
      created_at:
        type: string
      currency_id:
        type: string
      daily_click_cap:
        type: integer
      daily_conversion_cap:
        type: integer
      description:
        type: string
      destination_url:
        description: Core campaign fields
        type: string
      end_date:
        type: string
      global_click_cap:
        type: integer
      global_conversion_cap:
        type: integer
      internal_notes:
        type: string
      is_caps_enabled:
        description: Caps and limits
        type: boolean
      monthly_click_cap:
        type: integer
      monthly_conversion_cap:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      payout_amount:
        type: number
      payout_structure:
        type: string
      preview_url:
        type: string
      revenue_amount:
        type: number
      revenue_structure:
        type: string
      session_definition:
        type: string
      session_duration:
        type: integer
      start_date:
        type: string
      status:
        type: string
      terms_and_conditions:
        type: string
      thumbnail_url:
        type: string
      updated_at:
        type: string
      visibility:
        type: string
      weekly_click_cap:
        type: integer
      weekly_conversion_cap:
        type: integer
    type: object
  models.CreateAdvertiserProviderMappingRequest:
    properties:
      provider_mapping:
        $ref: '#/definitions/domain.AdvertiserProviderMapping'
    required:
    - provider_mapping
    type: object
  models.CreateAdvertiserProviderMappingResponse:
    properties:
      provider_mapping:
        $ref: '#/definitions/domain.AdvertiserProviderMapping'
    type: object
  models.CreateAdvertiserRequest:
    properties:
      accounting_contact_email:
        type: string
      affiliate_id_macro:
        type: string
      attribution_method:
        type: string
      attribution_priority:
        type: string
      billing_details:
        $ref: '#/definitions/domain.BillingDetails'
      contact_email:
        type: string
      default_currency_id:
        type: string
      email_attribution_method:
        type: string
      internal_notes:
        type: string
      name:
        type: string
      offer_id_macro:
        type: string
      organization_id:
        type: integer
      platform_name:
        type: string
      platform_url:
        type: string
      platform_username:
        type: string
      reporting_timezone_id:
        type: integer
      status:
        type: string
    required:
    - name
    - organization_id
    type: object
  models.CreateCampaignRequest:
    properties:
      advertiser_id:
        type: integer
      billing_model:
        description: Payout and revenue configuration
        enum:
        - click
        - conversion
        type: string
      conversion_method:
        enum:
        - server_postback
        - pixel
        type: string
      currency_id:
        type: string
      daily_click_cap:
        type: integer
      daily_conversion_cap:
        type: integer
      description:
        type: string
      destination_url:
        description: Core campaign fields
        type: string
      end_date:
        type: string
      global_click_cap:
        type: integer
      global_conversion_cap:
        type: integer
      internal_notes:
        type: string
      is_caps_enabled:
        description: Caps and limits
        type: boolean
      monthly_click_cap:
        type: integer
      monthly_conversion_cap:
        type: integer
      name:
        type: string
      organization_id:
        type: integer
      payout_amount:
        minimum: 0
        type: number
      payout_structure:
        enum:
        - fixed
        - percentage
        type: string
      preview_url:
        type: string
      revenue_amount:
        minimum: 0
        type: number
      revenue_structure:
        enum:
        - fixed
        - percentage
        type: string
      session_definition:
        enum:
        - cookie
        - ip
        - fingerprint
        type: string
      session_duration:
        type: integer
      start_date:
        type: string
      status:
        enum:
        - draft
        - active
        - paused
        - archived
        type: string
      terms_and_conditions:
        type: string
      thumbnail_url:
        type: string
      visibility:
        enum:
        - public
        - require_approval
        - private
        type: string
      weekly_click_cap:
        type: integer
      weekly_conversion_cap:
        type: integer
    required:
    - advertiser_id
    - name
    - organization_id
    - status
    type: object
  models.GetAdvertiserProviderMappingResponse:
    properties:
      provider_mapping:
        $ref: '#/definitions/domain.AdvertiserProviderMapping'
    type: object
  models.TrackingLinkGenerationRequest:
    properties:
      affiliate_id:
        example: 1
        type: integer
      campaign_id:
        example: 1
        type: integer
      creative_id:
        example: 1
        type: integer
      description:
        example: Tracking link for Facebook traffic
        type: string
      internal_notes:
        example: High-performing traffic source
        type: string
      is_encrypt_parameters:
        example: false
        type: boolean
      is_redirect_link:
        example: true
        type: boolean
      name:
        example: Facebook Campaign Link
        type: string
      network_offer_url_id:
        example: 1
        type: integer
      network_tracking_domain_id:
        example: 1
        type: integer
      network_traffic_source_id:
        example: 1
        type: integer
      source_id:
        example: facebook
        type: string
      sub1:
        example: campaign_123
        type: string
      sub2:
        example: adset_456
        type: string
      sub3:
        example: ad_789
        type: string
      sub4:
        example: placement_mobile
        type: string
      sub5:
        example: audience_lookalike
        type: string
      tags:
        example: facebook,mobile,lookalike
        type: string
    required:
    - affiliate_id
    - campaign_id
    - name
    type: object
  models.TrackingLinkGenerationResponse:
    properties:
      generated_url:
        example: https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123
        type: string
      qr_code_url:
        example: https://api.example.com/tracking-links/1/qr
        type: string
      tracking_link:
        $ref: '#/definitions/models.TrackingLinkResponse'
    type: object
  models.TrackingLinkListResponse:
    properties:
      page:
        example: 1
        type: integer
      page_size:
        example: 20
        type: integer
      total:
        example: 150
        type: integer
      total_pages:
        example: 8
        type: integer
      tracking_links:
        items:
          $ref: '#/definitions/models.TrackingLinkResponse'
        type: array
    type: object
  models.TrackingLinkRequest:
    properties:
      affiliate_id:
        example: 1
        type: integer
      campaign_id:
        example: 1
        type: integer
      description:
        example: Tracking link for Facebook traffic
        type: string
      internal_notes:
        example: High-performing traffic source
        type: string
      is_encrypt_parameters:
        example: false
        type: boolean
      is_redirect_link:
        example: true
        type: boolean
      name:
        example: Facebook Campaign Link
        type: string
      source_id:
        example: facebook
        type: string
      status:
        example: active
        type: string
      sub1:
        example: campaign_123
        type: string
      sub2:
        example: adset_456
        type: string
      sub3:
        example: ad_789
        type: string
      sub4:
        example: placement_mobile
        type: string
      sub5:
        example: audience_lookalike
        type: string
      tags:
        example: facebook,mobile,lookalike
        type: string
    required:
    - affiliate_id
    - campaign_id
    - name
    - status
    type: object
  models.TrackingLinkResponse:
    properties:
      affiliate_id:
        example: 1
        type: integer
      campaign_id:
        example: 1
        type: integer
      created_at:
        example: "2023-12-01T10:00:00Z"
        type: string
      description:
        example: Tracking link for Facebook traffic
        type: string
      internal_notes:
        example: High-performing traffic source
        type: string
      is_encrypt_parameters:
        example: false
        type: boolean
      is_redirect_link:
        example: true
        type: boolean
      name:
        example: Facebook Campaign Link
        type: string
      organization_id:
        example: 1
        type: integer
      source_id:
        example: facebook
        type: string
      status:
        example: active
        type: string
      sub1:
        example: campaign_123
        type: string
      sub2:
        example: adset_456
        type: string
      sub3:
        example: ad_789
        type: string
      sub4:
        example: placement_mobile
        type: string
      sub5:
        example: audience_lookalike
        type: string
      tags:
        example: facebook,mobile,lookalike
        type: string
      tracking_link_id:
        example: 1
        type: integer
      tracking_url:
        example: https://tracking.example.com/ABC123/DEF456/?sub1=campaign_123
        type: string
      updated_at:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  models.TrackingLinkUpdateRequest:
    properties:
      description:
        example: Tracking link for Facebook traffic
        type: string
      internal_notes:
        example: High-performing traffic source
        type: string
      is_encrypt_parameters:
        example: false
        type: boolean
      is_redirect_link:
        example: true
        type: boolean
      name:
        example: Facebook Campaign Link
        type: string
      source_id:
        example: facebook
        type: string
      status:
        example: active
        type: string
      sub1:
        example: campaign_123
        type: string
      sub2:
        example: adset_456
        type: string
      sub3:
        example: ad_789
        type: string
      sub4:
        example: placement_mobile
        type: string
      sub5:
        example: audience_lookalike
        type: string
      tags:
        example: facebook,mobile,lookalike
        type: string
    type: object
  models.UpdateAdvertiserProviderMappingRequest:
    properties:
      provider_mapping:
        $ref: '#/definitions/domain.AdvertiserProviderMapping'
    required:
    - provider_mapping
    type: object
  models.UpdateAdvertiserRequest:
    properties:
      accounting_contact_email:
        type: string
      affiliate_id_macro:
        type: string
      attribution_method:
        type: string
      attribution_priority:
        type: string
      billing_details:
        $ref: '#/definitions/domain.BillingDetails'
      contact_email:
        type: string
      default_currency_id:
        type: string
      email_attribution_method:
        type: string
      internal_notes:
        type: string
      name:
        type: string
      offer_id_macro:
        type: string
      platform_name:
        type: string
      platform_url:
        type: string
      platform_username:
        type: string
      reporting_timezone_id:
        type: integer
      status:
        type: string
    required:
    - name
    - status
    type: object
  models.UpdateCampaignRequest:
    properties:
      billing_model:
        description: Payout and revenue configuration
        enum:
        - click
        - conversion
        type: string
      conversion_method:
        enum:
        - server_postback
        - pixel
        type: string
      currency_id:
        type: string
      daily_click_cap:
        type: integer
      daily_conversion_cap:
        type: integer
      description:
        type: string
      destination_url:
        description: Core campaign fields
        type: string
      end_date:
        type: string
      global_click_cap:
        type: integer
      global_conversion_cap:
        type: integer
      internal_notes:
        type: string
      is_caps_enabled:
        description: Caps and limits
        type: boolean
      monthly_click_cap:
        type: integer
      monthly_conversion_cap:
        type: integer
      name:
        type: string
      payout_amount:
        minimum: 0
        type: number
      payout_structure:
        enum:
        - fixed
        - percentage
        type: string
      preview_url:
        type: string
      revenue_amount:
        minimum: 0
        type: number
      revenue_structure:
        enum:
        - fixed
        - percentage
        type: string
      session_definition:
        enum:
        - cookie
        - ip
        - fingerprint
        type: string
      session_duration:
        type: integer
      start_date:
        type: string
      status:
        enum:
        - draft
        - active
        - paused
        - archived
        type: string
      terms_and_conditions:
        type: string
      thumbnail_url:
        type: string
      visibility:
        enum:
        - public
        - require_approval
        - private
        type: string
      weekly_click_cap:
        type: integer
      weekly_conversion_cap:
        type: integer
    required:
    - name
    - status
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: API Server for Affiliate Backend Application
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Affiliate Backend API
  version: "1.0"
paths:
  /advertiser-provider-mappings:
    post:
      consumes:
      - application/json
      description: Creates a new advertiser provider mapping
      parameters:
      - description: Provider mapping details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateAdvertiserProviderMappingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created provider mapping
          schema:
            $ref: '#/definitions/models.CreateAdvertiserProviderMappingResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create advertiser provider mapping
      tags:
      - advertiser-provider-mappings
  /advertiser-provider-mappings/{mappingId}:
    delete:
      consumes:
      - application/json
      description: Deletes an advertiser provider mapping by mapping ID
      parameters:
      - description: Mapping ID
        in: path
        name: mappingId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid mapping ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete advertiser provider mapping
      tags:
      - advertiser-provider-mappings
    put:
      consumes:
      - application/json
      description: Updates an advertiser provider mapping by mapping ID
      parameters:
      - description: Mapping ID
        in: path
        name: mappingId
        required: true
        type: integer
      - description: Provider mapping details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAdvertiserProviderMappingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update advertiser provider mapping
      tags:
      - advertiser-provider-mappings
  /advertisers:
    post:
      consumes:
      - application/json
      description: Creates a new advertiser with the given details
      parameters:
      - description: Advertiser details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.CreateAdvertiserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created advertiser
          schema:
            $ref: '#/definitions/models.AdvertiserResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new advertiser
      tags:
      - advertisers
  /advertisers/{advertiser_id}/campaigns:
    get:
      description: Retrieve campaigns for a specific advertiser with pagination
      parameters:
      - description: Advertiser ID
        in: path
        name: advertiser_id
        required: true
        type: integer
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 20, max: 100)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CampaignListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List campaigns by advertiser
      tags:
      - campaigns
  /advertisers/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an advertiser by its ID
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid advertiser ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete advertiser
      tags:
      - advertisers
    get:
      consumes:
      - application/json
      description: Retrieves an advertiser by its ID
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Advertiser details
          schema:
            $ref: '#/definitions/models.AdvertiserResponse'
        "400":
          description: Invalid advertiser ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get advertiser by ID
      tags:
      - advertisers
    put:
      consumes:
      - application/json
      description: Updates an advertiser with the given details
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      - description: Advertiser details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UpdateAdvertiserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated advertiser
          schema:
            $ref: '#/definitions/models.AdvertiserResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update advertiser
      tags:
      - advertisers
  /advertisers/{id}/compare-with-everflow:
    get:
      consumes:
      - application/json
      description: Compares an advertiser with its Everflow counterpart and returns
        discrepancies
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Comparison results with discrepancies
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid advertiser ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Compare advertiser with Everflow
      tags:
      - advertisers
  /advertisers/{id}/provider-mappings/{providerType}:
    get:
      consumes:
      - application/json
      description: Retrieves an advertiser provider mapping by advertiser ID and provider
        type
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider type
        in: path
        name: providerType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Provider mapping details
          schema:
            $ref: '#/definitions/models.GetAdvertiserProviderMappingResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Provider mapping not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get advertiser provider mapping
      tags:
      - advertisers
  /advertisers/{id}/sync-from-everflow:
    post:
      consumes:
      - application/json
      description: Syncs an advertiser from the Everflow platform
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Sync completed successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid advertiser ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sync advertiser from Everflow
      tags:
      - advertisers
  /advertisers/{id}/sync-to-everflow:
    post:
      consumes:
      - application/json
      description: Syncs an advertiser to the Everflow platform
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Sync initiated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid advertiser ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Advertiser not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Sync advertiser to Everflow
      tags:
      - advertisers
  /affiliate-provider-mappings:
    post:
      consumes:
      - application/json
      description: Creates a new mapping between an affiliate and a provider
      parameters:
      - description: Mapping details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAffiliateProviderMappingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created mapping
          schema:
            $ref: '#/definitions/domain.AffiliateProviderMapping'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new affiliate provider mapping
      tags:
      - affiliates
  /affiliate-provider-mappings/{mappingId}:
    delete:
      consumes:
      - application/json
      description: Deletes a mapping between an affiliate and a provider
      parameters:
      - description: Mapping ID
        in: path
        name: mappingId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid mapping ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Mapping not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete affiliate provider mapping
      tags:
      - affiliates
    put:
      consumes:
      - application/json
      description: Updates a mapping between an affiliate and a provider
      parameters:
      - description: Mapping ID
        in: path
        name: mappingId
        required: true
        type: integer
      - description: Mapping details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateAffiliateProviderMappingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated mapping
          schema:
            $ref: '#/definitions/domain.AffiliateProviderMapping'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Mapping not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update affiliate provider mapping
      tags:
      - affiliates
  /affiliates:
    post:
      consumes:
      - application/json
      description: Creates a new affiliate with the given details
      parameters:
      - description: Affiliate details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAffiliateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created affiliate
          schema:
            $ref: '#/definitions/domain.Affiliate'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new affiliate
      tags:
      - affiliates
  /affiliates/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an affiliate by its ID
      parameters:
      - description: Affiliate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid affiliate ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Affiliate not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete affiliate
      tags:
      - affiliates
    get:
      consumes:
      - application/json
      description: Retrieves an affiliate by its ID
      parameters:
      - description: Affiliate ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Affiliate details
          schema:
            $ref: '#/definitions/domain.Affiliate'
        "400":
          description: Invalid affiliate ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Affiliate not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get affiliate by ID
      tags:
      - affiliates
    put:
      consumes:
      - application/json
      description: Updates an affiliate with the given details
      parameters:
      - description: Affiliate ID
        in: path
        name: id
        required: true
        type: integer
      - description: Affiliate details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateAffiliateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated affiliate
          schema:
            $ref: '#/definitions/domain.Affiliate'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Affiliate not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update affiliate
      tags:
      - affiliates
  /affiliates/{id}/provider-mappings/{providerType}:
    get:
      consumes:
      - application/json
      description: Retrieves a mapping between an affiliate and a provider
      parameters:
      - description: Affiliate ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider Type
        in: path
        name: providerType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Mapping details
          schema:
            $ref: '#/definitions/domain.AffiliateProviderMapping'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Mapping not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get affiliate provider mapping
      tags:
      - affiliates
  /affiliates/{id}/tracking-links:
    get:
      description: Retrieve a list of tracking links for a specific affiliate
      parameters:
      - description: Affiliate ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List tracking links by affiliate
      tags:
      - tracking-links
  /affiliates/search:
    post:
      consumes:
      - application/json
      description: Search for affiliates/publishers with domain auto-completion and
        filtered by country, partner domains, and/or verticals with full publisher
        data, sorted by number of partners. Accessible by advertisers, affiliate managers,
        and admins.
      parameters:
      - description: Search parameters
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.AffiliatesSearchRequest'
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Search results with data array and total count
          schema:
            $ref: '#/definitions/handlers.AffiliatesSearchResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Search affiliates by domain, country, partner domains, and verticals
      tags:
      - affiliates
  /api/v1/analytics/advertisers:
    post:
      consumes:
      - application/json
      description: Create a new advertiser analytics entry
      parameters:
      - description: Advertiser data
        in: body
        name: advertiser
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateAdvertiserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Advertiser created successfully
          schema:
            allOf:
            - $ref: '#/definitions/handlers.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.AnalyticsAdvertiser'
              type: object
        "400":
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create advertiser analytics data
      tags:
      - Analytics
  /api/v1/analytics/advertisers/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed analytics data for a specific advertiser
      parameters:
      - description: Advertiser ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Advertiser analytics data
          schema:
            allOf:
            - $ref: '#/definitions/handlers.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.AnalyticsAdvertiserResponse'
              type: object
        "400":
          description: Bad request - invalid ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Advertiser not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get advertiser analytics data
      tags:
      - Analytics
  /api/v1/analytics/affiliates:
    post:
      consumes:
      - application/json
      description: Create a new publisher analytics entry
      parameters:
      - description: Publisher data
        in: body
        name: publisher
        required: true
        schema:
          $ref: '#/definitions/handlers.CreatePublisherRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Publisher created successfully
          schema:
            allOf:
            - $ref: '#/definitions/handlers.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.AnalyticsPublisher'
              type: object
        "400":
          description: Bad request - invalid data
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create publisher analytics data
      tags:
      - Analytics
  /api/v1/analytics/affiliates/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve detailed analytics data for a specific publisher (affiliate)
      parameters:
      - description: Publisher ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Publisher analytics data
          schema:
            allOf:
            - $ref: '#/definitions/handlers.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/domain.AnalyticsPublisherResponse'
              type: object
        "400":
          description: Bad request - invalid ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Publisher not found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get publisher analytics data
      tags:
      - Analytics
  /api/v1/analytics/autocomplete:
    get:
      consumes:
      - application/json
      description: Search advertisers and/or publishers by domain name for autocompletion
        (minimum 3 characters)
      parameters:
      - description: Search query (minimum 3 characters)
        in: query
        minLength: 3
        name: q
        required: true
        type: string
      - default: both
        description: Organization type filter
        enum:
        - advertiser
        - publisher
        - both
        in: query
        name: type
        type: string
      - default: 10
        description: Maximum number of results
        in: query
        maximum: 50
        minimum: 1
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Autocompletion results
          schema:
            allOf:
            - $ref: '#/definitions/handlers.SuccessResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/domain.AutocompleteResult'
                  type: array
              type: object
        "400":
          description: Bad request - invalid parameters
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Search organizations for autocompletion
      tags:
      - Analytics
  /campaigns:
    post:
      consumes:
      - application/json
      description: Create a new campaign with the provided details
      parameters:
      - description: Campaign creation request
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/models.CreateCampaignRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CampaignResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new campaign
      tags:
      - campaigns
  /campaigns/{id}:
    delete:
      description: Delete a campaign by its ID
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete a campaign
      tags:
      - campaigns
    get:
      description: Retrieve a campaign by its ID
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CampaignResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a campaign by ID
      tags:
      - campaigns
    put:
      consumes:
      - application/json
      description: Update an existing campaign with the provided details
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      - description: Campaign update request
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCampaignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CampaignResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a campaign
      tags:
      - campaigns
  /campaigns/{id}/tracking-links:
    get:
      description: Retrieve a list of tracking links for a specific campaign
      parameters:
      - description: Campaign ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List tracking links by campaign
      tags:
      - tracking-links
  /health:
    get:
      description: Returns the health status of the API
      produces:
      - application/json
      responses:
        "200":
          description: Status UP
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - system
  /organizations:
    get:
      consumes:
      - application/json
      description: Retrieves a list of organizations with pagination
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of organizations
          schema:
            items:
              $ref: '#/definitions/domain.Organization'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List organizations
      tags:
      - organizations
    post:
      consumes:
      - application/json
      description: Creates a new organization with the given name
      parameters:
      - description: Organization details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateOrganizationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created organization
          schema:
            $ref: '#/definitions/domain.Organization'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - Only admins can create organizations
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new organization
      tags:
      - organizations
  /organizations/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an organization by its ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete organization
      tags:
      - organizations
    get:
      consumes:
      - application/json
      description: Retrieves an organization by its ID
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Organization details
          schema:
            $ref: '#/definitions/domain.Organization'
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get organization by ID
      tags:
      - organizations
    put:
      consumes:
      - application/json
      description: Updates an organization with the given details
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      - description: Organization details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateOrganizationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated organization
          schema:
            $ref: '#/definitions/domain.Organization'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Organization not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update organization
      tags:
      - organizations
  /organizations/{id}/advertisers:
    get:
      consumes:
      - application/json
      description: Retrieves a list of advertisers for an organization with pagination
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of advertisers
          schema:
            items:
              $ref: '#/definitions/domain.Advertiser'
            type: array
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden - User doesn't have permission
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List advertisers by organization
      tags:
      - advertisers
  /organizations/{id}/affiliates:
    get:
      consumes:
      - application/json
      description: Retrieves a list of affiliates for an organization with pagination
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 10)'
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of affiliates
          schema:
            items:
              $ref: '#/definitions/domain.Affiliate'
            type: array
        "400":
          description: Invalid organization ID
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List affiliates by organization
      tags:
      - affiliates
  /organizations/{organization_id}/campaigns:
    get:
      description: Retrieve campaigns for a specific organization with pagination
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Page size (default: 20, max: 100)'
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CampaignListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List campaigns by organization
      tags:
      - campaigns
  /organizations/{organization_id}/tracking-links:
    get:
      description: Retrieve a list of tracking links for a specific organization
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: List tracking links by organization
      tags:
      - tracking-links
    post:
      consumes:
      - application/json
      description: Create a new tracking link for a campaign and affiliate
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking link creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TrackingLinkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TrackingLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Create a new tracking link
      tags:
      - tracking-links
  /organizations/{organization_id}/tracking-links/{tracking_link_id}:
    delete:
      description: Delete a tracking link by its ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking Link ID
        in: path
        name: tracking_link_id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Delete a tracking link
      tags:
      - tracking-links
    get:
      description: Retrieve a tracking link by its ID
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking Link ID
        in: path
        name: tracking_link_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get a tracking link
      tags:
      - tracking-links
    put:
      consumes:
      - application/json
      description: Update an existing tracking link
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking Link ID
        in: path
        name: tracking_link_id
        required: true
        type: integer
      - description: Tracking link update request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TrackingLinkUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Update a tracking link
      tags:
      - tracking-links
  /organizations/{organization_id}/tracking-links/{tracking_link_id}/qr:
    get:
      description: Generate and return a QR code image for a tracking link
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking Link ID
        in: path
        name: tracking_link_id
        required: true
        type: integer
      produces:
      - image/png
      responses:
        "200":
          description: QR code image" encoded with base64
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Get tracking link QR code
      tags:
      - tracking-links
  /organizations/{organization_id}/tracking-links/{tracking_link_id}/regenerate:
    post:
      description: Regenerate an existing tracking link with provider integration
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking Link ID
        in: path
        name: tracking_link_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TrackingLinkGenerationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Regenerate a tracking link
      tags:
      - tracking-links
  /organizations/{organization_id}/tracking-links/generate:
    post:
      consumes:
      - application/json
      description: Generate a new tracking link with provider integration for a campaign
        and affiliate
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: integer
      - description: Tracking link generation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TrackingLinkGenerationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TrackingLinkGenerationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Generate a new tracking link
      tags:
      - tracking-links
  /profiles:
    post:
      consumes:
      - application/json
      description: Creates a new user profile
      parameters:
      - description: Profile information
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handlers.ProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created profile
          schema:
            $ref: '#/definitions/domain.Profile'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create a new profile
      tags:
      - profile
  /profiles/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing user profile
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Profile deleted successfully
        "400":
          description: Invalid profile ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete a profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Updates an existing user profile with only the provided fields
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated profile information
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Updated profile
          schema:
            $ref: '#/definitions/domain.Profile'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update a profile
      tags:
      - profile
  /profiles/upsert:
    post:
      consumes:
      - application/json
      description: Creates a new profile if it doesn't exist, or updates an existing
        one
      parameters:
      - description: Profile information
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/handlers.UpsertProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Upserted profile
          schema:
            $ref: '#/definitions/domain.Profile'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Upsert a profile
      tags:
      - profile
  /public/webhooks/supabase/new-user:
    post:
      consumes:
      - application/json
      description: Process webhook from Supabase when a new user is created
      parameters:
      - description: Webhook payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.SupabaseUserWebhookPayload'
      produces:
      - application/json
      responses:
        "200":
          description: User profile created successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid webhook payload
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Handle Supabase new user webhook
      tags:
      - webhooks
  /users/me:
    get:
      consumes:
      - application/json
      description: Retrieves the profile of the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: User profile
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid user ID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Profile not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get current user profile
      tags:
      - profile
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
